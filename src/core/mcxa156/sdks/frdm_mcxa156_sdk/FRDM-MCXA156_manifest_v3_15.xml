<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_FRDM-MCXA156" name="FRDM-MCXA156" brief="This is SDK version 25.06.00 manifest file. It describes the content of the FRDM-MCXA156 and additional settings for tools that support SDK version 25.06.00" format_version="3.15" api_version="2.0.0" configuration="b9808132bee724791a47c0423a502352" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.15.xsd">
  <!--Timestamp (UTC): 2025-07-01 08:48:48.370307-->
  <!--This manifest is generated based on sdk repo commit: 2893c6df8c59f5763476300b584907c4d59ff2e2-->
  <externalDefinitions>
    <definition extID="com.crt.advproject.config.exe.debug"/>
    <definition extID="com.crt.advproject.config.exe.release"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso250600" name="MCUXpresso250600" version="25.06.00" revision="890 2025-06-27"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
  </compilers>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded_10-2021.10" version="13.2.1" full_name="GCC ARM Embedded 10-2021.10" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
  </toolchains>
  <boards>
    <board id="frdmmcxa156" name="FRDM-MCXA156" version="1.0.0" package="MCXA156VLL">
      <description>FRDM-MCXA156</description>
      <image path="boards/frdmmcxa156" type="image">
        <files mask="frdmmcxa156.png"/>
      </image>
      <examples>
        <example id="frdmmcxa156_ota_mcuboot_basic" name="ota_mcuboot_basic" brief="This projects gives an example of a basic application bootable by MCUBoot" toolchain="armgcc" compiler="compiler_gcc" category="ota_examples" path="boards/frdmmcxa156/ota_examples/ota_mcuboot_basic">
          <external path="boards/frdmmcxa156/ota_examples/ota_mcuboot_basic" type="xml">
            <files mask="ota_mcuboot_basic_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_mcuboot_opensource" name="mcuboot_opensource" brief="MCUboot bootloader" toolchain="armgcc" compiler="compiler_gcc" category="ota_examples" path="boards/frdmmcxa156/ota_examples/mcuboot_opensource">
          <external path="boards/frdmmcxa156/ota_examples/mcuboot_opensource" type="xml">
            <files mask="mcuboot_opensource_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_littlefs_shell_onchip_flash" name="littlefs_shell_onchip_flash" brief="Demonstrates littlefs functionality by commands executed from shell." toolchain="armgcc" compiler="compiler_gcc" category="littlefs_examples" path="boards/frdmmcxa156/littlefs_examples/littlefs_shell_onchip_flash">
          <external path="boards/frdmmcxa156/littlefs_examples/littlefs_shell_onchip_flash" type="xml">
            <files mask="littlefs_shell_onchip_flash_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/frdmmcxa156/freertos_examples/freertos_swtimer">
          <external path="boards/frdmmcxa156/freertos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_freertos_sem_static" name="freertos_sem_static" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/frdmmcxa156/freertos_examples/freertos_sem_static">
          <external path="boards/frdmmcxa156/freertos_examples/freertos_sem_static" type="xml">
            <files mask="freertos_sem_static_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two different tasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/frdmmcxa156/freertos_examples/freertos_sem">
          <external path="boards/frdmmcxa156/freertos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/frdmmcxa156/freertos_examples/freertos_queue">
          <external path="boards/frdmmcxa156/freertos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/frdmmcxa156/freertos_examples/freertos_mutex">
          <external path="boards/frdmmcxa156/freertos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and to provide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; message via debug console utility and suspend itself." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/frdmmcxa156/freertos_examples/freertos_hello">
          <external path="boards/frdmmcxa156/freertos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation from http://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of several tasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data to xQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number of received messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given from vApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/frdmmcxa156/freertos_examples/freertos_generic">
          <external path="boards/frdmmcxa156/freertos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc" compiler="compiler_gcc" category="freertos_examples" path="boards/frdmmcxa156/freertos_examples/freertos_event">
          <external path="boards/frdmmcxa156/freertos_examples/freertos_event" type="xml">
            <files mask="freertos_event_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_i3c_bus_slave" name="i3c_bus_slave" brief="The i3c_bus_slave example shows how to use i3c_bus component to work as i3c bus slave." toolchain="armgcc" compiler="compiler_gcc" category="component_examples/i3c" path="boards/frdmmcxa156/component_examples/i3c_bus/slave">
          <external path="boards/frdmmcxa156/component_examples/i3c_bus/slave" type="xml">
            <files mask="i3c_bus_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_i3c_bus_master" name="i3c_bus_master" brief="The i3c_bus_master example shows how to use i3c_bus component to create I3C bus and i3c master on bus." toolchain="armgcc" compiler="compiler_gcc" category="component_examples/i3c" path="boards/frdmmcxa156/component_examples/i3c_bus/master">
          <external path="boards/frdmmcxa156/component_examples/i3c_bus/master" type="xml">
            <files mask="i3c_bus_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_cmsis_button_toggle_led" name="cmsis_button_toggle_led" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_button_toggle_led example shows how to use gpio driver control gpio pin as input and output. :In this example, gpio driver will set up and config button,led pins. and check button press event. then trigger gpio interrupt, the callback will be use for led toggle." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/gpio" path="boards/frdmmcxa156/cmsis_driver_examples/gpio/button_toggle_led">
          <external path="boards/frdmmcxa156/cmsis_driver_examples/gpio/button_toggle_led" type="xml">
            <files mask="cmsis_button_toggle_led_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_cmsis_lpuart_interrupt_transfer" name="cmsis_lpuart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="boards/frdmmcxa156/cmsis_driver_examples/lpuart/interrupt_transfer">
          <external path="boards/frdmmcxa156/cmsis_driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_cmsis_lpuart_edma_transfer" name="cmsis_lpuart_edma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpuart" path="boards/frdmmcxa156/cmsis_driver_examples/lpuart/edma_transfer">
          <external path="boards/frdmmcxa156/cmsis_driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_cmsis_lpspi_int_b2b_transfer_slave" name="cmsis_lpspi_int_b2b_transfer_slave" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="boards/frdmmcxa156/cmsis_driver_examples/lpspi/int_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/cmsis_driver_examples/lpspi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_cmsis_lpspi_int_b2b_transfer_master" name="cmsis_lpspi_int_b2b_transfer_master" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="boards/frdmmcxa156/cmsis_driver_examples/lpspi/int_b2b_transfer/master">
          <external path="boards/frdmmcxa156/cmsis_driver_examples/lpspi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_cmsis_lpspi_edma_b2b_transfer_slave" name="cmsis_lpspi_edma_b2b_transfer_slave" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="boards/frdmmcxa156/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_cmsis_lpspi_edma_b2b_transfer_master" name="cmsis_lpspi_edma_b2b_transfer_master" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpspi" path="boards/frdmmcxa156/cmsis_driver_examples/lpspi/edma_b2b_transfer/master">
          <external path="boards/frdmmcxa156/cmsis_driver_examples/lpspi/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_cmsis_lpi2c_int_b2b_transfer_slave" name="cmsis_lpi2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="boards/frdmmcxa156/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_cmsis_lpi2c_int_b2b_transfer_master" name="cmsis_lpi2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="boards/frdmmcxa156/cmsis_driver_examples/lpi2c/int_b2b_transfer/master">
          <external path="boards/frdmmcxa156/cmsis_driver_examples/lpi2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_cmsis_lpi2c_edma_b2b_transfer_slave" name="cmsis_lpi2c_edma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="boards/frdmmcxa156/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_cmsis_lpi2c_edma_b2b_transfer_master" name="cmsis_lpi2c_edma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="cmsis_driver_examples/lpi2c" path="boards/frdmmcxa156/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="boards/frdmmcxa156/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_romapi_flashiap" name="romapi_flashiap" brief="The FLASIAP project is a simple demonstration program of the SDK FLASIAP driver. It erases and programs a portion of on-chip flash memory. A message a printed on the UART terminal as various operations on flash memory are performed." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples" path="boards/frdmmcxa156/driver_examples/romapi/flashiap">
          <external path="boards/frdmmcxa156/driver_examples/romapi/flashiap" type="xml">
            <files mask="romapi_flashiap_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_wwdt_example" name="wwdt_example" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,quick test is first implemented to test the wdog.And then after 5 times of refreshing the watchdog, a timeout reset is generated." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/wwdt" path="boards/frdmmcxa156/driver_examples/wwdt">
          <external path="boards/frdmmcxa156/driver_examples/wwdt" type="xml">
            <files mask="wwdt_example_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_waketimer_example" name="waketimer_example" brief="The WAKETIMER project is a simple demonstration program of the SDK WAKETIMER driver. WAKETIMER will trigger every 1 second." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/waketimer" path="boards/frdmmcxa156/driver_examples/waketimer">
          <external path="boards/frdmmcxa156/driver_examples/waketimer" type="xml">
            <files mask="waketimer_example_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_utick_example" name="utick_example" brief="The utick project is a simple demonstration program of the SDK utick driver. It sets up the utick hardware block to trigger a periodic interrupt after every 1 second. When the utick interrupt is triggered a message is printed on the UART terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/utick" path="boards/frdmmcxa156/driver_examples/utick">
          <external path="boards/frdmmcxa156/driver_examples/utick" type="xml">
            <files mask="utick_example_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_trdc" name="trdc" brief="The trdc example shows how to control the memory block checker(MBC) and memory region checker(MRC) access policy using TRDC. In this example, a MRC memory region and a MBC memory block are set to unaccessible, then the hardfault occurs." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/trdc" path="boards/frdmmcxa156/driver_examples/trdc">
          <external path="boards/frdmmcxa156/driver_examples/trdc" type="xml">
            <files mask="trdc_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_pwm" name="pwm" brief="The PWM project is a simple demonstration program of the SDK PWM driver.The pulse width modulator (PWM) module contains PWM submodules, each of which is set up to control a single half-bridge power stage.Fault channel support is provided. This PWM module can generate various switching patterns, including highly sophisticated waveforms.It can be used to control all known Switched Mode Power Supplies (SMPS) topologies." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pwm" path="boards/frdmmcxa156/driver_examples/pwm">
          <external path="boards/frdmmcxa156/driver_examples/pwm" type="xml">
            <files mask="pwm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_ostimer_example" name="ostimer_example" brief="The OSTIMER project is a simple demonstration program of the SDK OSTIMER driver. It sets the OSTIMER as the wakeup source from deep-sleep mode. After wakeup from deep-sleep mode, OS timer will set match value to trigger the interrupt while the timer count tick reach the match value about every 2 seconds." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/ostimer" path="boards/frdmmcxa156/driver_examples/ostimer">
          <external path="boards/frdmmcxa156/driver_examples/ostimer" type="xml">
            <files mask="ostimer_example_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_mcx_opamp_dac_lpadc" name="mcx_opamp_dac_lpadc" brief="The OPAMP DAC LPADC example demonstrates how to use the OPAMP driver. In this example, the OUTSW, BUFFEN, ADCSW1, and ADCSW2 are enabled, and the user can use the ADC to measure the OPAMPx_INT voltage and the OPAMPx_OBS voltage. The user needs to connect the OPAMP positive input port and negative input port to GND. The positive (OPAMPx_INP0) reference voltage is set to the DAC output, the user selects the OPAMP negative gain by using the PC keyboard, and the positive gain is fixed to 1x, So, the OPAMP output voltage is equal to ((1 + Ngain) / 2)Vpref." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/opamp" path="boards/frdmmcxa156/driver_examples/opamp/opamp_dac_lpadc">
          <external path="boards/frdmmcxa156/driver_examples/opamp/opamp_dac_lpadc" type="xml">
            <files mask="mcx_opamp_dac_lpadc_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_mcx_opamp_basic" name="mcx_opamp_basic" brief="The OPAMP basic example demonstrates how to use the OPAMP driver. In this example, the OPAMP works in the internal gain mode, connect the positive terminal of the OPAMP to the external input source. The OPAMP output is 2X of the external input voltage. When the input voltage changes, the OPAMP output changes accordingly." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/opamp" path="boards/frdmmcxa156/driver_examples/opamp/opamp_basic">
          <external path="boards/frdmmcxa156/driver_examples/opamp/opamp_basic" type="xml">
            <files mask="mcx_opamp_basic_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_romapi_runbootloader" name="romapi_runbootloader" brief="The runbootloader project is a simple demonstration which run into the bootloader with the user parameter. The demo forces the device run into the ISP mode with the specific peripheral." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples" path="boards/frdmmcxa156/driver_examples/romapi/runbootloader">
          <external path="boards/frdmmcxa156/driver_examples/romapi/runbootloader" type="xml">
            <files mask="romapi_runbootloader_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpuart_polling_seven_bits" name="lpuart_polling_seven_bits" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmmcxa156/driver_examples/lpuart/polling_seven_bits">
          <external path="boards/frdmmcxa156/driver_examples/lpuart/polling_seven_bits" type="xml">
            <files mask="lpuart_polling_seven_bits_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpuart_polling" name="lpuart_polling" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmmcxa156/driver_examples/lpuart/polling">
          <external path="boards/frdmmcxa156/driver_examples/lpuart/polling" type="xml">
            <files mask="lpuart_polling_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpuart_interrupt_transfer_seven_bits" name="lpuart_interrupt_transfer_seven_bits" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmmcxa156/driver_examples/lpuart/interrupt_transfer_seven_bits">
          <external path="boards/frdmmcxa156/driver_examples/lpuart/interrupt_transfer_seven_bits" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpuart_interrupt_transfer" name="lpuart_interrupt_transfer" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmmcxa156/driver_examples/lpuart/interrupt_transfer">
          <external path="boards/frdmmcxa156/driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="lpuart_interrupt_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpuart_interrupt_rb_transfer" name="lpuart_interrupt_rb_transfer" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmmcxa156/driver_examples/lpuart/interrupt_rb_transfer">
          <external path="boards/frdmmcxa156/driver_examples/lpuart/interrupt_rb_transfer" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpuart_interrupt" name="lpuart_interrupt" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmmcxa156/driver_examples/lpuart/interrupt">
          <external path="boards/frdmmcxa156/driver_examples/lpuart/interrupt" type="xml">
            <files mask="lpuart_interrupt_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpuart_edma_transfer" name="lpuart_edma_transfer" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpuart" path="boards/frdmmcxa156/driver_examples/lpuart/edma_transfer">
          <external path="boards/frdmmcxa156/driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="lpuart_edma_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lptmr" name="lptmr" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lptmr" path="boards/frdmmcxa156/driver_examples/lptmr">
          <external path="boards/frdmmcxa156/driver_examples/lptmr" type="xml">
            <files mask="lptmr_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpspi_polling_b2b_transfer_slave" name="lpspi_polling_b2b_transfer_slave" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/frdmmcxa156/driver_examples/lpspi/polling_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/driver_examples/lpspi/polling_b2b_transfer/slave" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpspi_polling_b2b_transfer_master" name="lpspi_polling_b2b_transfer_master" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/frdmmcxa156/driver_examples/lpspi/polling_b2b_transfer/master">
          <external path="boards/frdmmcxa156/driver_examples/lpspi/polling_b2b_transfer/master" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpspi_interrupt_b2b_transfer_slave" name="lpspi_interrupt_b2b_transfer_slave" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/frdmmcxa156/driver_examples/lpspi/interrupt_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/driver_examples/lpspi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpspi_interrupt_b2b_transfer_master" name="lpspi_interrupt_b2b_transfer_master" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/frdmmcxa156/driver_examples/lpspi/interrupt_b2b_transfer/master">
          <external path="boards/frdmmcxa156/driver_examples/lpspi/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpspi_interrupt_b2b_slave" name="lpspi_interrupt_b2b_slave" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/frdmmcxa156/driver_examples/lpspi/interrupt_b2b/slave">
          <external path="boards/frdmmcxa156/driver_examples/lpspi/interrupt_b2b/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpspi_interrupt_b2b_master" name="lpspi_interrupt_b2b_master" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/frdmmcxa156/driver_examples/lpspi/interrupt_b2b/master">
          <external path="boards/frdmmcxa156/driver_examples/lpspi/interrupt_b2b/master" type="xml">
            <files mask="lpspi_interrupt_b2b_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpspi_interrupt" name="lpspi_interrupt" brief="The lpspi_functional_interrupt example shows how to use LPSPI driver in interrupt way:In this example , one lpspi instance used as LPSPI master and another lpspi instance used as LPSPI slave .1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/frdmmcxa156/driver_examples/lpspi/interrupt">
          <external path="boards/frdmmcxa156/driver_examples/lpspi/interrupt" type="xml">
            <files mask="lpspi_interrupt_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpspi_edma_b2b_transfer_slave" name="lpspi_edma_b2b_transfer_slave" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/frdmmcxa156/driver_examples/lpspi/edma_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/driver_examples/lpspi/edma_b2b_transfer/slave" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpspi_edma_b2b_transfer_master" name="lpspi_edma_b2b_transfer_master" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpspi" path="boards/frdmmcxa156/driver_examples/lpspi/edma_b2b_transfer/master">
          <external path="boards/frdmmcxa156/driver_examples/lpspi/edma_b2b_transfer/master" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpi2c_polling_b2b_slave" name="lpi2c_polling_b2b_slave" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/frdmmcxa156/driver_examples/lpi2c/polling_b2b/slave">
          <external path="boards/frdmmcxa156/driver_examples/lpi2c/polling_b2b/slave" type="xml">
            <files mask="lpi2c_polling_b2b_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpi2c_polling_b2b_master" name="lpi2c_polling_b2b_master" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/frdmmcxa156/driver_examples/lpi2c/polling_b2b/master">
          <external path="boards/frdmmcxa156/driver_examples/lpi2c/polling_b2b/master" type="xml">
            <files mask="lpi2c_polling_b2b_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpi2c_interrupt_b2b_transfer_slave" name="lpi2c_interrupt_b2b_transfer_slave" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/frdmmcxa156/driver_examples/lpi2c/interrupt_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/driver_examples/lpi2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpi2c_interrupt_b2b_transfer_master" name="lpi2c_interrupt_b2b_transfer_master" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/frdmmcxa156/driver_examples/lpi2c/interrupt_b2b_transfer/master">
          <external path="boards/frdmmcxa156/driver_examples/lpi2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpi2c_interrupt" name="lpi2c_interrupt" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/frdmmcxa156/driver_examples/lpi2c/interrupt">
          <external path="boards/frdmmcxa156/driver_examples/lpi2c/interrupt" type="xml">
            <files mask="lpi2c_interrupt_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpi2c_edma_b2b_transfer_slave" name="lpi2c_edma_b2b_transfer_slave" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/frdmmcxa156/driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpi2c_edma_b2b_transfer_master" name="lpi2c_edma_b2b_transfer_master" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpi2c" path="boards/frdmmcxa156/driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="boards/frdmmcxa156/driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpcmp_round_robin" name="lpcmp_round_robin" brief="The LPCMP round robin example is a simple demonstration program to use the LPCMP driver and help user with a quick start.In this example, user needs to specify which port and channel to fixed, users also need to specify one or more checker channels. Before doing the comparison, it is necessary to preset the comparison result of each checker channel with the fixed channel. Change the input voltage of checker channels, if the output results of the comparator is different from the preset value, an interrupt will be triggered, and the triggered channel's information will be printed on the terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpcmp" path="boards/frdmmcxa156/driver_examples/lpcmp/round_robin">
          <external path="boards/frdmmcxa156/driver_examples/lpcmp/round_robin" type="xml">
            <files mask="lpcmp_round_robin_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpcmp_polling" name="lpcmp_polling" brief="The LPCMP polling Example shows the simplest way to use LPCMP driver and help user with a quick start.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the LPCMP's positive channel input. On the negative side, the internal DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user's voltage crosses the internal DAC's value. The endless loop in main() functionwould detect the logic value of comparator's output, and change the LED. The LED would be turned on when the compareoutput is logic one, or turned off when zero." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpcmp" path="boards/frdmmcxa156/driver_examples/lpcmp/polling">
          <external path="boards/frdmmcxa156/driver_examples/lpcmp/polling" type="xml">
            <files mask="lpcmp_polling_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpcmp_interrupt" name="lpcmp_interrupt" brief="The LPCMP interrupt Example shows how to use interrupt with LPCMP driver.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the LPCMP's positive channel input. On the negative side, the internal DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user-defined channel's voltage crosses the internal DAC's value. The change ofcomparator's output would generate the falling and rising edge events with their interrupts enabled. When any LPCMP interrupt happens, the LPCMP's ISR would turn on the LED light if detecting the output's rising edge, or turn off it whendetecting the output's falling edge." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpcmp" path="boards/frdmmcxa156/driver_examples/lpcmp/interrupt">
          <external path="boards/frdmmcxa156/driver_examples/lpcmp/interrupt" type="xml">
            <files mask="lpcmp_interrupt_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_freqme_interrupt" name="freqme_interrupt" brief="The freqme_interrupt is a demonstration program of the SDK LPC_FREQME driver's features. The example demostrate the usage of frequency measurement operate mode and pulse width measurement operate mode." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/freqme" path="boards/frdmmcxa156/driver_examples/freqme">
          <external path="boards/frdmmcxa156/driver_examples/freqme" type="xml">
            <files mask="freqme_interrupt_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpadc_trigger_exception" name="lpadc_trigger_exception" brief="The lpadc_trigger_exception example demonstrates the usage of trigger exception feature." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpadc" path="boards/frdmmcxa156/driver_examples/lpadc/trigger_exception">
          <external path="boards/frdmmcxa156/driver_examples/lpadc/trigger_exception" type="xml">
            <files mask="lpadc_trigger_exception_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpadc_temperature_measurement" name="lpadc_temperature_measurement" brief="The lpadc_temperature_measurement example shows how to measure the temperature within the internal sensor. In this example, the ADC input channel is mapped to an internal temperature sensor. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value. In ADC ISR, the watermark flag would be cleared by reading the conversion result value. When the conversion done, two valid result will be put in the FIFO, then the temperature can be calculated within the two results and a specific formula." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpadc" path="boards/frdmmcxa156/driver_examples/lpadc/temperature_measurement">
          <external path="boards/frdmmcxa156/driver_examples/lpadc/temperature_measurement" type="xml">
            <files mask="lpadc_temperature_measurement_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpadc_polling" name="lpadc_polling" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpadc" path="boards/frdmmcxa156/driver_examples/lpadc/polling">
          <external path="boards/frdmmcxa156/driver_examples/lpadc/polling" type="xml">
            <files mask="lpadc_polling_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lpadc_interrupt" name="lpadc_interrupt" brief="The lpdc_single_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/lpadc" path="boards/frdmmcxa156/driver_examples/lpadc/interrupt">
          <external path="boards/frdmmcxa156/driver_examples/lpadc/interrupt" type="xml">
            <files mask="lpadc_interrupt_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_i3c_polling_b2b_transfer_slave" name="i3c_polling_b2b_transfer_slave" brief="The i3c_polling_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a polling master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="boards/frdmmcxa156/driver_examples/i3c/polling_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/driver_examples/i3c/polling_b2b_transfer/slave" type="xml">
            <files mask="i3c_polling_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_i3c_polling_b2b_transfer_master" name="i3c_polling_b2b_transfer_master" brief="The i3c_polling_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using polling method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="boards/frdmmcxa156/driver_examples/i3c/polling_b2b_transfer/master">
          <external path="boards/frdmmcxa156/driver_examples/i3c/polling_b2b_transfer/master" type="xml">
            <files mask="i3c_polling_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_i3c_master_read_sensor_p3t1755" name="i3c_master_read_sensor_p3t1755" brief="The i3c_master_read_sensor_p3t1755 example shows how to use i3c driver as master to communicate with sensor P3T1755." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="boards/frdmmcxa156/driver_examples/i3c/master_read_sensor_p3t1755">
          <external path="boards/frdmmcxa156/driver_examples/i3c/master_read_sensor_p3t1755" type="xml">
            <files mask="i3c_master_read_sensor_p3t1755_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_i3c_interrupt_b2b_transfer_slave" name="i3c_interrupt_b2b_transfer_slave" brief="The i3c_interrupt_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a interrupt master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="boards/frdmmcxa156/driver_examples/i3c/interrupt_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/driver_examples/i3c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_i3c_interrupt_b2b_transfer_master" name="i3c_interrupt_b2b_transfer_master" brief="The i3c_interrupt_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using interrupt method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="boards/frdmmcxa156/driver_examples/i3c/interrupt_b2b_transfer/master">
          <external path="boards/frdmmcxa156/driver_examples/i3c/interrupt_b2b_transfer/master" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_i3c_edma_b2b_transfer_slave" name="i3c_edma_b2b_transfer_slave" brief="The i3c_edma_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with EDMA. In this example, one i3c instance as slave and another i3c instance on the other board as master. Slave sends a piece of data to master, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="boards/frdmmcxa156/driver_examples/i3c/edma_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/driver_examples/i3c/edma_b2b_transfer/slave" type="xml">
            <files mask="i3c_edma_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_i3c_edma_b2b_transfer_master" name="i3c_edma_b2b_transfer_master" brief="The i3c_edma_b2b_transfer_master example shows how to use i3c driver as slave to do board to board transfer with EDMA. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i3c" path="boards/frdmmcxa156/driver_examples/i3c/edma_b2b_transfer/master">
          <external path="boards/frdmmcxa156/driver_examples/i3c/edma_b2b_transfer/master" type="xml">
            <files mask="i3c_edma_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_gpio_led_output" name="gpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/gpio" path="boards/frdmmcxa156/driver_examples/gpio/led_output">
          <external path="boards/frdmmcxa156/driver_examples/gpio/led_output" type="xml">
            <files mask="gpio_led_output_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_gpio_input_interrupt" name="gpio_input_interrupt" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the software button to control/toggle the LED." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/gpio" path="boards/frdmmcxa156/driver_examples/gpio/input_interrupt">
          <external path="boards/frdmmcxa156/driver_examples/gpio/input_interrupt" type="xml">
            <files mask="gpio_input_interrupt_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_glikey" name="glikey" brief="The GLIKEY Example project is a demonstration program that uses the MCUX SDK software to show funcionality of GLIKEY IP." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/glikey" path="boards/frdmmcxa156/driver_examples/glikey">
          <external path="boards/frdmmcxa156/driver_examples/glikey" type="xml">
            <files mask="glikey_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_uart_polling_transfer" name="flexio_uart_polling_transfer" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/uart/polling_transfer">
          <external path="boards/frdmmcxa156/driver_examples/flexio/uart/polling_transfer" type="xml">
            <files mask="flexio_uart_polling_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_uart_interrupt_transfer" name="flexio_uart_interrupt_transfer" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/uart/interrupt_transfer">
          <external path="boards/frdmmcxa156/driver_examples/flexio/uart/interrupt_transfer" type="xml">
            <files mask="flexio_uart_interrupt_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_uart_int_rb_transfer" name="flexio_uart_int_rb_transfer" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/uart/int_rb_transfer">
          <external path="boards/frdmmcxa156/driver_examples/flexio/uart/int_rb_transfer" type="xml">
            <files mask="flexio_uart_int_rb_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_uart_edma_transfer" name="flexio_uart_edma_transfer" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/uart/edma_transfer">
          <external path="boards/frdmmcxa156/driver_examples/flexio/uart/edma_transfer" type="xml">
            <files mask="flexio_uart_edma_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_spi_int_lpspi_transfer_slave" name="flexio_spi_int_lpspi_transfer_slave" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/spi/int_lpspi_transfer/slave">
          <external path="boards/frdmmcxa156/driver_examples/flexio/spi/int_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_spi_int_lpspi_transfer_master" name="flexio_spi_int_lpspi_transfer_master" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/spi/int_lpspi_transfer/master">
          <external path="boards/frdmmcxa156/driver_examples/flexio/spi/int_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_spi_int_b2b_transfer_slave" name="flexio_spi_int_b2b_transfer_slave" brief="The flexio_spi_slave_interrupt example shows how to use flexio spi slave  driver in interrupt way:In this example, a flexio simulated slave connect to a flexio simulated spi master." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/spi/int_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/driver_examples/flexio/spi/int_b2b_transfer/slave" type="xml">
            <files mask="flexio_spi_int_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_spi_int_b2b_transfer_master" name="flexio_spi_int_b2b_transfer_master" brief="The flexio_spi_master_interrupt example shows how to use flexio spi master  driver in interrupt way:In this example, a flexio simulated master connect to a flexio simulated spi slave ." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/spi/int_b2b_transfer/master">
          <external path="boards/frdmmcxa156/driver_examples/flexio/spi/int_b2b_transfer/master" type="xml">
            <files mask="flexio_spi_int_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_spi_edma_lpspi_transfer_slave" name="flexio_spi_edma_lpspi_transfer_slave" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/spi/edma_lpspi_transfer/slave">
          <external path="boards/frdmmcxa156/driver_examples/flexio/spi/edma_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_spi_edma_lpspi_transfer_master" name="flexio_spi_edma_lpspi_transfer_master" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/spi/edma_lpspi_transfer/master">
          <external path="boards/frdmmcxa156/driver_examples/flexio/spi/edma_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_spi_edma_b2b_transfer_slave" name="flexio_spi_edma_b2b_transfer_slave" brief="The flexio_spi_slave_edma example shows how to use flexio spi slave  driver in dma way:In this example, a flexio simulated slave connect to a flexio simulated spi master." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/spi/edma_b2b_transfer/slave">
          <external path="boards/frdmmcxa156/driver_examples/flexio/spi/edma_b2b_transfer/slave" type="xml">
            <files mask="flexio_spi_edma_b2b_transfer_slave_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_spi_edma_b2b_transfer_master" name="flexio_spi_edma_b2b_transfer_master" brief="The flexio_spi_master_edma example shows how to use flexio spi master  driver in edma way:In this example, a flexio simulated master connect to a flexio simulated spi slave ." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/spi/edma_b2b_transfer/master">
          <external path="boards/frdmmcxa156/driver_examples/flexio/spi/edma_b2b_transfer/master" type="xml">
            <files mask="flexio_spi_edma_b2b_transfer_master_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_pwm" name="flexio_pwm" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/pwm">
          <external path="boards/frdmmcxa156/driver_examples/flexio/pwm" type="xml">
            <files mask="flexio_pwm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_mculcd_polling" name="flexio_mculcd_polling" brief="The flexio_mculcd_polling example shows how to use flexio mculcd driver polling APIs to drive MCU LCD panel." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/mculcd/polling">
          <external path="boards/frdmmcxa156/driver_examples/flexio/mculcd/polling" type="xml">
            <files mask="flexio_mculcd_polling_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_mculcd_int_transfer" name="flexio_mculcd_int_transfer" brief="The flexio_mculcd_int_transfer example shows how to use flexio mculcd driver interrupt based transactional APIs to drive MCU LCD panel." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/mculcd/int_transfer">
          <external path="boards/frdmmcxa156/driver_examples/flexio/mculcd/int_transfer" type="xml">
            <files mask="flexio_mculcd_int_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_mculcd_edma_transfer" name="flexio_mculcd_edma_transfer" brief="The flexio_mculcd_edma_transfer example shows how to use flexio mculcd edma driver to drive MCU LCD panel." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/mculcd/edma_transfer">
          <external path="boards/frdmmcxa156/driver_examples/flexio/mculcd/edma_transfer" type="xml">
            <files mask="flexio_mculcd_edma_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexio_i2c_interrupt_lpi2c_transfer" name="flexio_i2c_interrupt_lpi2c_transfer" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexio" path="boards/frdmmcxa156/driver_examples/flexio/i2c/interrupt_lpi2c_transfer">
          <external path="boards/frdmmcxa156/driver_examples/flexio/i2c/interrupt_lpi2c_transfer" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexcan_pretended_networking_wakeup" name="flexcan_pretended_networking_wakeup" brief="The flexcan_pretended_networking_wakeup example shows how to wake up FLEXCAN module from Pretended Networking mode:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B will wake up from STOP mode after receive 4 specific frame, and print the message content to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="boards/frdmmcxa156/driver_examples/flexcan/pretended_networking_wakeup">
          <external path="boards/frdmmcxa156/driver_examples/flexcan/pretended_networking_wakeup" type="xml">
            <files mask="flexcan_pretended_networking_wakeup_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexcan_ping_pong_buffer_transfer" name="flexcan_ping_pong_buffer_transfer" brief="The flexcan_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CAN frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CAN messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="boards/frdmmcxa156/driver_examples/flexcan/ping_pong_buffer_transfer">
          <external path="boards/frdmmcxa156/driver_examples/flexcan/ping_pong_buffer_transfer" type="xml">
            <files mask="flexcan_ping_pong_buffer_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexcan_loopback_transfer" name="flexcan_loopback_transfer" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="boards/frdmmcxa156/driver_examples/flexcan/loopback_transfer">
          <external path="boards/frdmmcxa156/driver_examples/flexcan/loopback_transfer" type="xml">
            <files mask="flexcan_loopback_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexcan_loopback" name="flexcan_loopback" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="boards/frdmmcxa156/driver_examples/flexcan/loopback">
          <external path="boards/frdmmcxa156/driver_examples/flexcan/loopback" type="xml">
            <files mask="flexcan_loopback_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_flexcan_interrupt_transfer" name="flexcan_interrupt_transfer" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/flexcan" path="boards/frdmmcxa156/driver_examples/flexcan/interrupt_transfer">
          <external path="boards/frdmmcxa156/driver_examples/flexcan/interrupt_transfer" type="xml">
            <files mask="flexcan_interrupt_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_error_recording" name="error_recording" brief="The ERM Single Error project is a simple demonstration program of the SDK ERM driver. It shows how to show error events using the ERM driver." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/erm" path="boards/frdmmcxa156/driver_examples/erm/error_recording">
          <external path="boards/frdmmcxa156/driver_examples/erm/error_recording" type="xml">
            <files mask="error_recording_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_eqdc_index_interrupt" name="eqdc_index_interrupt" brief="The EQDC project shows how to sample the shaft position based on quadrature signal (PHASEA and PHASEB)." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/eqdc" path="boards/frdmmcxa156/driver_examples/eqdc/index_interrupt">
          <external path="boards/frdmmcxa156/driver_examples/eqdc/index_interrupt" type="xml">
            <files mask="eqdc_index_interrupt_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_eqdc_basic" name="eqdc_basic" brief="The EQDC project shows how to sample the shaft position based on quadrature signal (PHASEA and PHASEB)." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/eqdc" path="boards/frdmmcxa156/driver_examples/eqdc/basic">
          <external path="boards/frdmmcxa156/driver_examples/eqdc/basic" type="xml">
            <files mask="eqdc_basic_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_edma3_wrap_transfer" name="edma3_wrap_transfer" brief="The EDMA3 wrap transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA3 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma3" path="boards/frdmmcxa156/driver_examples/edma3/wrap_transfer">
          <external path="boards/frdmmcxa156/driver_examples/edma3/wrap_transfer" type="xml">
            <files mask="edma3_wrap_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_edma3_scatter_gather" name="edma3_scatter_gather" brief="The EDMA3 scatter gather example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA3 drivers.The purpose of this example is to show how to use the EDMA4 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma3" path="boards/frdmmcxa156/driver_examples/edma3/scatter_gather">
          <external path="boards/frdmmcxa156/driver_examples/edma3/scatter_gather" type="xml">
            <files mask="edma3_scatter_gather_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_edma3_ping_pong_transfer" name="edma3_ping_pong_transfer" brief="The EDMA3 ping pong transfer example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA3 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma3" path="boards/frdmmcxa156/driver_examples/edma3/ping_pong_transfer">
          <external path="boards/frdmmcxa156/driver_examples/edma3/ping_pong_transfer" type="xml">
            <files mask="edma3_ping_pong_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_edma3_memset" name="edma3_memset" brief="The EDMA3 memset example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA3 drivers.The purpose of this example is to show how to use the EDMA3 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma3" path="boards/frdmmcxa156/driver_examples/edma3/memset">
          <external path="boards/frdmmcxa156/driver_examples/edma3/memset" type="xml">
            <files mask="edma3_memset_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_edma3_memory_to_memory_transfer" name="edma3_memory_to_memory_transfer" brief="The EDMA3 memory to memory transfer example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA3 drivers.The purpose of this example is to show how to use the EDMA3 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma3" path="boards/frdmmcxa156/driver_examples/edma3/memory_to_memory_transfer">
          <external path="boards/frdmmcxa156/driver_examples/edma3/memory_to_memory_transfer" type="xml">
            <files mask="edma3_memory_to_memory_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_edma3_memory_to_memory" name="edma3_memory_to_memory" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma3" path="boards/frdmmcxa156/driver_examples/edma3/memory_to_memory">
          <external path="boards/frdmmcxa156/driver_examples/edma3/memory_to_memory" type="xml">
            <files mask="edma3_memory_to_memory_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_edma3_interleave_transfer" name="edma3_interleave_transfer" brief="The EDMA3 interleave example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA3 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma3" path="boards/frdmmcxa156/driver_examples/edma3/interleave_transfer">
          <external path="boards/frdmmcxa156/driver_examples/edma3/interleave_transfer" type="xml">
            <files mask="edma3_interleave_transfer_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_edma3_channel_link" name="edma3_channel_link" brief="The EDMA3 channel link example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the EDMA3 and to provide a simple example for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/edma3" path="boards/frdmmcxa156/driver_examples/edma3/channel_link">
          <external path="boards/frdmmcxa156/driver_examples/edma3/channel_link" type="xml">
            <files mask="edma3_channel_link_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dac_1_buffer_interrupt" name="dac_1_buffer_interrupt" brief="The dac_buffer_interrupt example shows how to use DAC FIFO interrupt.When the DAC FIFO empty interrupt is enabled firstly, the application would enter the DAC ISR immediately, since the FIFO is actually empty. Then the FIFO would be feed inside the ISR. Then the DAC interrupt could be restrained. Once the DAC FIFO is triggered in while loop, the data in FIFO is read out, then it becomes empty, so the FIFO would be feed again in DAC ISR. With this example, user can define the DAC output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/dac" path="boards/frdmmcxa156/driver_examples/dac/dac_buffer_interrupt">
          <external path="boards/frdmmcxa156/driver_examples/dac/dac_buffer_interrupt" type="xml">
            <files mask="dac_1_buffer_interrupt_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dac_1_basic" name="dac_1_basic" brief="The dac_basic example shows how to use DAC module simply as the general DAC converter.When the DAC's buffer feature is not enabled, the first item of the buffer is used as the DAC output data register.The converter would always output the value of the first item. In this example, it gets the value from terminal,outputs the DAC output voltage through DAC output pin." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/dac" path="boards/frdmmcxa156/driver_examples/dac/dac_basic">
          <external path="boards/frdmmcxa156/driver_examples/dac/dac_basic" type="xml">
            <files mask="dac_1_basic_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_ctimer_pwm_interrupt_example" name="ctimer_pwm_interrupt_example" brief="The Simple PWM Interrupt project is to demonstrate usage of the SDK CTimer driver as a PWM with interrupt callback functionsIn this example an IO pin connected to the LED is used as a PWM output line to generate a PWM signal.With an interrupt callback the PWM duty cycle is changed frequently in such a way that the LED brightness can be varied." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/ctimer" path="boards/frdmmcxa156/driver_examples/ctimer/simple_pwm_interrupt">
          <external path="boards/frdmmcxa156/driver_examples/ctimer/simple_pwm_interrupt" type="xml">
            <files mask="ctimer_pwm_interrupt_example_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_ctimer_pwm_example" name="ctimer_pwm_example" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, CTimer is used to generate a PWM signal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/ctimer" path="boards/frdmmcxa156/driver_examples/ctimer/simple_pwm">
          <external path="boards/frdmmcxa156/driver_examples/ctimer/simple_pwm" type="xml">
            <files mask="ctimer_pwm_example_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_ctimer_match_interrupt_example" name="ctimer_match_interrupt_example" brief="The Simple Match Interrupt project is to demonstrate usage of the SDK CTimer driver with interrupt callback functionsIn this example the upon match and IO pin connected to the LED is toggled and the timer is reset, so it would generate a square wave.With an interrupt callback the match value is changed frequently in such a way that the frequency of the output square wave is increased gradually." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/ctimer" path="boards/frdmmcxa156/driver_examples/ctimer/simple_match_interrupt">
          <external path="boards/frdmmcxa156/driver_examples/ctimer/simple_match_interrupt" type="xml">
            <files mask="ctimer_match_interrupt_example_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_ctimer_match_example" name="ctimer_match_example" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, the match feature of the CTimer is used to toggle the output level." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/ctimer" path="boards/frdmmcxa156/driver_examples/ctimer/simple_match">
          <external path="boards/frdmmcxa156/driver_examples/ctimer/simple_match" type="xml">
            <files mask="ctimer_match_example_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_ctimer_dma_trigger" name="ctimer_dma_trigger" brief="This example shows how to use CTimer to trigger DMA transfer by match feature. DMA requests are generated when the value of Timer Counter (TC) matches match register. In this example, CTimer match event occurs every 1 second and then trigger DMA transfer. After DMA transfer two times, that is 2 seconds later, CTimer counter stops and DMA will not be triggered. This example do not generate external outputs." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/ctimer" path="boards/frdmmcxa156/driver_examples/ctimer/dma_trigger">
          <external path="boards/frdmmcxa156/driver_examples/ctimer/dma_trigger" type="xml">
            <files mask="ctimer_dma_trigger_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_ctimer_capture" name="ctimer_capture" brief="This example shows how to use CTimer to capture the edge. In this example, CTimer timer counter uses APB clock as clock source, and CTimer monitors capture pin. When rising edge detected on the pin, CTimer saves the timer counter value to capture register." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/ctimer" path="boards/frdmmcxa156/driver_examples/ctimer/capture">
          <external path="boards/frdmmcxa156/driver_examples/ctimer/capture" type="xml">
            <files mask="ctimer_capture_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_crc" name="crc" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/crc" path="boards/frdmmcxa156/driver_examples/crc">
          <external path="boards/frdmmcxa156/driver_examples/crc" type="xml">
            <files mask="crc_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_cdog" name="cdog" brief="The CDOG Example project is a demonstration program that uses the KSDK software to show funcionality of Code Watchdog Timer." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/cdog" path="boards/frdmmcxa156/driver_examples/cdog">
          <external path="boards/frdmmcxa156/driver_examples/cdog" type="xml">
            <files mask="cdog_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_aoi_io_and" name="aoi_io_and" brief="This example demos the AOI uses two IO, the AOI_OUT = (IO0 &amp; IO1)." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/aoi/io_and" path="boards/frdmmcxa156/driver_examples/aoi/io_and">
          <external path="boards/frdmmcxa156/driver_examples/aoi/io_and" type="xml">
            <files mask="aoi_io_and_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="boards/frdmmcxa156/demo_apps/hello_world">
          <external path="boards/frdmmcxa156/demo_apps/hello_world" type="xml">
            <files mask="hello_world_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_led_blinky_peripheral" name="led_blinky_peripheral" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="boards/frdmmcxa156/demo_apps/led_blinky">
          <external path="boards/frdmmcxa156/demo_apps/led_blinky" type="xml">
            <files mask="led_blinky_peripheral_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_power_mode_switch_ll_mcxa" name="power_mode_switch_ll_mcxa" brief="Low level power_mode_switch demo." toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="boards/frdmmcxa156/demo_apps/power_mode_switch/low_level">
          <external path="boards/frdmmcxa156/demo_apps/power_mode_switch/low_level" type="xml">
            <files mask="power_mode_switch_ll_mcxa_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_mc_pmsm_enc" name="mc_pmsm_enc" brief="This example demonstrates the control of the PMSM." toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="boards/frdmmcxa156/demo_apps/mc_pmsm/pmsm_enc">
          <external path="boards/frdmmcxa156/demo_apps/mc_pmsm/pmsm_enc" type="xml">
            <files mask="mc_pmsm_enc_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_suspend_resume_hid_mouse_lite_bm" name="dev_suspend_resume_hid_mouse_lite_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_suspend_resume_hid_mouse_freertos" name="dev_suspend_resume_hid_mouse_freertos" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_suspend_resume_device_hid_mouse/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_suspend_resume_device_hid_mouse/freertos" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_suspend_resume_hid_mouse_bm" name="dev_suspend_resume_hid_mouse_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_suspend_resume_device_hid_mouse/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_suspend_resume_device_hid_mouse/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_video_virtual_camera_lite_bm" name="dev_video_virtual_camera_lite_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_video_virtual_camera_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_video_virtual_camera_lite/bm" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_video_virtual_camera_freertos" name="dev_video_virtual_camera_freertos" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_video_virtual_camera/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_video_virtual_camera/freertos" type="xml">
            <files mask="dev_video_virtual_camera_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_video_virtual_camera_bm" name="dev_video_virtual_camera_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_video_virtual_camera/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_video_virtual_camera/bm" type="xml">
            <files mask="dev_video_virtual_camera_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_printer_virtual_plain_text_lite_bm" name="dev_printer_virtual_plain_text_lite_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_printer_virtual_plain_text_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_printer_virtual_plain_text_lite/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_printer_virtual_plain_text_freertos" name="dev_printer_virtual_plain_text_freertos" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_printer_virtual_plain_text/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_printer_virtual_plain_text/freertos" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_printer_virtual_plain_text_bm" name="dev_printer_virtual_plain_text_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_printer_virtual_plain_text/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_printer_virtual_plain_text/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_phdc_weighscale_lite_bm" name="dev_phdc_weighscale_lite_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_phdc_weighscale_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_phdc_weighscale_lite/bm" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_phdc_weighscale_freertos" name="dev_phdc_weighscale_freertos" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_phdc_weighscale/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_phdc_weighscale/freertos" type="xml">
            <files mask="dev_phdc_weighscale_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_phdc_weighscale_bm" name="dev_phdc_weighscale_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_phdc_weighscale/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_phdc_weighscale/bm" type="xml">
            <files mask="dev_phdc_weighscale_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_msc_ramdisk_lite_bm" name="dev_msc_ramdisk_lite_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_msc_ramdisk_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_msc_ramdisk_lite/bm" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_msc_ramdisk_freertos" name="dev_msc_ramdisk_freertos" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_msc_ramdisk/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_msc_ramdisk/freertos" type="xml">
            <files mask="dev_msc_ramdisk_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_msc_ramdisk_bm" name="dev_msc_ramdisk_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_msc_ramdisk/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_msc_ramdisk/bm" type="xml">
            <files mask="dev_msc_ramdisk_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_hid_mouse_lite_bm" name="dev_hid_mouse_lite_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_hid_mouse_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_hid_mouse_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_hid_mouse_freertos_static" name="dev_hid_mouse_freertos_static" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_hid_mouse/freertos_static">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_hid_mouse/freertos_static" type="xml">
            <files mask="dev_hid_mouse_freertos_static_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_hid_mouse_freertos" name="dev_hid_mouse_freertos" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_hid_mouse/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_hid_mouse/freertos" type="xml">
            <files mask="dev_hid_mouse_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_hid_mouse_bm" name="dev_hid_mouse_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_hid_mouse/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_hid_mouse/bm" type="xml">
            <files mask="dev_hid_mouse_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_hid_generic_lite_bm" name="dev_hid_generic_lite_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_hid_generic_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_hid_generic_lite/bm" type="xml">
            <files mask="dev_hid_generic_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_hid_generic_freertos" name="dev_hid_generic_freertos" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_hid_generic/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_hid_generic/freertos" type="xml">
            <files mask="dev_hid_generic_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_hid_generic_bm" name="dev_hid_generic_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_hid_generic/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_hid_generic/bm" type="xml">
            <files mask="dev_hid_generic_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_dfu_lite_bm" name="dev_dfu_lite_bm" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_dfu_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_dfu_lite/bm" type="xml">
            <files mask="dev_dfu_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_dfu_freertos" name="dev_dfu_freertos" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_dfu/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_dfu/freertos" type="xml">
            <files mask="dev_dfu_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_dfu_bm" name="dev_dfu_bm" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_dfu/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_dfu/bm" type="xml">
            <files mask="dev_dfu_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_composite_hid_mouse_hid_keyboard_lite_bm" name="dev_composite_hid_mouse_hid_keyboard_lite_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_composite_hid_mouse_hid_keyboard_freertos" name="dev_composite_hid_mouse_hid_keyboard_freertos" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_composite_hid_mouse_hid_keyboard_bm" name="dev_composite_hid_mouse_hid_keyboard_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_composite_cdc_vcom_cdc_vcom_lite_bm" name="dev_composite_cdc_vcom_cdc_vcom_lite_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_composite_cdc_vcom_cdc_vcom_freertos" name="dev_composite_cdc_vcom_cdc_vcom_freertos" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_composite_cdc_vcom_cdc_vcom_bm" name="dev_composite_cdc_vcom_cdc_vcom_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_composite_cdc_msc_lite_bm" name="dev_composite_cdc_msc_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_composite_cdc_msc_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_composite_cdc_msc_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_composite_cdc_msc_freertos" name="dev_composite_cdc_msc_freertos" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_composite_cdc_msc/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_composite_cdc_msc/freertos" type="xml">
            <files mask="dev_composite_cdc_msc_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_composite_cdc_msc_bm" name="dev_composite_cdc_msc_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_composite_cdc_msc/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_composite_cdc_msc/bm" type="xml">
            <files mask="dev_composite_cdc_msc_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_cdc_vcom_lite_bm" name="dev_cdc_vcom_lite_bm" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_cdc_vcom_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_cdc_vcom_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_cdc_vcom_freertos" name="dev_cdc_vcom_freertos" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_cdc_vcom/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_cdc_vcom/freertos" type="xml">
            <files mask="dev_cdc_vcom_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_cdc_vcom_bm" name="dev_cdc_vcom_bm" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_cdc_vcom/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_cdc_vcom/bm" type="xml">
            <files mask="dev_cdc_vcom_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_audio_generator_lite_bm" name="dev_audio_generator_lite_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_audio_generator_lite/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_audio_generator_lite/bm" type="xml">
            <files mask="dev_audio_generator_lite_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_audio_generator_freertos" name="dev_audio_generator_freertos" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_audio_generator/freertos">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_audio_generator/freertos" type="xml">
            <files mask="dev_audio_generator_freertos_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_dev_audio_generator_bm" name="dev_audio_generator_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc" compiler="compiler_gcc" category="usb_examples" path="boards/frdmmcxa156/usb_examples/usb_device_audio_generator/bm">
          <external path="boards/frdmmcxa156/usb_examples/usb_device_audio_generator/bm" type="xml">
            <files mask="dev_audio_generator_bm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_emwin_gui_demo" name="emwin_gui_demo" brief="The example demonstrates graphical widgets of the emWin library." toolchain="armgcc" compiler="compiler_gcc" category="emwin_examples" path="boards/frdmmcxa156/emwin_examples/emwin_gui_demo">
          <external path="boards/frdmmcxa156/emwin_examples/emwin_gui_demo" type="xml">
            <files mask="emwin_gui_demo_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_emwin_serial_terminal" name="emwin_serial_terminal" brief="The serial_terminal demo shows how to use emWin library to render text. Connect using serial terminal application to debug console and type text.Please note that this example does not make use of receive buffer thus this example cannot handle larger amout of text pasted to the terminal at a time." toolchain="armgcc" compiler="compiler_gcc" category="emwin_examples" path="boards/frdmmcxa156/emwin_examples/emwin_serial_terminal">
          <external path="boards/frdmmcxa156/emwin_examples/emwin_serial_terminal" type="xml">
            <files mask="emwin_serial_terminal_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_fmstr_example_usb_cdc" name="fmstr_example_usb_cdc" brief="FreeMASTER example using virtual serial communication at USB port and CDC VCOM class. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc" compiler="compiler_gcc" category="freemaster_examples" path="boards/frdmmcxa156/freemaster_examples/fmstr_usb_cdc">
          <external path="boards/frdmmcxa156/freemaster_examples/fmstr_usb_cdc" type="xml">
            <files mask="fmstr_example_usb_cdc_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_fmstr_example_uart" name="fmstr_example_uart" brief="FreeMASTER example using Serial-UART communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc" compiler="compiler_gcc" category="freemaster_examples" path="boards/frdmmcxa156/freemaster_examples/fmstr_uart">
          <external path="boards/frdmmcxa156/freemaster_examples/fmstr_uart" type="xml">
            <files mask="fmstr_example_uart_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_fmstr_example_rtt" name="fmstr_example_rtt" brief="FreeMASTER example using Segger RTT communication over J-Link interface. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc" compiler="compiler_gcc" category="freemaster_examples" path="boards/frdmmcxa156/freemaster_examples/fmstr_rtt">
          <external path="boards/frdmmcxa156/freemaster_examples/fmstr_rtt" type="xml">
            <files mask="fmstr_example_rtt_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_fmstr_example_pdbdm" name="fmstr_example_pdbdm" brief="FreeMASTER example using a special packet-driven protocol on top of JTAG or BDM direct memory access. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc" compiler="compiler_gcc" category="freemaster_examples" path="boards/frdmmcxa156/freemaster_examples/fmstr_pdbdm">
          <external path="boards/frdmmcxa156/freemaster_examples/fmstr_pdbdm" type="xml">
            <files mask="fmstr_example_pdbdm_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_fmstr_example_can" name="fmstr_example_can" brief="FreeMASTER example using the CAN bus to communicate with target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc" compiler="compiler_gcc" category="freemaster_examples" path="boards/frdmmcxa156/freemaster_examples/fmstr_can">
          <external path="boards/frdmmcxa156/freemaster_examples/fmstr_can" type="xml">
            <files mask="fmstr_example_can_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lvgl_guider" name="lvgl_guider" brief="LittleVGL project used with GUI Guider." toolchain="armgcc" compiler="compiler_gcc" category="lvgl_examples" path="boards/frdmmcxa156/lvgl_examples/lvgl_guider">
          <external path="boards/frdmmcxa156/lvgl_examples/lvgl_guider" type="xml">
            <files mask="lvgl_guider_v3_15.xml"/>
          </external>
        </example>
        <example id="frdmmcxa156_lvgl_guider_bm" name="lvgl_guider_bm" brief="LVGL project used with GUI Guider on baremetal." toolchain="armgcc" compiler="compiler_gcc" category="lvgl_examples" path="boards/frdmmcxa156/lvgl_examples/lvgl_guider_bm">
          <external path="boards/frdmmcxa156/lvgl_examples/lvgl_guider_bm" type="xml">
            <files mask="lvgl_guider_bm_v3_15.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="MCXA156" name="MCXA156" version="1.0.0" full_name="MCXA156" family="MCXA1XX" platform="MCX">
      <description>Arm® Cortex®-M33 microcontroller with multiple high-speed connectivity, operating up to 96 MHz, serial peripherals, timers, analog and low power consumption.</description>
      <metadataSet>
        <metadata key="compatible_device.segger" value="MCXA156"/>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <defines>
        <define name="CPU_$|package|" value=""/>
        <define name="CPU_$|package|_$|core|" value=""/>
      </defines>
      <core id="cm33_core0_MCXA156" name="cm33_core0" fpu="true" type="cm33" dsp="true"/>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_MCXA156" name="PROGRAM_FLASH" addr="00000000" size="00100000" type="Flash" access="RO"/>
        <memoryBlock id="SRAM_MCXA156" name="SRAM" addr="20000000" size="0001e000" type="RAM" access="RW"/>
        <memoryBlock id="SRAMX_MCXA156" name="SRAMX" addr="04000000" size="00003000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="1024" ram_size_kb="132"/>
      <package id="MCXA156VFT" name="MCXA156VFT"/>
      <package id="MCXA156VLH" name="MCXA156VLH"/>
      <package id="MCXA156VLL" name="MCXA156VLL"/>
      <package id="MCXA156VMP" name="MCXA156VMP"/>
      <package id="MCXA156VPJ" name="MCXA156VPJ"/>
      <evaluation_boards>
        <evaluation_board name="frdmmcxa156"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.attach.slave.release.MCXA156" name="internal.attach.slave" value="true"/>
            <params id="internal.multi.swd.release.MCXA156" name="internal.multi.swd" value="true"/>
            <params id="internal.wiretype.release.MCXA156" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MCXA156" name="internal.has_swo" value="true"/>
            <params id="misc.options.MCXA156" name="misc.options" value="--bootromstall 0x4009123C"/>
          </params>
          <drivers>
            <driver id_refs="PROGRAM_FLASH_MCXA156">
              <driverBinary path="devices/MCXA156/mcuxpresso" type="binary">
                <files mask="MCXA1xx.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.frdmmcxa156.MCXA156" name="frdmmcxa156" brief="Board_project_template frdmmcxa156" version="1.0.0" full_name="Board_project_template frdmmcxa156" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/frdmmcxa156/project_template" project_base_path="board">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.serial_manager.MCXA156"/>
              <component_dependency value="component.serial_manager_uart.MCXA156"/>
              <component_dependency value="platform.utilities.assert.MCXA156"/>
              <component_dependency value="utility.debug_console.MCXA156"/>
              <component_dependency value="utility.debug_console_template_config.MCXA156"/>
            </all>
            <all>
              <component_dependency value="platform.utilities.assert_lite.MCXA156"/>
              <component_dependency value="utility.debug_console_lite.MCXA156"/>
            </all>
          </any_of>
          <component_dependency value="component.lpuart_adapter.MCXA156"/>
          <component_dependency value="platform.drivers.lpuart.MCXA156"/>
          <component_dependency value="platform.drivers.gpio.MCXA156"/>
          <component_dependency value="platform.drivers.reset.MCXA156"/>
          <component_dependency value="platform.drivers.clock.MCXA156"/>
          <component_dependency value="platform.drivers.mcx_spc.MCXA156"/>
          <component_dependency value="platform.drivers.port.MCXA156"/>
          <component_dependency value="device.MCXA156_startup.MCXA156"/>
          <board_dependency value="frdmmcxa156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
      </source>
      <source relative_path="./" config="true" type="c_include">
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="board_project_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MCXA156_debugger.MCXA156" name="Device MCXA156_debugger" brief="Device MCXA156_debugger" version="1.0.0" full_name="Device MCXA156_debugger" category="Device/SDK Utilities" user_visible="true" type="debugger" package_base_path="devices/MCXA156" project_base_path="svd">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="xml">
        <files mask="MCXA156.xml"/>
      </source>
    </component>
    <component id="tools.MCXA156" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" category="Device/SDK Utilities" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="mcux_config.cmake"/>
        <files mask="riscvllvm.cmake"/>
      </source>
    </component>
    <component id="CMSIS_DSP_Include.MCXA156" name="CMSIS_DSP_Library_Header" brief="CMSIS-DSP Library Header" version="1.16.2" full_name="CMSIS DSP Library Header" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Include.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MCXA156" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library" version="1.16.2" full_name="CMSIS DSP Library Source" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <defines>
        <define name="DISABLEFLOAT16" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="BasicMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_f64.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_f64.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_and_u16.c"/>
        <files mask="arm_and_u32.c"/>
        <files mask="arm_and_u8.c"/>
        <files mask="arm_clip_f32.c"/>
        <files mask="arm_clip_q15.c"/>
        <files mask="arm_clip_q31.c"/>
        <files mask="arm_clip_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_f64.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_f64.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_f64.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_not_u16.c"/>
        <files mask="arm_not_u32.c"/>
        <files mask="arm_not_u8.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_f64.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_or_u16.c"/>
        <files mask="arm_or_u32.c"/>
        <files mask="arm_or_u8.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_f64.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_f64.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
        <files mask="arm_xor_u16.c"/>
        <files mask="arm_xor_u32.c"/>
        <files mask="arm_xor_u8.c"/>
        <files mask="arm_abs_f16.c"/>
        <files mask="arm_add_f16.c"/>
        <files mask="arm_clip_f16.c"/>
        <files mask="arm_dot_prod_f16.c"/>
        <files mask="arm_mult_f16.c"/>
        <files mask="arm_negate_f16.c"/>
        <files mask="arm_offset_f16.c"/>
        <files mask="arm_scale_f16.c"/>
        <files mask="arm_sub_f16.c"/>
      </source>
      <source relative_path="Source/BayesFunctions" type="src">
        <files mask="BayesFunctions.c"/>
        <files mask="BayesFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BayesFunctions" type="src">
        <files mask="arm_gaussian_naive_bayes_predict_f32.c"/>
        <files mask="arm_gaussian_naive_bayes_predict_f16.c"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="CommonTablesF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
        <files mask="arm_mve_tables.c"/>
        <files mask="arm_common_tables_f16.c"/>
        <files mask="arm_const_structs_f16.c"/>
        <files mask="arm_mve_tables_f16.c"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="ComplexMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_f64.c"/>
        <files mask="arm_cmplx_mag_fast_q15.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_f64.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_f64.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
        <files mask="arm_cmplx_conj_f16.c"/>
        <files mask="arm_cmplx_dot_prod_f16.c"/>
        <files mask="arm_cmplx_mag_f16.c"/>
        <files mask="arm_cmplx_mag_squared_f16.c"/>
        <files mask="arm_cmplx_mult_cmplx_f16.c"/>
        <files mask="arm_cmplx_mult_real_f16.c"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="src">
        <files mask="DistanceFunctions.c"/>
        <files mask="DistanceFunctionsF16.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="c_include">
        <files mask="arm_boolean_distance_template.h"/>
      </source>
      <source exclude="true" relative_path="Source/DistanceFunctions" type="src">
        <files mask="arm_boolean_distance.c"/>
        <files mask="arm_braycurtis_distance_f32.c"/>
        <files mask="arm_canberra_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f64.c"/>
        <files mask="arm_cityblock_distance_f32.c"/>
        <files mask="arm_cityblock_distance_f64.c"/>
        <files mask="arm_correlation_distance_f32.c"/>
        <files mask="arm_cosine_distance_f32.c"/>
        <files mask="arm_cosine_distance_f64.c"/>
        <files mask="arm_dice_distance.c"/>
        <files mask="arm_dtw_distance_f32.c"/>
        <files mask="arm_dtw_init_window_q7.c"/>
        <files mask="arm_dtw_path_f32.c"/>
        <files mask="arm_euclidean_distance_f32.c"/>
        <files mask="arm_euclidean_distance_f64.c"/>
        <files mask="arm_hamming_distance.c"/>
        <files mask="arm_jaccard_distance.c"/>
        <files mask="arm_jensenshannon_distance_f32.c"/>
        <files mask="arm_kulsinski_distance.c"/>
        <files mask="arm_minkowski_distance_f32.c"/>
        <files mask="arm_rogerstanimoto_distance.c"/>
        <files mask="arm_russellrao_distance.c"/>
        <files mask="arm_sokalmichener_distance.c"/>
        <files mask="arm_sokalsneath_distance.c"/>
        <files mask="arm_yule_distance.c"/>
        <files mask="arm_braycurtis_distance_f16.c"/>
        <files mask="arm_chebyshev_distance_f16.c"/>
        <files mask="arm_canberra_distance_f16.c"/>
        <files mask="arm_cityblock_distance_f16.c"/>
        <files mask="arm_correlation_distance_f16.c"/>
        <files mask="arm_cosine_distance_f16.c"/>
        <files mask="arm_euclidean_distance_f16.c"/>
        <files mask="arm_jensenshannon_distance_f16.c"/>
        <files mask="arm_minkowski_distance_f16.c"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="FastMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_atan2_f32.c"/>
        <files mask="arm_atan2_q15.c"/>
        <files mask="arm_atan2_q31.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_divide_q15.c"/>
        <files mask="arm_divide_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
        <files mask="arm_vexp_f32.c"/>
        <files mask="arm_vexp_f64.c"/>
        <files mask="arm_vlog_f32.c"/>
        <files mask="arm_vlog_f64.c"/>
        <files mask="arm_vlog_q15.c"/>
        <files mask="arm_vlog_q31.c"/>
        <files mask="arm_atan2_f16.c"/>
        <files mask="arm_vexp_f16.c"/>
        <files mask="arm_vinverse_f16.c"/>
        <files mask="arm_vlog_f16.c"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="FilteringFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_f64.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_f64.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_f64.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_levinson_durbin_f32.c"/>
        <files mask="arm_levinson_durbin_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f16.c"/>
        <files mask="arm_biquad_cascade_df1_init_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c"/>
        <files mask="arm_correlate_f16.c"/>
        <files mask="arm_fir_f16.c"/>
        <files mask="arm_fir_init_f16.c"/>
        <files mask="arm_levinson_durbin_f16.c"/>
        <files mask="arm_fir_decimate_f64.c"/>
        <files mask="arm_fir_decimate_init_f64.c"/>
      </source>
      <source relative_path="Source/InterpolationFunctions" type="src">
        <files mask="InterpolationFunctions.c"/>
        <files mask="InterpolationFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/InterpolationFunctions" type="src">
        <files mask="arm_bilinear_interp_f32.c"/>
        <files mask="arm_bilinear_interp_q15.c"/>
        <files mask="arm_bilinear_interp_q31.c"/>
        <files mask="arm_bilinear_interp_q7.c"/>
        <files mask="arm_linear_interp_f32.c"/>
        <files mask="arm_linear_interp_q15.c"/>
        <files mask="arm_linear_interp_q31.c"/>
        <files mask="arm_linear_interp_q7.c"/>
        <files mask="arm_spline_interp_f32.c"/>
        <files mask="arm_spline_interp_init_f32.c"/>
        <files mask="arm_bilinear_interp_f16.c"/>
        <files mask="arm_linear_interp_f16.c"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="MatrixFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_householder_f32.c"/>
        <files mask="arm_householder_f64.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cholesky_f32.c"/>
        <files mask="arm_mat_cholesky_f64.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_cmplx_trans_f32.c"/>
        <files mask="arm_mat_cmplx_trans_q15.c"/>
        <files mask="arm_mat_cmplx_trans_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_f64.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_ldlt_f32.c"/>
        <files mask="arm_mat_ldlt_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_f64.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_opt_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_mult_q7.c"/>
        <files mask="arm_mat_qr_f32.c"/>
        <files mask="arm_mat_qr_f64.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_solve_lower_triangular_f32.c"/>
        <files mask="arm_mat_solve_lower_triangular_f64.c"/>
        <files mask="arm_mat_solve_upper_triangular_f32.c"/>
        <files mask="arm_mat_solve_upper_triangular_f64.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_f64.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_f64.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
        <files mask="arm_mat_trans_q7.c"/>
        <files mask="arm_mat_vec_mult_f32.c"/>
        <files mask="arm_mat_vec_mult_q15.c"/>
        <files mask="arm_mat_vec_mult_q31.c"/>
        <files mask="arm_mat_vec_mult_q7.c"/>
        <files mask="arm_householder_f16.c"/>
        <files mask="arm_mat_add_f16.c"/>
        <files mask="arm_mat_cholesky_f16.c"/>
        <files mask="arm_mat_cmplx_mult_f16.c"/>
        <files mask="arm_mat_cmplx_trans_f16.c"/>
        <files mask="arm_mat_init_f16.c"/>
        <files mask="arm_mat_inverse_f16.c"/>
        <files mask="arm_mat_qr_f16.c"/>
        <files mask="arm_mat_mult_f16.c"/>
        <files mask="arm_mat_scale_f16.c"/>
        <files mask="arm_mat_solve_lower_triangular_f16.c"/>
        <files mask="arm_mat_solve_upper_triangular_f16.c"/>
        <files mask="arm_mat_sub_f16.c"/>
        <files mask="arm_mat_trans_f16.c"/>
        <files mask="arm_mat_vec_mult_f16.c"/>
      </source>
      <source relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="QuaternionMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="arm_quaternion2rotation_f32.c"/>
        <files mask="arm_quaternion_conjugate_f32.c"/>
        <files mask="arm_quaternion_inverse_f32.c"/>
        <files mask="arm_quaternion_normalize_f32.c"/>
        <files mask="arm_quaternion_norm_f32.c"/>
        <files mask="arm_quaternion_product_f32.c"/>
        <files mask="arm_quaternion_product_single_f32.c"/>
        <files mask="arm_rotation2quaternion_f32.c"/>
      </source>
      <source relative_path="Source/SVMFunctions" type="src">
        <files mask="SVMFunctions.c"/>
        <files mask="SVMFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SVMFunctions" type="src">
        <files mask="arm_svm_linear_init_f32.c"/>
        <files mask="arm_svm_linear_predict_f32.c"/>
        <files mask="arm_svm_polynomial_init_f32.c"/>
        <files mask="arm_svm_polynomial_predict_f32.c"/>
        <files mask="arm_svm_rbf_init_f32.c"/>
        <files mask="arm_svm_rbf_predict_f32.c"/>
        <files mask="arm_svm_sigmoid_init_f32.c"/>
        <files mask="arm_svm_sigmoid_predict_f32.c"/>
        <files mask="arm_svm_linear_init_f16.c"/>
        <files mask="arm_svm_linear_predict_f16.c"/>
        <files mask="arm_svm_polynomial_init_f16.c"/>
        <files mask="arm_svm_polynomial_predict_f16.c"/>
        <files mask="arm_svm_rbf_init_f16.c"/>
        <files mask="arm_svm_rbf_predict_f16.c"/>
        <files mask="arm_svm_sigmoid_init_f16.c"/>
        <files mask="arm_svm_sigmoid_predict_f16.c"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="StatisticsFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_absmax_f32.c"/>
        <files mask="arm_absmax_f64.c"/>
        <files mask="arm_absmax_no_idx_f32.c"/>
        <files mask="arm_absmax_no_idx_f64.c"/>
        <files mask="arm_absmax_no_idx_q15.c"/>
        <files mask="arm_absmax_no_idx_q31.c"/>
        <files mask="arm_absmax_no_idx_q7.c"/>
        <files mask="arm_absmax_q15.c"/>
        <files mask="arm_absmax_q31.c"/>
        <files mask="arm_absmax_q7.c"/>
        <files mask="arm_absmin_f32.c"/>
        <files mask="arm_absmin_f64.c"/>
        <files mask="arm_absmin_no_idx_f32.c"/>
        <files mask="arm_absmin_no_idx_f64.c"/>
        <files mask="arm_absmin_no_idx_q15.c"/>
        <files mask="arm_absmin_no_idx_q31.c"/>
        <files mask="arm_absmin_no_idx_q7.c"/>
        <files mask="arm_absmin_q15.c"/>
        <files mask="arm_absmin_q31.c"/>
        <files mask="arm_absmin_q7.c"/>
        <files mask="arm_accumulate_f32.c"/>
        <files mask="arm_accumulate_f64.c"/>
        <files mask="arm_entropy_f32.c"/>
        <files mask="arm_entropy_f64.c"/>
        <files mask="arm_kullback_leibler_f32.c"/>
        <files mask="arm_kullback_leibler_f64.c"/>
        <files mask="arm_logsumexp_dot_prod_f32.c"/>
        <files mask="arm_logsumexp_f32.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_f64.c"/>
        <files mask="arm_max_no_idx_f32.c"/>
        <files mask="arm_max_no_idx_f64.c"/>
        <files mask="arm_max_no_idx_q15.c"/>
        <files mask="arm_max_no_idx_q31.c"/>
        <files mask="arm_max_no_idx_q7.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_f64.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_f64.c"/>
        <files mask="arm_min_no_idx_f32.c"/>
        <files mask="arm_min_no_idx_f64.c"/>
        <files mask="arm_min_no_idx_q15.c"/>
        <files mask="arm_min_no_idx_q31.c"/>
        <files mask="arm_min_no_idx_q7.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_mse_f32.c"/>
        <files mask="arm_mse_f64.c"/>
        <files mask="arm_mse_q15.c"/>
        <files mask="arm_mse_q31.c"/>
        <files mask="arm_mse_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_f64.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_f64.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_f64.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
        <files mask="arm_absmax_f16.c"/>
        <files mask="arm_absmax_no_idx_f16.c"/>
        <files mask="arm_absmin_f16.c"/>
        <files mask="arm_absmin_no_idx_f16.c"/>
        <files mask="arm_accumulate_f16.c"/>
        <files mask="arm_entropy_f16.c"/>
        <files mask="arm_kullback_leibler_f16.c"/>
        <files mask="arm_logsumexp_dot_prod_f16.c"/>
        <files mask="arm_logsumexp_f16.c"/>
        <files mask="arm_max_f16.c"/>
        <files mask="arm_max_no_idx_f16.c"/>
        <files mask="arm_mean_f16.c"/>
        <files mask="arm_min_f16.c"/>
        <files mask="arm_min_no_idx_f16.c"/>
        <files mask="arm_mse_f16.c"/>
        <files mask="arm_power_f16.c"/>
        <files mask="arm_rms_f16.c"/>
        <files mask="arm_std_f16.c"/>
        <files mask="arm_var_f16.c"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="SupportFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_barycenter_f32.c"/>
        <files mask="arm_bitonic_sort_f32.c"/>
        <files mask="arm_bubble_sort_f32.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_f64.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_f64_to_float.c"/>
        <files mask="arm_f64_to_q31.c"/>
        <files mask="arm_f64_to_q15.c"/>
        <files mask="arm_f64_to_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_f64.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_f64.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_heap_sort_f32.c"/>
        <files mask="arm_insertion_sort_f32.c"/>
        <files mask="arm_merge_sort_f32.c"/>
        <files mask="arm_merge_sort_init_f32.c"/>
        <files mask="arm_q15_to_f64.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_f64.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_f64.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
        <files mask="arm_quick_sort_f32.c"/>
        <files mask="arm_selection_sort_f32.c"/>
        <files mask="arm_sort_f32.c"/>
        <files mask="arm_sort_init_f32.c"/>
        <files mask="arm_weighted_average_f32.c"/>
        <files mask="arm_barycenter_f16.c"/>
        <files mask="arm_copy_f16.c"/>
        <files mask="arm_f16_to_float.c"/>
        <files mask="arm_f16_to_q15.c"/>
        <files mask="arm_f16_to_f64.c"/>
        <files mask="arm_f64_to_f16.c"/>
        <files mask="arm_fill_f16.c"/>
        <files mask="arm_float_to_f16.c"/>
        <files mask="arm_q15_to_f16.c"/>
        <files mask="arm_weighted_average_f16.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="TransformFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_f64.c"/>
        <files mask="arm_cfft_init_f32.c"/>
        <files mask="arm_cfft_init_f64.c"/>
        <files mask="arm_cfft_init_q15.c"/>
        <files mask="arm_cfft_init_q31.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_mfcc_f32.c"/>
        <files mask="arm_mfcc_init_f32.c"/>
        <files mask="arm_mfcc_init_q15.c"/>
        <files mask="arm_mfcc_init_q31.c"/>
        <files mask="arm_mfcc_q15.c"/>
        <files mask="arm_mfcc_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_f64.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_fast_init_f64.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
        <files mask="arm_bitreversal_f16.c"/>
        <files mask="arm_cfft_f16.c"/>
        <files mask="arm_cfft_init_f16.c"/>
        <files mask="arm_cfft_radix2_f16.c"/>
        <files mask="arm_cfft_radix2_init_f16.c"/>
        <files mask="arm_cfft_radix4_f16.c"/>
        <files mask="arm_cfft_radix8_f16.c"/>
        <files mask="arm_mfcc_f16.c"/>
        <files mask="arm_cfft_radix4_init_f16.c"/>
        <files mask="arm_mfcc_init_f16.c"/>
        <files mask="arm_rfft_fast_f16.c"/>
        <files mask="arm_rfft_fast_init_f16.c"/>
      </source>
      <source relative_path="Source/WindowFunctions" type="src">
        <files mask="WindowFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/WindowFunctions" type="src">
        <files mask="arm_bartlett_f32.c"/>
        <files mask="arm_bartlett_f64.c"/>
        <files mask="arm_blackman_harris_92db_f32.c"/>
        <files mask="arm_blackman_harris_92db_f64.c"/>
        <files mask="arm_hamming_f32.c"/>
        <files mask="arm_hamming_f64.c"/>
        <files mask="arm_hanning_f32.c"/>
        <files mask="arm_hanning_f64.c"/>
        <files mask="arm_hft116d_f32.c"/>
        <files mask="arm_hft116d_f64.c"/>
        <files mask="arm_hft144d_f32.c"/>
        <files mask="arm_hft144d_f64.c"/>
        <files mask="arm_hft169d_f32.c"/>
        <files mask="arm_hft169d_f64.c"/>
        <files mask="arm_hft196d_f32.c"/>
        <files mask="arm_hft196d_f64.c"/>
        <files mask="arm_hft223d_f32.c"/>
        <files mask="arm_hft223d_f64.c"/>
        <files mask="arm_hft248d_f32.c"/>
        <files mask="arm_hft248d_f64.c"/>
        <files mask="arm_hft90d_f32.c"/>
        <files mask="arm_hft90d_f64.c"/>
        <files mask="arm_hft95_f32.c"/>
        <files mask="arm_hft95_f64.c"/>
        <files mask="arm_nuttall3a_f32.c"/>
        <files mask="arm_nuttall3a_f64.c"/>
        <files mask="arm_nuttall3b_f32.c"/>
        <files mask="arm_nuttall3b_f64.c"/>
        <files mask="arm_nuttall3_f32.c"/>
        <files mask="arm_nuttall3_f64.c"/>
        <files mask="arm_nuttall4a_f32.c"/>
        <files mask="arm_nuttall4a_f64.c"/>
        <files mask="arm_nuttall4b_f32.c"/>
        <files mask="arm_nuttall4b_f64.c"/>
        <files mask="arm_nuttall4c_f32.c"/>
        <files mask="arm_nuttall4c_f64.c"/>
        <files mask="arm_nuttall4_f32.c"/>
        <files mask="arm_nuttall4_f64.c"/>
        <files mask="arm_welch_f32.c"/>
        <files mask="arm_welch_f64.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MCXA156" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.2" full_name="CMSIS Device API OSTick" category="Device/OS Tick" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_OSTick.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MCXA156" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.3.0" full_name="CMSIS Device API RTOS2" category="CMSIS/RTOS2" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_RTOS2.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MCXA156" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.3.0" full_name="CMSIS Driver CAN" category="CMSIS Driver/CAN" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_CAN.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_CAN.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MCXA156" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet Common" category="CMSIS Driver/Ethernet" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_MAC.h"/>
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MCXA156" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet MAC" category="CMSIS Driver/Ethernet MAC" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_MAC.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MCXA156" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet PHY" category="CMSIS Driver/Ethernet PHY" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_PHY.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_PHY.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MCXA156" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Flash" category="CMSIS Driver/Flash" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Flash.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Flash.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.GPIO.MCXA156" name="CMSIS_Driver_GPIO" brief="Access to #include Driver_GPIO.h file for custom implementation" version="1.0.0" full_name="CMSIS Driver GPIO" category="CMSIS Driver/GPIO" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include/GPIO" template="true" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="Include/GPIO" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_GPIO.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="asm_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MCXA156" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver I2C" category="CMSIS Driver/I2C" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_I2C.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_I2C.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MCXA156" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver MCI" category="CMSIS Driver/MCI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_MCI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_MCI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MCXA156" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver NAND" category="CMSIS Driver/NAND" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_NAND.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_NAND.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MCXA156" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver SAI" category="CMSIS Driver/SAI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SAI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SAI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MCXA156" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver SPI" category="CMSIS Driver/SPI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SPI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SPI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MCXA156" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver USART" category="CMSIS Driver/USART" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USART.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USART.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MCXA156" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Device" category="CMSIS Driver/USB Device" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBD.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Device.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MCXA156" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Host" category="CMSIS Driver/USB Host" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBH.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Host.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MCXA156" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.1.0" full_name="CMSIS Driver WiFi" category="CMSIS Driver/WiFi" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_WiFi.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_WiFi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_NN_Source.MCXA156" name="CMSIS_NN_Library_Source" brief="CMSIS-NN Library" version="6.0.0" full_name="CMSIS NN Library Source" category="CMSIS/NN" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/NN" project_base_path="CMSIS/NN">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
        <files mask="arm_nn_math_types.h"/>
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
      </source>
      <source relative_path="Include/Internal" type="c_include">
        <files mask="arm_nn_compiler.h"/>
      </source>
      <source relative_path="Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activation_s16.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s16.c"/>
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_acc_s16.c"/>
        <files mask="arm_elementwise_mul_s16.c"/>
        <files mask="arm_elementwise_mul_s16_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
        <files mask="arm_elementwise_mul_s16_batch_offset.c"/>
      </source>
      <source relative_path="Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1x1_s4.c"/>
        <files mask="arm_convolve_1x1_s4_fast.c"/>
        <files mask="arm_convolve_1x1_s8.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_1_x_n_s4.c"/>
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s4.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s8.c"/>
        <files mask="arm_convolve_s16.c"/>
        <files mask="arm_convolve_s4.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s16.c"/>
        <files mask="arm_convolve_wrapper_s4.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_fast_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s4.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_depthwise_conv_s16.c"/>
        <files mask="arm_depthwise_conv_s4.c"/>
        <files mask="arm_depthwise_conv_s4_opt.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_wrapper_s16.c"/>
        <files mask="arm_depthwise_conv_wrapper_s4.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_row_offset_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s4_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s16.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
        <files mask="arm_transpose_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_transpose_conv_s8.c"/>
      </source>
      <source relative_path="Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_get_buffer_sizes_s16.c"/>
        <files mask="arm_fully_connected_get_buffer_sizes_s8.c"/>
        <files mask="arm_fully_connected_s16.c"/>
        <files mask="arm_fully_connected_s4.c"/>
        <files mask="arm_fully_connected_s8.c"/>
        <files mask="arm_vector_sum_s8.c"/>
        <files mask="arm_vector_sum_s8_s64.c"/>
      </source>
      <source relative_path="Source/LSTMFunctions" type="src">
        <files mask="arm_lstm_unidirectional_s16.c"/>
        <files mask="arm_lstm_unidirectional_s8.c"/>
      </source>
      <source relative_path="Source/NNSupportFunctions" type="src">
        <files mask="arm_nntables.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s16.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s4.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s16.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s8_s16.c"/>
        <files mask="arm_nn_lstm_step_s16.c"/>
        <files mask="arm_nn_lstm_step_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s16.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s4.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8_s32.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s4.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s16.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s8_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s4.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
        <files mask="arm_s8_to_s16_unordered_with_offset.c"/>
      </source>
      <source relative_path="Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_get_buffer_sizes_s16.c"/>
        <files mask="arm_avgpool_get_buffer_sizes_s8.c"/>
        <files mask="arm_avgpool_s16.c"/>
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s16.c"/>
        <files mask="arm_max_pool_s8.c"/>
      </source>
      <source relative_path="Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="Source/SoftmaxFunctions" type="src">
        <files mask="arm_nn_softmax_common_s8.c"/>
        <files mask="arm_softmax_s16.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_s8_s16.c"/>
        <files mask="arm_softmax_u8.c"/>
      </source>
      <source relative_path="Source/SVDFunctions" type="src">
        <files mask="arm_svdf_get_buffer_sizes_s8.c"/>
        <files mask="arm_svdf_s8.c"/>
        <files mask="arm_svdf_state_s16_s8.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_NN_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux_connections.MCXA156" name="inputmux_connections" brief="Inputmux_connections Driver" version="2.0.0" full_name="Inputmux_connections Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux_connections.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_inputmux_connections.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.reset.MCXA156" name="reset" brief="Reset Driver" version="2.4.0" full_name="Reset Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_reset.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_reset.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_reset.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trdc_soc.MCXA156" name="trdc_soc" brief="TRDC SOC Driver" version="2.0.0" full_name="TRDC SOC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trdc_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_trdc_soc.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="container.CMSIS_all_files.MCXA156" name="MCXA156" version="1.0.0" package_base_path="CMSIS" project_base_path="./">
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_ETH.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_WiFi.h"/>
  </source>
  <source relative_path="Driver/Include/GPIO" type="c_include">
    <files mask="Driver_GPIO.h"/>
  </source>
  <source relative_path="Driver/VIO/Include" type="c_include">
    <files mask="cmsis_vio.h"/>
  </source>
  <source relative_path="Driver/VIO/Source" type="src">
    <files mask="vio.c"/>
    <files mask="vio_memory.c"/>
  </source>
  <source relative_path="Driver/VIO" type="other">
    <files mask="cmsis_vio.scvd"/>
  </source>
  <source relative_path="Core/Include" type="c_include">
    <files mask="cmsis_clang.h"/>
  </source>
  <source relative_path="Core/Include/m-profile" type="c_include">
    <files mask="cmsis_clang_m.h"/>
  </source>
</component>-->
    <component id="platform.utilities.misc_utilities.MCXA156" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.1.1" full_name="Utilities miscellaneous" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MCXA156/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_syscall_stub.c"/>
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="asm_include" device_cores="cm33_core0_MCXA156">
        <files mask="fsl_memcpy.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utilities_misc_utilities.MCXA156.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.incbin.MCXA156" name="incbin" brief="Used to include slave core binary into master core binary." version="1.0.0" full_name="utility incbin" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MCXA156/utilities/incbin" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="asm_include">
        <files mask="fsl_incbin.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_incbin.MCXA156.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.format.MCXA156" name="format" brief="Used to format convertion" version="1.0.0" full_name="utility format" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MCXA156/utilities/format" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_format.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_format.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_format.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cmsis_drivers.MCXA156" name="CMSIS driver" brief="CMSIS driver" version="2.0.0" full_name="CMSIS driver" category="Board Support/SDK Project Template" user_visible="true" type="CMSIS_driver" package_base_path="components/cmsis_drivers" project_base_path="CMSIS_drivers">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
    </component>
    <component id="platform.drivers.common.MCXA156" name="common" brief="common Driver" version="2.6.0" full_name="common Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_core0_MCXA156">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core0_MCXA156">
        <files mask="fsl_common_arm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_common.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb_pd.common_header.MCXA156" name="USB PD Common Header" brief="Middleware usb pd common_header" version="2.12.0" full_name="USB PD Common Header" category="USB/USB PD Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
    </component>
    <component id="middleware.mcuboot.nxp_app_support.MCXA156" name="mcuboot_app_support" brief="MCUboot application support layer" version="2.1.0" full_name="MCUboot application support layer" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil/app_support">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="app_support" type="src">
        <files mask="mcuboot_app_support.c"/>
      </source>
      <source relative_path="app_support" type="c_include">
        <files mask="mcuboot_app_support.h"/>
      </source>
      <source relative_path="include/mcuboot_config" type="c_include">
        <files mask="mcuboot_config.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="flash_map.h"/>
      </source>
      <source relative_path="include/sysflash" type="c_include">
        <files mask="sysflash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_nxp_app_support.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="app_support" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/mcuboot_config" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="app_support" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/mcuboot_config" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.mcuboot.docs.MCXA156" name="mcuboot_docs" version="2.1.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path="docs" type="other">
    <files mask="CNAME"/>
    <files mask="Gemfile"/>
    <files mask="Gemfile.lock"/>
    <files mask="PORTING.md"/>
    <files mask="SECURITY.md"/>
    <files mask="SubmittingPatches.md"/>
    <files mask="_config.yml"/>
    <files mask="design.md"/>
    <files mask="ecdsa.md"/>
    <files mask="encrypted_images.md"/>
    <files mask="imgtool.md"/>
    <files mask="index.md"/>
    <files mask="readme-espressif.md"/>
    <files mask="readme-mbed.md"/>
    <files mask="readme-mynewt.md"/>
    <files mask="readme-nuttx.md"/>
    <files mask="readme-nxp_mcux_sdk.md"/>
    <files mask="readme-riot.md"/>
    <files mask="readme-zephyr.md"/>
    <files mask="release-notes.md"/>
    <files mask="release.md"/>
    <files mask="serial_recovery.md"/>
    <files mask="signed_images.md"/>
    <files mask="testplan-mynewt.md"/>
    <files mask="testplan-zephyr.md"/>
  </source>
  <source relative_path="docs/release-notes.d" type="other">
    <files mask="00readme.md"/>
  </source>
</component>-->
    <!--<component id="middleware.mcuboot.scripts.MCXA156" name="mcuboot_scripts" version="2.1.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path="scripts" type="script">
    <files mask="assemble.py"/>
    <files mask="flash.sh"/>
    <files mask="gdb-boot.sh"/>
    <files mask="imgtool.py"/>
    <files mask="jgdb.sh"/>
    <files mask="jl.sh"/>
    <files mask="setup.py"/>
  </source>
  <source relative_path="scripts/imgtool" type="script">
    <files mask="__init__.py"/>
    <files mask="boot_record.py"/>
    <files mask="dumpinfo.py"/>
    <files mask="image.py"/>
    <files mask="main.py"/>
    <files mask="version.py"/>
  </source>
  <source relative_path="scripts/imgtool/keys" type="script">
    <files mask="__init__.py"/>
    <files mask="ecdsa.py"/>
    <files mask="ecdsa_test.py"/>
    <files mask="ed25519.py"/>
    <files mask="ed25519_test.py"/>
    <files mask="general.py"/>
    <files mask="privatebytes.py"/>
    <files mask="rsa.py"/>
    <files mask="rsa_test.py"/>
    <files mask="x25519.py"/>
  </source>
  <source relative_path="scripts" type="other">
    <files mask="imgtool.nix"/>
    <files mask="mcubin.bt"/>
  </source>
  <source relative_path="scripts" type="doc">
    <files mask="requirements.txt"/>
  </source>
</component>-->
    <!--<component id="middleware.mcuboot.unused_files.MCXA156" name="mcuboot_unused_files" version="2.1.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path=".github/workflows" type="other">
    <files mask="espressif.yaml"/>
    <files mask="fih_tests.yaml"/>
    <files mask="imgtool.yaml"/>
    <files mask="mynewt.yaml"/>
    <files mask="sim.yaml"/>
    <files mask="stale_issue.yml"/>
    <files mask="zephyr_build.yaml"/>
  </source>
  <source relative_path="./" type="other">
    <files mask=".gitignore"/>
    <files mask=".gitmodules"/>
    <files mask=".mbedignore"/>
    <files mask=".travis.yml-disabled"/>
    <files mask="CODE_OF_CONDUCT.md"/>
    <files mask="Cargo.lock"/>
    <files mask="Cargo.toml"/>
    <files mask="NOTICE"/>
    <files mask="README.md"/>
    <files mask="enc-aes128kw.b64"/>
    <files mask="enc-aes256kw.b64"/>
    <files mask="enc-ec256-priv.pem"/>
    <files mask="enc-ec256-pub.pem"/>
    <files mask="enc-rsa2048-priv.pem"/>
    <files mask="enc-rsa2048-pub.pem"/>
    <files mask="enc-x25519-priv.pem"/>
    <files mask="enc-x25519-pub.pem"/>
    <files mask="go.mod"/>
    <files mask="project.yml"/>
    <files mask="repository.yml"/>
    <files mask="root-ec-p256-pkcs8.pem"/>
    <files mask="root-ec-p256.pem"/>
    <files mask="root-ec-p384-pkcs8.pem"/>
    <files mask="root-ec-p384.pem"/>
    <files mask="root-ed25519.pem"/>
    <files mask="root-rsa-2048.pem"/>
    <files mask="root-rsa-3072.pem"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="ChangeLogKSDK.txt"/>
    <files mask="SW-Content-Register.txt"/>
  </source>
  <source relative_path="boot/boot_serial/include/boot_serial" type="c_include">
    <files mask="boot_serial.h"/>
    <files mask="boot_serial_encryption.h"/>
  </source>
  <source relative_path="boot/boot_serial" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/boot_serial/src" type="src">
    <files mask="boot_serial.c"/>
    <files mask="boot_serial_encryption.c"/>
    <files mask="zcbor_bulk.c"/>
  </source>
  <source relative_path="boot/boot_serial/src" type="c_include">
    <files mask="boot_serial_priv.h"/>
    <files mask="zcbor_bulk.h"/>
  </source>
  <source relative_path="boot/boot_serial/test" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/boot_serial/test/src" type="src">
    <files mask="boot_test.c"/>
  </source>
  <source relative_path="boot/boot_serial/test/src" type="c_include">
    <files mask="boot_test.h"/>
  </source>
  <source relative_path="boot/boot_serial/test/src/testcases" type="src">
    <files mask="boot_serial_empty_img_msg.c"/>
    <files mask="boot_serial_empty_msg.c"/>
    <files mask="boot_serial_img_msg.c"/>
    <files mask="boot_serial_setup.c"/>
    <files mask="boot_serial_upload_bigger_image.c"/>
  </source>
  <source relative_path="boot/bootutil" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/bootutil" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="boot/bootutil/zephyr" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="script">
    <files mask="BlinkyApp.mk"/>
    <files mask="libs.mk"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="debug">
    <files mask="BlinkyApp_CM4_Debug.launch"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="other">
    <files mask="Readme.md"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp/linker" type="linker">
    <files mask="BlinkyApp_template.ld"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="c_include">
    <files mask="main.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="other">
    <files mask="ExternalMemory.md"/>
    <files mask="README.md"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="linker">
    <files mask="MCUBootApp.ld"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="script">
    <files mask="MCUBootApp.mk"/>
    <files mask="libs.mk"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="debug">
    <files mask="MCUBootApp_CM0P_Debug.launch"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/config/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/config" type="c_include">
    <files mask="mcuboot_crypto_acc_config.h"/>
    <files mask="mcuboot_crypto_config.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="src">
    <files mask="cy_security_cnt.c"/>
    <files mask="cy_serial_flash_prog.c"/>
    <files mask="keys.c"/>
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/os" type="c_include">
    <files mask="os.h"/>
    <files mask="os_heap.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/cypress" type="other">
    <files mask="Makefile"/>
    <files mask="README.md"/>
  </source>
  <source relative_path="boot/cypress" type="script">
    <files mask="common_libs.mk"/>
    <files mask="host.mk"/>
    <files mask="platforms.mk"/>
    <files mask="toolchains.mk"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal" type="src">
    <files mask="cy_flash_map.c"/>
    <files mask="cy_smif_psoc6.c"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/flash_qspi" type="src">
    <files mask="flash_qspi.c"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/flash_qspi" type="c_include">
    <files mask="flash_qspi.h"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/include" type="c_include">
    <files mask="cy_smif_psoc6.h"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/cypress/keys" type="other">
    <files mask="cypress-test-ec-p256.pem"/>
    <files mask="cypress-test-ec-p256.pub"/>
  </source>
  <source relative_path="boot/cypress/libs/retarget_io_pdl" type="src">
    <files mask="cy_retarget_io_pdl.c"/>
  </source>
  <source relative_path="boot/cypress/libs/retarget_io_pdl" type="c_include">
    <files mask="cy_retarget_io_pdl.h"/>
  </source>
  <source relative_path="boot/cypress/libs/watchdog" type="src">
    <files mask="watchdog.c"/>
  </source>
  <source relative_path="boot/cypress/libs/watchdog" type="c_include">
    <files mask="watchdog.h"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM0P/GCC_ARM" type="linker">
    <files mask="cy8c6xxa_cm0plus.ld"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM0P/GCC_ARM" type="other">
    <files mask="startup_psoc6_02_cm0plus.S"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM4/GCC_ARM" type="linker">
    <files mask="cy8c6xxa_cm4_dual.ld"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM4/GCC_ARM" type="other">
    <files mask="startup_psoc6_02_cm4.S"/>
  </source>
  <source relative_path="boot/cypress/platforms" type="src">
    <files mask="cycfg.c"/>
    <files mask="cycfg_clocks.c"/>
    <files mask="cycfg_peripherals.c"/>
    <files mask="cycfg_pins.c"/>
    <files mask="cycfg_routing.c"/>
    <files mask="cycfg_system.c"/>
  </source>
  <source relative_path="boot/cypress/platforms" type="c_include">
    <files mask="cycfg.h"/>
    <files mask="cycfg_clocks.h"/>
    <files mask="cycfg_peripherals.h"/>
    <files mask="cycfg_pins.h"/>
    <files mask="cycfg_routing.h"/>
    <files mask="cycfg_system.h"/>
  </source>
  <source relative_path="boot/cypress/platforms/retarget_io_pdl" type="src">
    <files mask="cy_retarget_io_pdl.c"/>
  </source>
  <source relative_path="boot/cypress/platforms/retarget_io_pdl" type="c_include">
    <files mask="cy_retarget_io_pdl.h"/>
  </source>
  <source relative_path="boot/espressif" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/espressif/ci_configs" type="other">
    <files mask="multi-boot.conf"/>
    <files mask="multi-image.conf"/>
    <files mask="secureboot-sign-ec256.conf"/>
    <files mask="secureboot-sign-ed25519.conf"/>
    <files mask="secureboot-sign-rsa2048.conf"/>
    <files mask="secureboot-sign-rsa3072.conf"/>
    <files mask="serialrecovery.conf"/>
  </source>
  <source relative_path="boot/espressif/hal" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/espressif/hal/include" type="c_include">
    <files mask="app_cpu_start.h"/>
    <files mask="bootloader_wdt.h"/>
    <files mask="esp_log.h"/>
    <files mask="esp_mcuboot_image.h"/>
    <files mask="soc_log.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32" type="script">
    <files mask="esp32.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c2" type="script">
    <files mask="esp32c2.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c2" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c3" type="script">
    <files mask="esp32c3.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c3" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c6" type="script">
    <files mask="esp32c6.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c6" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32h2" type="script">
    <files mask="esp32h2.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32h2" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s2" type="script">
    <files mask="esp32s2.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s2" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s3" type="script">
    <files mask="esp32s3.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s3" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/espressif/hal/src" type="src">
    <files mask="bootloader_banner.c"/>
    <files mask="bootloader_wdt.c"/>
    <files mask="flash_encrypt.c"/>
    <files mask="secure_boot.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32" type="src">
    <files mask="app_cpu_start.c"/>
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32c2" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32c3" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32c6" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32h2" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32s3" type="src">
    <files mask="app_cpu_start.c"/>
  </source>
  <source relative_path="boot/espressif/include/crypto_config" type="script">
    <files mask="ec256.cmake"/>
    <files mask="ed25519.cmake"/>
    <files mask="rsa.cmake"/>
  </source>
  <source relative_path="boot/espressif/include/crypto_config" type="c_include">
    <files mask="mbedtls_custom_config.h"/>
  </source>
  <source relative_path="boot/espressif/include" type="c_include">
    <files mask="esp_loader.h"/>
  </source>
  <source relative_path="boot/espressif/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/espressif/include/os" type="c_include">
    <files mask="os.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/espressif/include/serial_adapter" type="c_include">
    <files mask="serial_adapter.h"/>
  </source>
  <source relative_path="boot/espressif/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/espressif" type="src">
    <files mask="keys.c"/>
    <files mask="main.c"/>
    <files mask="os.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32" type="other">
    <files mask="bootloader-multi.conf"/>
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c2" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c2/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c2" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c3" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c3/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c3" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c6" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c6/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c6" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32h2" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32h2/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32h2" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s2" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s2/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s2" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s3" type="other">
    <files mask="bootloader-multi.conf"/>
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s3/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s3" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port" type="src">
    <files mask="esp_loader.c"/>
    <files mask="esp_mcuboot.c"/>
  </source>
  <source relative_path="boot/espressif/tools" type="script">
    <files mask="toolchain-esp32.cmake"/>
    <files mask="toolchain-esp32c2.cmake"/>
    <files mask="toolchain-esp32c3.cmake"/>
    <files mask="toolchain-esp32c6.cmake"/>
    <files mask="toolchain-esp32h2.cmake"/>
    <files mask="toolchain-esp32s2.cmake"/>
    <files mask="toolchain-esp32s3.cmake"/>
    <files mask="utils.cmake"/>
  </source>
  <source relative_path="boot/mbed" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/mbed" type="src">
    <files mask="app_enc_keys.c"/>
    <files mask="mcuboot_main.cpp"/>
  </source>
  <source relative_path="boot/mbed/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
    <files mask="secondary_bd.h"/>
  </source>
  <source relative_path="boot/mbed/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/mbed/include/os" type="c_include">
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/mbed/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/mbed/include/utils" type="src">
    <files mask="DataShare.cpp"/>
  </source>
  <source relative_path="boot/mbed/include/utils" type="c_include">
    <files mask="DataShare.h"/>
  </source>
  <source relative_path="boot/mbed" type="other">
    <files mask="mbed_lib.json"/>
  </source>
  <source relative_path="boot/mbed/src" type="src">
    <files mask="flash_map_backend.cpp"/>
    <files mask="secondary_bd.cpp"/>
  </source>
  <source relative_path="boot/mynewt" type="other">
    <files mask="README.md"/>
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/mynewt/boot_uart/include/boot_uart" type="c_include">
    <files mask="boot_uart.h"/>
  </source>
  <source relative_path="boot/mynewt/boot_uart" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/mynewt/boot_uart/src" type="src">
    <files mask="boot_uart.c"/>
  </source>
  <source relative_path="boot/mynewt/flash_map_backend/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/mynewt/flash_map_backend" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="boot/mynewt/flash_map_backend/src" type="src">
    <files mask="flash_map_extended.c"/>
  </source>
  <source relative_path="boot/mynewt/mcuboot_config/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/mynewt/mcuboot_config" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/mynewt/src" type="src">
    <files mask="main.c"/>
    <files mask="single_loader.c"/>
  </source>
  <source relative_path="boot/nuttx/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/nuttx/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/nuttx/include/os" type="c_include">
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/nuttx/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/nuttx/include/watchdog" type="c_include">
    <files mask="watchdog.h"/>
  </source>
  <source relative_path="boot/nuttx" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/nuttx/src/flash_map_backend" type="src">
    <files mask="flash_map_backend.c"/>
  </source>
  <source relative_path="boot/nuttx/src/watchdog" type="src">
    <files mask="watchdog.c"/>
  </source>
  <source relative_path="boot/zcbor" type="script">
    <files mask="add_zcbor_copy_version.sh"/>
  </source>
  <source relative_path="boot/zcbor/include" type="c_include">
    <files mask="zcbor_common.h"/>
    <files mask="zcbor_decode.h"/>
    <files mask="zcbor_encode.h"/>
    <files mask="zcbor_print.h"/>
    <files mask="zcbor_tags.h"/>
  </source>
  <source relative_path="boot/zcbor" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="boot/zcbor/src" type="src">
    <files mask="zcbor_common.c"/>
    <files mask="zcbor_decode.c"/>
    <files mask="zcbor_encode.c"/>
  </source>
  <source relative_path="boot/zephyr" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/zephyr" type="other">
    <files mask="Kconfig"/>
    <files mask="Kconfig.firmware_loader"/>
    <files mask="Kconfig.serial_recovery"/>
    <files mask="VERSION"/>
    <files mask="app.overlay"/>
    <files mask="nrf52840dk_nrf52840_cc310_ecdsa.conf"/>
    <files mask="prj.conf"/>
    <files mask="ram_load.conf"/>
    <files mask="sample.yaml"/>
    <files mask="serial_recovery.conf"/>
    <files mask="single_slot.conf"/>
    <files mask="usb_cdc_acm.overlay"/>
    <files mask="usb_cdc_acm_log_recovery.conf"/>
  </source>
  <source relative_path="boot/zephyr" type="src">
    <files mask="arm_cleanup.c"/>
    <files mask="boot_serial_extension_zephyr_basic.c"/>
    <files mask="boot_serial_extensions.c"/>
    <files mask="firmware_loader.c"/>
    <files mask="flash_map_extended.c"/>
    <files mask="flash_map_legacy.c"/>
    <files mask="hooks_sample.c"/>
    <files mask="io.c"/>
    <files mask="keys.c"/>
    <files mask="main.c"/>
    <files mask="os.c"/>
    <files mask="serial_adapter.c"/>
    <files mask="shared_data.c"/>
    <files mask="single_loader.c"/>
  </source>
  <source relative_path="boot/zephyr/boards" type="other">
    <files mask="actinius_icarus_bee_nrf9160.conf"/>
    <files mask="actinius_icarus_nrf9160.conf"/>
    <files mask="actinius_icarus_som_dk_nrf9160.conf"/>
    <files mask="actinius_icarus_som_nrf9160.conf"/>
    <files mask="bl5340_dvk_nrf5340_cpuapp.conf"/>
    <files mask="circuitdojo_feather_nrf9160.conf"/>
    <files mask="conexio_stratus.conf"/>
    <files mask="disco_l475_iot1_stm32l475xx.conf"/>
    <files mask="esp32_devkitc_wroom_esp32_procpu.conf"/>
    <files mask="esp32_devkitc_wrover_esp32_procpu.conf"/>
    <files mask="esp32_ethernet_kit_esp32_procpu.conf"/>
    <files mask="esp32c3_devkitm_esp32c3.conf"/>
    <files mask="esp32c3_luatos_core.conf"/>
    <files mask="esp32s2_franzininho_esp32s2.conf"/>
    <files mask="esp32s2_saola_esp32s2.conf"/>
    <files mask="esp32s3_devkitm_esp32s3_procpu.conf"/>
    <files mask="esp32s3_luatos_core_esp32s3_procpu.conf"/>
    <files mask="esp_wrover_kit_esp32_procpu.conf"/>
    <files mask="flash_sim_driver.conf"/>
    <files mask="frdm_k64f_mk64f12.conf"/>
    <files mask="heltec_wifi_lora32_v2_esp32_procpu.conf"/>
    <files mask="icev_wireless_esp32c3.conf"/>
    <files mask="lpcxpresso55s06_lpc55s06.conf"/>
    <files mask="lpcxpresso55s16_lpc55s16.conf"/>
    <files mask="lpcxpresso55s28_lpc55s28.conf"/>
    <files mask="lpcxpresso55s36_lpc55s36.conf"/>
    <files mask="lpcxpresso55s69_lpc55s69_cpu0.conf"/>
    <files mask="m5stickc_plus_esp32_procpu.conf"/>
    <files mask="mimxrt1010_evk_mimxrt1011.conf"/>
    <files mask="mimxrt1015_evk_mimxrt1015.conf"/>
    <files mask="mimxrt1020_evk_mimxrt1021.conf"/>
    <files mask="mimxrt1024_evk_mimxrt1024.conf"/>
    <files mask="mimxrt1040_evk_mimxrt1042.conf"/>
    <files mask="mimxrt1050_evk_mimxrt1052_qspi.conf"/>
    <files mask="mimxrt1060_evk_mimxrt1062.conf"/>
    <files mask="mimxrt1060_evk_mimxrt1062_cm7.conf"/>
    <files mask="mimxrt1060_evkb_mimxrt1062.conf"/>
    <files mask="mimxrt1064_evk_mimxrt1064.conf"/>
    <files mask="mimxrt1170_evk_mimxrt1176_cm7.conf"/>
    <files mask="mimxrt595_evk_mimxrt595s_cm33.conf"/>
    <files mask="mimxrt685_evk_mimxrt685s_cm33.conf"/>
    <files mask="nrf51dk_nrf51822.conf"/>
    <files mask="nrf52840_big.overlay"/>
    <files mask="nrf52840_single_slot.overlay"/>
    <files mask="nrf52840dk_hooks_sample_overlay.conf"/>
    <files mask="nrf52840dk_nrf52840.conf"/>
    <files mask="nrf52840dk_qspi_nor.conf"/>
    <files mask="nrf52840dk_qspi_nor_secondary.overlay"/>
    <files mask="nrf52840dk_qspi_secondary_boot.conf"/>
    <files mask="nrf52840dk_ram.overlay"/>
    <files mask="nrf52840dk_ram_multi.overlay"/>
    <files mask="nrf52840dongle_nrf52840.conf"/>
    <files mask="nrf52_minimal_footprint.conf"/>
    <files mask="nrf54l15pdk_nrf54l15_cpuapp.conf"/>
    <files mask="odroid_go_esp32_procpu.conf"/>
    <files mask="olimex_esp32_evb_esp32_procpu.conf"/>
    <files mask="pinnacle_100_dvk_nrf52840.conf"/>
    <files mask="rd_rw612_bga_rw612.conf"/>
    <files mask="sparkfun_thing_plus_nrf9160.conf"/>
    <files mask="stamp_c3_esp32c3.conf"/>
    <files mask="tlsr9518adk80d_tlsr9518.conf"/>
    <files mask="xiao_esp32c3_esp32c3.conf"/>
  </source>
  <source relative_path="boot/zephyr/include" type="c_include">
    <files mask="arm_cleanup.h"/>
    <files mask="config-asn1.h"/>
    <files mask="config-ec.h"/>
    <files mask="config-ed25519.h"/>
    <files mask="config-kw.h"/>
    <files mask="config-rsa-kw.h"/>
    <files mask="config-rsa.h"/>
    <files mask="mcuboot-mbedtls-cfg.h"/>
    <files mask="platform-bench.h"/>
    <files mask="target.h"/>
  </source>
  <source relative_path="boot/zephyr/include/boot_serial" type="linker">
    <files mask="boot_serial.ld"/>
  </source>
  <source relative_path="boot/zephyr/include/boot_serial" type="c_include">
    <files mask="boot_serial_extensions.h"/>
  </source>
  <source relative_path="boot/zephyr/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/zephyr/include/hal" type="c_include">
    <files mask="hal_bsp.h"/>
    <files mask="hal_flash.h"/>
  </source>
  <source relative_path="boot/zephyr/include/io" type="c_include">
    <files mask="io.h"/>
  </source>
  <source relative_path="boot/zephyr/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/zephyr/include/os" type="c_include">
    <files mask="os.h"/>
    <files mask="os_heap.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/zephyr/include/serial_adapter" type="c_include">
    <files mask="serial_adapter.h"/>
  </source>
  <source relative_path="boot/zephyr/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/zephyr/kernel" type="src">
    <files mask="banner.c"/>
  </source>
  <source relative_path="boot/zephyr/sysbuild" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/zephyr/targets" type="c_include">
    <files mask="arduino_101.h"/>
  </source>
  <source relative_path="ci" type="script">
    <files mask="check-signed-off-by.sh"/>
    <files mask="compare_versions.py"/>
    <files mask="espressif_install.sh"/>
    <files mask="espressif_run.sh"/>
    <files mask="fih-tests_install.sh"/>
    <files mask="fih-tests_run.sh"/>
    <files mask="get_features.py"/>
    <files mask="imgtool_install.sh"/>
    <files mask="imgtool_run.sh"/>
    <files mask="mynewt_install.sh"/>
    <files mask="mynewt_run.sh"/>
    <files mask="sim_install.sh"/>
    <files mask="sim_run.sh"/>
  </source>
  <source relative_path="ci/fih_test_docker" type="script">
    <files mask="damage_image.py"/>
    <files mask="execute_test.sh"/>
    <files mask="fi_make_manifest.sh"/>
    <files mask="fi_tester_gdb.sh"/>
    <files mask="generate_test_report.py"/>
    <files mask="run_fi_test.sh"/>
    <files mask="utils.py"/>
    <files mask="validate_output.py"/>
  </source>
  <source relative_path="ci/fih_test_docker/docker-build" type="other">
    <files mask="Dockerfile"/>
  </source>
  <source relative_path="ci/fih_test_docker/docker-build" type="script">
    <files mask="build.sh"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_kw" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_kw/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_rsa" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_rsa/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="ci/mynewt_targets/basic" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/bootserial" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/ecdsa" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/ecdsa_kw" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_kw" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_overwriteonly" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_rsaoaep" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_rsaoaep_bootstrap" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/swap_move" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci" type="doc">
    <files mask="requirements.txt"/>
  </source>
  <source relative_path="ext/fiat" type="other">
    <files mask="LICENSE"/>
    <files mask="METADATA"/>
    <files mask="README.chromium"/>
    <files mask="README.md"/>
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/fiat/src" type="src">
    <files mask="curve25519.c"/>
  </source>
  <source relative_path="ext/fiat/src" type="c_include">
    <files mask="curve25519.h"/>
    <files mask="curve25519_tables.h"/>
  </source>
  <source relative_path="ext/mbedtls-asn1" type="other">
    <files mask="README"/>
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/nrf" type="other">
    <files mask="README.md"/>
  </source>
  <source relative_path="ext/nrf" type="src">
    <files mask="cc310_glue.c"/>
  </source>
  <source relative_path="ext/nrf" type="c_include">
    <files mask="cc310_glue.h"/>
  </source>
  <source relative_path="ext/tinycrypt-sha512/lib/include/tinycrypt" type="c_include">
    <files mask="sha512.h"/>
  </source>
  <source relative_path="ext/tinycrypt-sha512/lib" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/tinycrypt-sha512/lib/source" type="src">
    <files mask="sha512.c"/>
  </source>
  <source relative_path="ext/tinycrypt" type="other">
    <files mask=".gitignore"/>
    <files mask="AUTHORS"/>
    <files mask="LICENSE"/>
    <files mask="Makefile"/>
    <files mask="README"/>
    <files mask="VERSION"/>
  </source>
  <source relative_path="ext/tinycrypt" type="script">
    <files mask="config.mk"/>
  </source>
  <source relative_path="ext/tinycrypt/documentation" type="other">
    <files mask="tinycrypt.rst"/>
  </source>
  <source relative_path="ext/tinycrypt/lib" type="other">
    <files mask="Makefile"/>
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/tinycrypt/lib/include/tinycrypt" type="c_include">
    <files mask="ecc_dh.h"/>
  </source>
  <source relative_path="ext/tinycrypt/lib/source" type="src">
    <files mask="ecc_platform_specific.c"/>
    <files mask="ecc_dh.c"/>
  </source>
  <source relative_path="ext/tinycrypt/tests" type="other">
    <files mask="Makefile"/>
  </source>
  <source relative_path="ext/tinycrypt/tests/include" type="c_include">
    <files mask="test_ecc_utils.h"/>
    <files mask="test_utils.h"/>
  </source>
  <source relative_path="ext/tinycrypt/tests" type="binary">
    <files mask="pseudo-random-data.bin"/>
  </source>
  <source relative_path="ext/tinycrypt/tests" type="src">
    <files mask="test_aes.c"/>
    <files mask="test_cbc_mode.c"/>
    <files mask="test_ccm_mode.c"/>
    <files mask="test_cmac_mode.c"/>
    <files mask="test_ctr_mode.c"/>
    <files mask="test_ctr_prng.c"/>
    <files mask="test_ecc_dh.c"/>
    <files mask="test_ecc_dsa.c"/>
    <files mask="test_ecc_utils.c"/>
    <files mask="test_hmac.c"/>
    <files mask="test_hmac_prng.c"/>
    <files mask="test_sha256.c"/>
  </source>
  <source relative_path="ptest" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.lock"/>
    <files mask="Cargo.toml"/>
  </source>
  <source relative_path="ptest/src" type="other">
    <files mask="main.rs"/>
  </source>
  <source relative_path="samples/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.template.h"/>
  </source>
  <source relative_path="samples/zephyr" type="other">
    <files mask="Makefile"/>
    <files mask="README.md"/>
    <files mask="overlay-ecdsa-p256.conf"/>
    <files mask="overlay-rsa.conf"/>
    <files mask="overlay-skip-primary-slot-validate.conf"/>
    <files mask="overlay-upgrade-only.conf"/>
    <files mask="run-tests.go"/>
    <files mask="test-compile.go"/>
  </source>
  <source relative_path="samples/zephyr/bad-keys" type="other">
    <files mask="README.md"/>
    <files mask="bad-ec-p256.pem"/>
    <files mask="bad-rsa-2048.pem"/>
  </source>
  <source relative_path="samples/zephyr" type="script">
    <files mask="build-boot.sh"/>
    <files mask="build-hello.sh"/>
    <files mask="run-tests.sh"/>
  </source>
  <source relative_path="samples/zephyr/hello-world" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="samples/zephyr/hello-world" type="other">
    <files mask="README.rst"/>
    <files mask="prj.conf"/>
    <files mask="sample.yaml"/>
  </source>
  <source relative_path="samples/zephyr/hello-world/boards" type="other">
    <files mask="README.rst"/>
  </source>
  <source relative_path="samples/zephyr/hello-world/src" type="other">
    <files mask="Makefile"/>
  </source>
  <source relative_path="samples/zephyr/hello-world/src" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="samples/zephyr/mcutests" type="other">
    <files mask="mcutests.go"/>
  </source>
  <source relative_path="sim" type="other">
    <files mask="Cargo.toml"/>
    <files mask="README.rst"/>
  </source>
  <source relative_path="sim/mcuboot-sys" type="other">
    <files mask="Cargo.toml"/>
    <files mask="build.rs"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport" type="c_include">
    <files mask="bootsim.h"/>
    <files mask="config-add-psa-crypto.h"/>
    <files mask="config-asn1.h"/>
    <files mask="config-ec-psa.h"/>
    <files mask="config-ec.h"/>
    <files mask="config-ed25519.h"/>
    <files mask="config-kw.h"/>
    <files mask="config-rsa-kw.h"/>
    <files mask="config-rsa.h"/>
    <files mask="devicetree.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport" type="src">
    <files mask="keys.c"/>
    <files mask="psa_crypto_init_stub.c"/>
    <files mask="run.c"/>
    <files mask="security_cnt.c"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/os" type="c_include">
    <files mask="os_heap.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/storage" type="c_include">
    <files mask="flash_map.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/src" type="other">
    <files mask="api.rs"/>
    <files mask="area.rs"/>
    <files mask="c.rs"/>
    <files mask="lib.rs"/>
  </source>
  <source relative_path="sim/simflash" type="other">
    <files mask="Cargo.toml"/>
  </source>
  <source relative_path="sim/simflash/src" type="other">
    <files mask="lib.rs"/>
    <files mask="pdump.rs"/>
  </source>
  <source relative_path="sim/src" type="other">
    <files mask="caps.rs"/>
    <files mask="depends.rs"/>
    <files mask="image.rs"/>
    <files mask="lib.rs"/>
    <files mask="main.rs"/>
    <files mask="testlog.rs"/>
    <files mask="tlv.rs"/>
    <files mask="utils.rs"/>
  </source>
  <source relative_path="sim/src" type="doc">
    <files mask="ecdsa_pub_key-rs.txt"/>
    <files mask="ed25519_pub_key-rs.txt"/>
    <files mask="rsa3072_pub_key-rs.txt"/>
    <files mask="rsa_pub_key-rs.txt"/>
  </source>
  <source relative_path="sim/tests" type="other">
    <files mask="core.rs"/>
  </source>
  <source relative_path="testplan/mynewt" type="other">
    <files mask="Makefile"/>
    <files mask="key_ec.pem"/>
    <files mask="key_ec256.pem"/>
    <files mask="key_ec256_2.pem"/>
    <files mask="key_ec_2.pem"/>
    <files mask="key_rsa.pem"/>
    <files mask="key_rsa_2.pem"/>
    <files mask="project.yml"/>
  </source>
  <source relative_path="testplan/mynewt/apps/blinky" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/apps/blinky/src" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="testplan/mynewt/apps/slinky" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/apps/slinky/src" type="src">
    <files mask="main.c"/>
    <files mask="random_data.c"/>
  </source>
  <source relative_path="testplan/mynewt/keys/ec256" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/keys/ec256/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="testplan/mynewt/keys" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/keys/rsa" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/keys/rsa/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="zephyr" type="other">
    <files mask="module.yml"/>
  </source>
</component>-->
    <component id="middleware.lvgl.template.MCXA156" name="lvgl_template" brief="lvgl template" version="9.2.1" full_name="lvgl template configuration" category="Graphics/lvgl graphics library" user_visible="false" type="project_template" package_base_path="middleware/lvgl" project_base_path="lvgl">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lv_conf.h"/>
      </source>
      <source relative_path="template" config="true" type="src">
        <files mask="lvgl_support.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.littlefs.MCXA156" name="LittleFS" brief="littlefs" version="2.9.1" full_name="LittleFS File System stack" category="File System/LittleFS File System" user_visible="true" type="middleware" package_base_path="middleware/littlefs" project_base_path="littlefs">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lfs.c"/>
        <files mask="lfs_util.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lfs.h"/>
        <files mask="lfs_util.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_littlefs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.MCXA156" name="fatfs" brief="FatFs" version="0.15.0" full_name="FAT File System stack" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
        <include_path relative_path="source" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_mmc.MCXA156" name="fatfs_mmc" brief="FatFs template MMC" version="0.15.0" full_name="FatFs template configuration for MMC disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="template/mmc" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/mmc" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/mmc" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_nand.MCXA156" name="fatfs_nand" brief="FatFs template NAND" version="0.15.0" full_name="FatFs template configuration for NAND disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="template/nand" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_nand.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/nand" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/nand" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_ram.MCXA156" name="fatfs_ram" brief="FatFs template RAM" version="0.15.0" full_name="FatFs template configuration for RAM disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="template/ram" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ram" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ram" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sd.MCXA156" name="fatfs_sd" brief="FatFs template SD" version="0.15.0" full_name="FatFs template configuration for SD disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="template/sd" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sd" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sd" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sdspi.MCXA156" name="fatfs_sdspi" brief="FatFs template SDSPI" version="0.15.0" full_name="FatFs template configuration for SDSPI disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="template/sdspi" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdspi" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sdspi" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_usb.MCXA156" name="fatfs_usb" brief="FatFs template USB" version="0.15.0" full_name="FatFs template configuration for USB disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="template/usb" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usb" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/usb" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.template.MCXA156" name="emwin_template" brief="emwin template" version="6.38" full_name="emWin template configuration" category="Graphics/emWin graphics library" user_visible="false" type="project_template" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="template" config="true" type="src">
        <files mask="emwin_support.c"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="emwin_support.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_emwin_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
        <include_path relative_path="emWin_header" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.ektf2k.MCXA156" name="ektf2k" brief="Driver ektf2k" version="1.0.0" full_name="Driver ektf2k" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ektf2k" project_base_path="touchpanel">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ektf2k.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ektf2k.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ektf2k.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft3267.MCXA156" name="ft3267" brief="Touch panel controller FT3267 driver" version="1.0.1" full_name="Driver ft3267" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft3267" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft3267.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft3267.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft3267.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft5406.MCXA156" name="ft5406" brief="Driver ft5406" version="1.0.0" full_name="Driver ft5406" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft5406" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft5406.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft5406.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft5406.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.gt911.MCXA156" name="gt911" brief="Driver gt911" version="1.0.4" full_name="Driver gt911" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/gt911" project_base_path="touchpanel">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gt911.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gt911.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_gt911.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tma525b.MCXA156" name="tma525b" brief="Driver tma525b" version="1.0.0" full_name="Driver tma525b" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/tma525b" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tma525b.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tma525b.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tma525b.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MCXA156" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_swo.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MCXA156" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SSERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_virtual.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.rtt.template.MCXA156" name="rtt_template" brief="RTT template configuration" version="7.22.0" full_name="rtt template configuration" category="Device/SDK Drivers" user_visible="false" type="project_template" package_base_path="components/rtt" project_base_path="rtt">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="SEGGER_RTT_Conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_rtt_template.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.reset_adapter.MCXA156" name="reset_adapter" brief="Component reset_adapter" version="1.0.0" full_name="Component reset_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/reset" project_base_path="component/reset">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_reset.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_reset_adapter.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MCXA156" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_panic.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_template_config.MCXA156" name="osa" brief="Component osa template config" version="1.0.0" full_name="Component osa template config" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="config" config="true" type="c_include">
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_template_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config" type="c_include"/>
        <include_path relative_path="config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_interface.MCXA156" name="osa_interface" brief="Component osa interface" version="1.0.0" full_name="Component osa interface" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
    </component>
    <component id="component.i2c_mux.MCXA156" name="i2c_mux" brief="Component i2c_mux" version="1.0.0" full_name="Component i2c_mux" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c/muxes" project_base_path="component/i2c/muxes">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
    </component>
    <component id="component.mflash_onchip_fmu.MCXA156" name="mflash onchip_fmu" brief="mflash onchip_fmu" version="1.0.0" full_name="mflash onchip_fmu" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
    </component>
    <component id="project_template.MCXA156.MCXA156" name="MCXA156" brief="Devices_project_template MCXA156" version="1.0.0" full_name="Devices_project_template MCXA156" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MCXA156/project_template" project_base_path="board">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.serial_manager.MCXA156"/>
              <component_dependency value="component.serial_manager_uart.MCXA156"/>
              <component_dependency value="platform.utilities.assert.MCXA156"/>
              <component_dependency value="utility.debug_console.MCXA156"/>
              <component_dependency value="utility.debug_console_template_config.MCXA156"/>
            </all>
            <all>
              <component_dependency value="platform.utilities.assert_lite.MCXA156"/>
              <component_dependency value="utility.debug_console_lite.MCXA156"/>
            </all>
          </any_of>
          <component_dependency value="component.lpuart_adapter.MCXA156"/>
          <component_dependency value="device.MCXA156_startup.MCXA156"/>
          <component_dependency value="platform.drivers.clock.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <component_dependency value="platform.drivers.gpio.MCXA156"/>
          <component_dependency value="platform.drivers.lpuart.MCXA156"/>
          <component_dependency value="platform.drivers.port.MCXA156"/>
          <component_dependency value="platform.drivers.mcx_spc.MCXA156"/>
          <component_dependency value="platform.drivers.reset.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_project_template.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MCXA156_linker.MCXA156" name="MCXA156_linker" brief="Device MCXA156_linker" version="1.0.0" full_name="Device MCXA156_linker" category="Device/SDK Utilities" user_visible="true" type="linker" package_base_path="devices/MCXA156" project_base_path="MCXA156">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="gcc" type="linker">
        <files mask="MCXA156_flash.ld"/>
        <files mask="MCXA156_ram.ld"/>
      </source>
    </component>
    <component id="RTE_Device.MCXA156" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MCXA156/template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_RTE.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MCXA156" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_uart.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MCXA156" name="clock" brief="Clock Driver" version="2.0.0" full_name="Clock Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mcx_spc.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_clock.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma4.MCXA156" name="edma" brief="EDMA Driver" version="2.10.5" full_name="EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma_soc.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
        <files mask="fsl_edma_core.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_edma4.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma_soc.MCXA156" name="edma_soc" brief="EDMA SOC Driver" version="2.0.0" full_name="EDMA SOC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_edma_soc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_edma_soc.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_edma.MCXA156" name="i2c_edma" brief="LPI2C Driver" version="2.4.4" full_name="LPI2C Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpi2c_edma.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_edma.MCXA156" name="lpspi_edma" brief="LPSPI Driver" version="2.4.6" full_name="LPSPI Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpspi_edma.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_edma.MCXA156" name="lpuart_edma" brief="LPUART Driver" version="2.6.0" full_name="LPUART Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpuart_edma.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan_edma.MCXA156" name="flexcan_edma" brief="FLEXCAN Driver" version="2.12.0" full_name="FLEXCAN EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcan_edma.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_flexio_edma.MCXA156" name="dbi_flexio_edma" brief="Driver dbi_flexio_edma" version="1.0.1" full_name="Driver dbi_flexio_edma" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/flexio" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_flexio_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_flexio_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi_flexio_edma.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trdc1.MCXA156" name="trdc" brief="TRDC Driver" version="2.2.1" full_name="TRDC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.trdc_soc.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trdc.h"/>
        <files mask="fsl_trdc_core.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_trdc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_trdc_1.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart_edma.MCXA156" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.4.1" full_name="FLEXIO UART EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_uart_edma.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi_edma.MCXA156" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.3.0" full_name="FLEXIO SPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_spi_edma.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd_edma.MCXA156" name="flexio_mculcd_edma" brief="FLEXIO MCULCD EDMA Driver" version="2.0.6" full_name="FLEXIO MCULCD EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_mculcd_edma.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MCXA156_CMSIS.MCXA156" name="MCXA156_CMSIS" brief="Device MCXA156_cmsis" version="1.0.0" full_name="Device MCXA156_cmsis" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MCXA156" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
        <files mask="MCXA156.h"/>
        <files mask="MCXA156_features.h"/>
        <files mask="MCXA156_COMMON.h"/>
      </source>
      <source relative_path="periph1" type="c_include">
        <files mask="PERI_ADC.h"/>
        <files mask="PERI_AOI.h"/>
        <files mask="PERI_CAN.h"/>
        <files mask="PERI_CDOG.h"/>
        <files mask="PERI_CMC.h"/>
        <files mask="PERI_CRC.h"/>
        <files mask="PERI_CTIMER.h"/>
        <files mask="PERI_DEBUGMAILBOX.h"/>
        <files mask="PERI_DMA.h"/>
        <files mask="PERI_EIM.h"/>
        <files mask="PERI_EQDC.h"/>
        <files mask="PERI_ERM.h"/>
        <files mask="PERI_FLEXIO.h"/>
        <files mask="PERI_FMC.h"/>
        <files mask="PERI_FMU.h"/>
        <files mask="PERI_FMUTEST.h"/>
        <files mask="PERI_FREQME.h"/>
        <files mask="PERI_GLIKEY.h"/>
        <files mask="PERI_GPIO.h"/>
        <files mask="PERI_I3C.h"/>
        <files mask="PERI_INPUTMUX.h"/>
        <files mask="PERI_LPCMP.h"/>
        <files mask="PERI_LPDAC.h"/>
        <files mask="PERI_LPI2C.h"/>
        <files mask="PERI_LPSPI.h"/>
        <files mask="PERI_LPTMR.h"/>
        <files mask="PERI_LPUART.h"/>
        <files mask="PERI_MRCC.h"/>
        <files mask="PERI_OPAMP.h"/>
        <files mask="PERI_OSTIMER.h"/>
        <files mask="PERI_PORT.h"/>
        <files mask="PERI_PWM.h"/>
        <files mask="PERI_SCG.h"/>
        <files mask="PERI_SPC.h"/>
        <files mask="PERI_SYSCON.h"/>
        <files mask="PERI_TRDC.h"/>
        <files mask="PERI_USB.h"/>
        <files mask="PERI_UTICK.h"/>
        <files mask="PERI_VBAT.h"/>
        <files mask="PERI_WAKETIMER.h"/>
        <files mask="PERI_WUU.h"/>
        <files mask="PERI_WWDT.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_CMSIS.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="periph1" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="periph1" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MCXA156_system.MCXA156" name="MCXA156_system" brief="Device MCXA156_system" version="1.0.0" full_name="Device MCXA156_system" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MCXA156" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="device.MCXA156_CMSIS.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="system_MCXA156.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="system_MCXA156.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_system.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MCXA156_startup.MCXA156" name="MCXA156_startup" brief="Device MCXA156_startup" version="1.0.0" full_name="Device MCXA156_startup" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MCXA156" project_base_path="startup">
      <dependencies>
        <all>
          <component_dependency value="device.MCXA156_system.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="asm_include">
        <files mask="startup_MCXA156.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_startup.MCXA156.cmake" hidden="true"/>
      </source>
    </component>
    <component id="CMSIS_Include_core_cm.MCXA156" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="6.1.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" category="CMSIS/CORE" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source compiler="compiler_gcc" relative_path="./" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="cmsis_gcc.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="m-profile" type="c_include">
        <files mask="cmsis_gcc_m.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_core0_MCXA156">
        <files mask="core_cm33.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source relative_path="m-profile" type="c_include" device_cores="cm33_core0_MCXA156">
        <files mask="armv8m_mpu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Include_core_cm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="m-profile" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="m-profile" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX.MCXA156" name="CMSIS_RTOS2_RTX5" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <defines>
        <define name="CMSIS_device_header" value="'&quot;fsl_device_registers.h&quot;'"/>
        <define name="RTE_COMPONENTS_H" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MCXA156"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_delay.c"/>
        <files mask="rtx_evflags.c"/>
        <files mask="rtx_evr.c"/>
        <files mask="rtx_kernel.c"/>
        <files mask="rtx_memory.c"/>
        <files mask="rtx_mempool.c"/>
        <files mask="rtx_msgqueue.c"/>
        <files mask="rtx_mutex.c"/>
        <files mask="rtx_semaphore.c"/>
        <files mask="rtx_system.c"/>
        <files mask="rtx_thread.c"/>
        <files mask="rtx_timer.c"/>
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source relative_path="Source" type="src" device_cores="cm33_core0_MCXA156">
        <files mask="os_systick.c"/>
      </source>
      <source toolchain="armgcc" relative_path="RTX/Source/GCC" type="asm_include" device_cores="cm33_core0_MCXA156">
        <files mask="irq_armv8mml.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX_LIB.MCXA156" name="CMSIS_RTOS2_RTX5_Library" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MCXA156"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_core0_MCXA156" dsp="true" fpu="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_core0_MCXA156" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" type="lib" device_cores="cm33_core0_MCXA156" dsp="true" fpu="true" tz="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" type="lib" device_cores="cm33_core0_MCXA156" dsp="true" fpu="true" tz="false">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX_LIB.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Source" type="c_include"/>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Source" type="asm_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.romapi.MCXA156" name="ROMAPI" brief="ROMAPI Driver" version="2.0.1" full_name="ROMAPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_romapi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_romapi.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.str.MCXA156" name="utility_str" brief="Utility str" version="1.0.0" full_name="Utility str" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MCXA156/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="str" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="str" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_str.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" type="c_include"/>
        <include_path relative_path="str" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MCXA156" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MCXA156/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="utility.debug_console.MCXA156"/>
          </not>
          <component_dependency value="platform.drivers.lpuart.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <component_dependency value="utility.str.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="debug_console_lite" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console_lite" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console_lite.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console_lite" type="c_include"/>
        <include_path relative_path="debug_console_lite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console.MCXA156" name="debug_console" brief="Utility debug_console" version="1.0.1" full_name="Utility debug_console" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MCXA156/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <component_dependency value="utility.str.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="debug_console" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console" type="c_include"/>
        <include_path relative_path="debug_console" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_template_config.MCXA156" name="debug_console_template_config" brief="Utility debug_console Template Config" version="1.0.0" full_name="Utility debug_console Template Config" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MCXA156/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="debug_console/config" config="true" type="c_include">
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console_template_config.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console/config" type="c_include"/>
        <include_path relative_path="debug_console/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert.MCXA156" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MCXA156/utilities/debug_console" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <component_dependency value="utility.debug_console.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_assert.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert_lite.MCXA156" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MCXA156/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="platform.utilities.assert.MCXA156"/>
          </not>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <component_dependency value="utility.debug_console_lite.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_assert_lite.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.MCXA156" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="11.0.1" full_name="FreeRTOS kernel" category="RTOS/Core" user_visible="true" type="OS" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.freertos-kernel.heap_1.MCXA156"/>
            <component_dependency value="middleware.freertos-kernel.heap_2.MCXA156"/>
            <component_dependency value="middleware.freertos-kernel.heap_3.MCXA156"/>
            <component_dependency value="middleware.freertos-kernel.heap_4.MCXA156"/>
            <component_dependency value="middleware.freertos-kernel.heap_5.MCXA156"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.config.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_syscall_numbers.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_non_trustzone.MCXA156" name="cm33 nontrustzone port" brief="FreeRTOS cm33 non trustzone port" version="11.0.1" full_name="FreeRTOS cm33 non trustzone port" category="RTOS/cm33_non_trustzone_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_non_trustzone.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc" type="asm_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.non_secure.MCXA156" name="cm33 secure port" brief="FreeRTOS cm33 secure port" version="11.0.1" full_name="FreeRTOS cm33 secure port" category="RTOS/cm33_secure_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/non_secure" type="src" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/non_secure" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_init.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_non_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc" type="asm_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc" type="asm_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.secure.MCXA156" name="cm33 secure port" brief="FreeRTOS Secure Context" version="11.0.1" full_name="FreeRTOS Secure Context" category="RTOS/cm33 secure port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/secure" type="src" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="secure_context.c"/>
        <files mask="secure_context_port.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc" type="asm_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.extension.MCXA156" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="11.0.1" full_name="FreeRTOS NXP extension" category="RTOS/TAD extension" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_extension.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.use_newlib_reentrant.MCXA156" name="FreeRTOS NXP Newlib Reentrant" brief="FreeRTOS NXP Newlib Reentrant" version="11.0.1" full_name="FreeRTOS NXP Newlib Reentrant" category="RTOS/TAD Newlib Reentrant" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="newlib-freertos.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_use_newlib_reentrant.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.use_picolibc_tls.MCXA156" name="FreeRTOS NXP Picolibc TLS" brief="FreeRTOS NXP Picolibc TLS" version="11.0.1" full_name="FreeRTOS NXP Picolibc TLS" category="RTOS/TAD Picolibc TLS" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="picolibc-freertos.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_use_picolibc_tls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MCXA156" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="11.0.1" full_name="FreeRTOS heap 1" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MCXA156" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="11.0.1" full_name="FreeRTOS heap 2" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MCXA156" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="11.0.1" full_name="FreeRTOS heap_3" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MCXA156" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="11.0.1" full_name="FreeRTOS heap 4" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MCXA156" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="11.0.1" full_name="FreeRTOS heap 5" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_5.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MCXA156" name="old FreeRTOS MPU wrappers used before V10.6.0" brief="old FreeRTOS MPU wrappers used before V10.6.0" version="11.0.1" full_name="old FreeRTOS MPU wrappers used before V10.6.0" category="RTOS/MPU wrappers" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers_v2.MCXA156" name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" brief="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" version="11.0.1" full_name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" category="RTOS/MPU wrappers V2" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers_v2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers_v2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.config.MCXA156" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="11.0.1" full_name="FreeRTOS configuration template" category="RTOS/freertos template" user_visible="true" type="project_template" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source relative_path="template/ARM_CM33_3_priority_bits" config="true" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="FreeRTOSConfig_Gen.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="template" type="asm_include"/>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" type="asm_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_freertos.MCXA156" name="lpuart_freertos" brief="LPUART Freertos Driver" version="2.5.0" full_name="LPUART Freertos Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MCXA156"/>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpuart_freertos.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_freertos.MCXA156" name="lpspi_freertos" brief="LPSPI FreeRTOS Driver" version="2.3.1" full_name="LPSPI FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MCXA156"/>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpspi_freertos.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_freertos.MCXA156" name="i2c_freertos" brief="LPI2C FreeRTOS Driver" version="2.3.2" full_name="LPI2C FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpi2c_freertos.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wwdt.MCXA156" name="wwdt" brief="WWDT Driver" version="2.1.9" full_name="WWDT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wwdt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wwdt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wwdt.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wuu.MCXA156" name="wuu" brief="WUU Driver" version="2.4.0" full_name="WUU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_wuu.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wuu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wuu.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.waketimer.MCXA156" name="waketimer" brief="WAKETIMER Driver" version="2.0.1" full_name="WAKETIMER Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_waketimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_waketimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_waketimer.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.utick.MCXA156" name="utick" brief="UTICK Driver" version="2.0.5" full_name="UTICK Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_utick.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_utick.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_utick.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pwm.MCXA156" name="pwm" brief="PWM Driver" version="2.9.0" full_name="PWM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pwm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pwm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pwm.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.port.MCXA156" name="port" brief="PORT Driver" version="2.5.1" full_name="PORT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_port.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_port.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ostimer.MCXA156" name="ostimer" brief="OSTimer Driver" version="2.2.4" full_name="OSTimer Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ostimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ostimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ostimer.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.opamp.MCXA156" name="opamp" brief="OPAMP Driver" version="2.2.1" full_name="OPAMP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_opamp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_opamp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_opamp.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mcx_vbat.MCXA156" name="mcx_vbat" brief="MCX VBAT Driver" version="2.3.1" full_name="MCX VBAT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_vbat.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_vbat.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mcx_vbat.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mcx_spc.MCXA156" name="mcx_spc" brief="MCX SPC Driver" version="2.8.0" full_name="MCX SPC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mcx_spc.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mcx_cmc.MCXA156" name="mcx_cmc" brief="MCX_CMC Driver" version="2.3.0" full_name="mcx_cmc Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cmc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cmc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mcx_cmc.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart.MCXA156" name="lpuart" brief="LPUART Driver" version="2.9.1" full_name="LPUART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpuart.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.MCXA156" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="2.7.0" full_name="LPUART CMSIS Driver" category="CMSIS Driver/USART" user_visible="true" type="CMSIS_driver" package_base_path="devices/MCXA156/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.USART.MCXA156"/>
          <component_dependency value="platform.drivers.lpuart.MCXA156"/>
          <component_dependency value="RTE_Device.MCXA156"/>
          <component_dependency value="platform.drivers.lpuart_edma.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpuart.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lptmr.MCXA156" name="lptmr" brief="LPTMR Driver" version="2.2.0" full_name="LPTMR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lptmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lptmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lptmr.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi.MCXA156" name="lpspi" brief="LPSPI Driver" version="2.7.1" full_name="LPSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpspi.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_cmsis.MCXA156" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="2.12.0" full_name="LPSPI CMSIS Driver" category="CMSIS Driver/SPI" user_visible="true" type="CMSIS_driver" package_base_path="devices/MCXA156/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.SPI.MCXA156"/>
          <component_dependency value="platform.drivers.lpspi.MCXA156"/>
          <component_dependency value="RTE_Device.MCXA156"/>
          <component_dependency value="platform.drivers.lpspi_edma.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpspi.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c.MCXA156" name="i2c" brief="LPI2C Driver" version="2.6.1" full_name="LPI2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpi2c.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.MCXA156" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="2.6.0" full_name="LPI2C CMSIS Driver" category="CMSIS Driver/I2C" user_visible="true" type="CMSIS_driver" package_base_path="devices/MCXA156/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MCXA156"/>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="RTE_Device.MCXA156"/>
          <component_dependency value="platform.drivers.lpi2c_edma.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpi2c.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpcmp.MCXA156" name="lpcmp" brief="LPCMP Driver" version="2.3.2" full_name="LPCMP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpcmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpcmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpcmp.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_freqme.MCXA156" name="lpc_freqme" brief="lpc_freqme Driver" version="2.1.2" full_name="lpc_freqme Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_freqme.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_freqme.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpc_freqme.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpadc.MCXA156" name="lpadc" brief="LPADC Driver" version="2.9.3" full_name="LPADC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpadc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpadc.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux.MCXA156" name="inputmux" brief="INPUTMUX Driver" version="2.0.9" full_name="INPUTMUX Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <component_dependency value="platform.drivers.inputmux_connections.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_inputmux.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_inputmux.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c.MCXA156" name="i3c" brief="I3C Driver" version="2.14.1" full_name="I3C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_i3c.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c_edma.MCXA156" name="i3c_edma" brief="I3C EDMA Driver" version="2.2.10" full_name="I3C EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma4.MCXA156"/>
          <component_dependency value="platform.drivers.i3c.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_i3c_edma.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpio.MCXA156" name="gpio" brief="GPIO Driver" version="2.8.2" full_name="GPIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_gpio.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpio_cmsis.MCXA156" name="gpio_cmsis" brief="GPIO CMSIS Driver" version="1.0.0" full_name="GPIO CMSIS Driver" category="CMSIS Driver/GPIO" user_visible="true" type="CMSIS_driver" package_base_path="devices/MCXA156/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.GPIO.MCXA156"/>
          <component_dependency value="RTE_Device.MCXA156"/>
          <component_dependency value="platform.drivers.gpio.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_gpio.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.glikey.MCXA156" name="glikey" brief="GLIKEY Driver" version="2.0.1" full_name="GLIKEY Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_glikey.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_glikey.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_glikey.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MCXA156" name="flexio_uart" brief="FLEXIO UART Driver" version="2.6.2" full_name="FLEXIO UART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_uart.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MCXA156" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.4.2" full_name="FLEXIO SPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_spi.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd.MCXA156" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.3.0" full_name="FLEXIO MCULCD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_mculcd.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MCXA156" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.6.1" full_name="FLEXIO I2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2c_master.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MCXA156" name="flexio" brief="FLEXIO Driver" version="2.3.0" full_name="FLEXIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan.MCXA156" name="flexcan" brief="FLEXCAN Driver" version="2.14.1" full_name="FLEXCAN Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcan.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.erm.MCXA156" name="erm" brief="ERM Driver" version="2.0.1" full_name="ERM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_erm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_erm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_erm.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.eqdc.MCXA156" name="eqdc" brief="EQDC Driver" version="2.3.1" full_name="EQDC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_eqdc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_eqdc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_eqdc.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.eim.MCXA156" name="eim" brief="EIM Driver" version="2.0.1" full_name="EIM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_eim.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_eim.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_eim.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dac_1.MCXA156" name="dac" brief="DAC Driver" version="2.1.2" full_name="DAC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dac.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dac.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dac_1.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ctimer.MCXA156" name="ctimer" brief="CTimer Driver" version="2.3.3" full_name="CTimer Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ctimer.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.crc.MCXA156" name="crc" brief="CRC Driver" version="2.0.4" full_name="CRC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_crc.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cdog.MCXA156" name="cdog" brief="cdog Driver" version="2.1.3" full_name="cdog Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cdog.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cdog.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_lpcac_n4a_mcxn.MCXA156" name="cache_lpcac" brief="CACHE Driver" version="2.2.0" full_name="CACHE Lpcac Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers/." project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache_lpcac.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache_lpcac.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cache_lpcac_n4a_mcxn.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.aoi.MCXA156" name="aoi" brief="AOI Driver" version="2.0.2" full_name="AOI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MCXA156/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_aoi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_aoi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_aoi.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.MCXA156" name="PD Stack" brief="Middleware usb_pd" version="2.12.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb_pd.config_header.MCXA156"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="pd" type="c_include">
        <files mask="usb_pd.h"/>
        <files mask="usb_pd_interface.h"/>
        <files mask="usb_pd_phy.h"/>
        <files mask="usb_pd_spec.h"/>
        <files mask="usb_pd_timer.h"/>
        <files mask="usb_pd_auto_policy.h"/>
      </source>
      <source relative_path="pd" type="src">
        <files mask="usb_pd_connect.c"/>
        <files mask="usb_pd_interface.c"/>
        <files mask="usb_pd_msg.c"/>
        <files mask="usb_pd_policy.c"/>
        <files mask="usb_pd_timer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd" type="c_include"/>
        <include_path relative_path="pd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.altmode.MCXA156" name="PD Alternate Mode" brief="Middleware usb_pd altmode" version="2.12.0" full_name="USB Type-C PD Alternate Mode" category="USB/USB Type-C PD Stack" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.pd.MCXA156"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="pd/alt_mode" type="src">
        <files mask="usb_pd_alt_mode.c"/>
        <files mask="usb_pd_alt_mode_dp.c"/>
      </source>
      <source relative_path="pd/alt_mode" type="c_include">
        <files mask="usb_pd_alt_mode.h"/>
        <files mask="usb_pd_alt_mode_dp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_altmode.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd/alt_mode" type="c_include"/>
        <include_path relative_path="pd/alt_mode" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.phy.ptn5110.MCXA156" name="PD PTN5110 Driver" brief="Middleware usb_pd phy ptn5110" version="2.12.0" full_name="USB Type-C PD Stack" category="USB/USB PD PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.i3c.MCXA156"/>
            <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          </any_of>
          <component_dependency value="component.gpio_adapter.MCXA156"/>
          <component_dependency value="platform.drivers.gpio.MCXA156"/>
          <component_dependency value="component.i2c_adapter_interface.MCXA156"/>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="pd/ptn5110" type="c_include">
        <files mask="usb_pd_ptn5110.h"/>
        <files mask="usb_pd_ptn5110_register.h"/>
      </source>
      <source relative_path="pd/ptn5110" type="src">
        <files mask="usb_pd_ptn5110_connect.c"/>
        <files mask="usb_pd_ptn5110_hal.c"/>
        <files mask="usb_pd_ptn5110_interface.c"/>
        <files mask="usb_pd_ptn5110_msg.c"/>
      </source>
      <source relative_path="pd" type="src">
        <files mask="usb_pd_timer.c"/>
      </source>
      <source relative_path="pd/phy_interface" type="c_include">
        <files mask="usb_pd_i2c.h"/>
      </source>
      <source relative_path="pd/phy_interface" type="src">
        <files mask="usb_pd_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_phy_ptn5110.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd" type="c_include"/>
        <include_path relative_path="pd/ptn5110" type="c_include"/>
        <include_path relative_path="pd/phy_interface" type="c_include"/>
        <include_path relative_path="pd" type="asm_include"/>
        <include_path relative_path="pd/ptn5110" type="asm_include"/>
        <include_path relative_path="pd/phy_interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb_pd.config_header.MCXA156" name="PD Config Header" brief="USB Type-C PD Stack" version="2.12.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.pd.MCXA156"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="config/pd" config="true" type="c_include">
        <files mask="usb_pd_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_config_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config/pd" type="c_include"/>
        <include_path relative_path="config/pd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.compliance_test_report.MCXA156" name="PD Compliance Test Report" brief="Middleware usb_pd compliance_test_report" version="2.12.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="false" type="middleware" package_base_path="middleware/usb" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="pd/compliance_test_report/ellisys/consumer_provider" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp_try_snk" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp_try_src" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/provider_consumer" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/displayport_dock" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/displayport_host" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_compliance_test_report.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.usb.common_header.MCXA156" name="USB Common Header" brief="Middleware usb common_header" version="2.12.0" full_name="USB Common Header" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.MCXA156" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.12.0" full_name="USB Device Common Header" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device_controller_khci.MCXA156" name="USB Device KHCI Controller Driver(FS)" brief="Middleware usb device khci" version="2.12.0" full_name="USB Device KHCI Controller Driver(FS)" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.controller.driver.MCXA156"/>
          <component_dependency value="middleware.usb.device.khci_config_header.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_khci.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_khci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_khci.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.khci_config_header.MCXA156" name="USB device khci config header" brief="USB device khci config header" version="2.12.0" full_name="USB device khci config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device_controller_khci.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="config/device/khci" config="true" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_khci_config_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config/device/khci" type="c_include"/>
        <include_path relative_path="config/device/khci" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.controller.driver.MCXA156" name="USB Device Common Controller" brief="Middleware usb device controller driver" version="2.12.0" full_name="USB Device Common Controller" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device_controller_khci.MCXA156"/>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_controller_driver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.stack.MCXA156" name="USB Device Stack" brief="Middleware usb device stack" version="2.12.0" full_name="USB Device Stack" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.controller.driver.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_class.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_class.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_stack.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.audio.MCXA156" name="USB Device Audio" brief="Middleware usb device audio" version="2.12.0" full_name="USB Device Audio" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.stack.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_audio.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.MCXA156" name="USB Device CDC" brief="Middleware usb device cdc" version="2.12.0" full_name="USB Device CDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.stack.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_acm.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_acm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.ecm.MCXA156" name="USB Device CDC ECM" brief="Middleware usb device cdc ecm" version="2.12.0" full_name="USB Device CDC ECM" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.stack.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_ecm.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_ecm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_ecm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.rndis.MCXA156" name="USB Device CDC RNDIS" brief="Middleware usb device cdc rndis" version="2.12.0" full_name="USB Device CDC RNDIS" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.cdc.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.stack.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_rndis.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_rndis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.hid.MCXA156" name="USB Device HID" brief="Middleware usb device hid" version="2.12.0" full_name="USB Device HID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.stack.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_hid.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_hid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.dfu.MCXA156" name="USB Device DFU" brief="Middleware usb device dfu" version="2.12.0" full_name="USB Device DFU" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.stack.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_dfu.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_dfu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_dfu.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.msd.MCXA156" name="USB Device MSD" brief="Middleware usb device msd" version="2.12.0" full_name="USB Device MSD" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.stack.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_msd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.mtp.MCXA156" name="USB Device MTP" brief="Middleware usb device mtp" version="2.12.0" full_name="USB Device MTP" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.stack.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_mtp.c"/>
        <files mask="usb_device_mtp_operation.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_mtp.h"/>
        <files mask="usb_device_mtp_operation.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_mtp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.phdc.MCXA156" name="USB Device PHDC" brief="Middleware usb device phdc" version="2.12.0" full_name="USB Device PHDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.stack.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_phdc.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_phdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.video.MCXA156" name="USB Device Video" brief="Middleware usb device video" version="2.12.0" full_name="USB Device Video" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.stack.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_video.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_video.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ccid.MCXA156" name="USB Device CCID" brief="Middleware usb device ccid" version="2.12.0" full_name="USB Device CCID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.stack.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_ccid.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_ccid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ccid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.printer.MCXA156" name="USB Device Printer" brief="Middleware usb device printer" version="2.12.0" full_name="USB Device Printer" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.stack.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_printer.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_printer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.rtcesl.cm33f.MCXA156" name="Real Time Control Embedded Software Motor Control and Power Conversion Libraries" brief="Real Time Control Embedded Software Library for CM33F core" version="4.8.1" full_name="Middleware rtcesl cm33f" category="RTCESL/Cortex-M" user_visible="true" type="middleware" package_base_path="middleware/rtcesl" project_base_path="rtcesl">
      <dependencies>
        <all>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="CM33F_RTCESL_4.8.1_MCUX/AMCLIB/Include" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="amclib.h"/>
        <files mask="AMCLIB_ACIMCtrlMTPA_FLT.h"/>
        <files mask="AMCLIB_ACIMRotFluxObsrv_FLT.h"/>
        <files mask="AMCLIB_ACIMSpeedMRAS_FLT.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_F32.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_FLT.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_A32.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_FLT.h"/>
        <files mask="amclib_FP.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_FLT.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_FLT.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQMAU_FLT.h"/>
        <files mask="AMCLIB_TrackObsrv_F32.h"/>
        <files mask="AMCLIB_TrackObsrv_FLT.h"/>
        <files mask="amclib_types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="CM33F_RTCESL_4.8.1_MCUX/GDFLIB/Include" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="gdflib.h"/>
        <files mask="GDFLIB_FilterExp_F32.h"/>
        <files mask="GDFLIB_FilterExp_FLT.h"/>
        <files mask="GDFLIB_FilterIIR1_F32.h"/>
        <files mask="GDFLIB_FilterIIR1_F32_Asmi.h"/>
        <files mask="GDFLIB_FilterIIR1_FLT.h"/>
        <files mask="GDFLIB_FilterIIR2_F32.h"/>
        <files mask="GDFLIB_FilterIIR2_FLT.h"/>
        <files mask="GDFLIB_FilterIIR2PQ_FLT.h"/>
        <files mask="GDFLIB_FilterIIR3_F32.h"/>
        <files mask="GDFLIB_FilterIIR3_FLT.h"/>
        <files mask="GDFLIB_FilterIIR4_F32.h"/>
        <files mask="GDFLIB_FilterIIR4_FLT.h"/>
        <files mask="GDFLIB_FilterMA_A32.h"/>
        <files mask="GDFLIB_FilterMA_FLT.h"/>
        <files mask="gdflib_FP.h"/>
        <files mask="gdflib_types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="CM33F_RTCESL_4.8.1_MCUX/GFLIB/Include" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="gflib.h"/>
        <files mask="GFLIB_Acos_F16.h"/>
        <files mask="GFLIB_Acos_FLT.h"/>
        <files mask="GFLIB_Asin_F16.h"/>
        <files mask="GFLIB_Asin_FLT.h"/>
        <files mask="GFLIB_Atan_F32.h"/>
        <files mask="GFLIB_Atan_FLT.h"/>
        <files mask="GFLIB_AtanYX_F16.h"/>
        <files mask="GFLIB_AtanMAU_FLT.h"/>
        <files mask="GFLIB_AtanYXPQ_F16.h"/>
        <files mask="GFLIB_AtanYXMAU_FLT.h"/>
        <files mask="GFLIB_AtanYX_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPp_FLT.h"/>
        <files mask="GFLIB_CtrlPIDp_A32.h"/>
        <files mask="GFLIB_CtrlPIDp_FLT.h"/>
        <files mask="GFLIB_CtrlPIp_A32.h"/>
        <files mask="GFLIB_CtrlPIp_FLT.h"/>
        <files mask="GFLIB_DFlexRamp_A32.h"/>
        <files mask="GFLIB_DFlexRamp_FLT.h"/>
        <files mask="GFLIB_DRamp_F16.h"/>
        <files mask="GFLIB_DRamp_F32.h"/>
        <files mask="GFLIB_DRamp_FLT.h"/>
        <files mask="GFLIB_FlexRamp_A32.h"/>
        <files mask="GFLIB_FlexRamp_FLT.h"/>
        <files mask="GFLIB_FlexSRamp_A32.h"/>
        <files mask="GFLIB_FlexSRamp_FLT.h"/>
        <files mask="gflib_FP.h"/>
        <files mask="GFLIB_Hyst_F16_Asmi.h"/>
        <files mask="GFLIB_Hyst_FLT.h"/>
        <files mask="GFLIB_Integrator_A32.h"/>
        <files mask="GFLIB_Integrator_FLT.h"/>
        <files mask="GFLIB_Limit_F16.h"/>
        <files mask="GFLIB_Limit_F32.h"/>
        <files mask="GFLIB_Limit_FLT.h"/>
        <files mask="GFLIB_LowerLimit_F16.h"/>
        <files mask="GFLIB_LowerLimit_F32.h"/>
        <files mask="GFLIB_LowerLimit_FLT.h"/>
        <files mask="GFLIB_Lut_F16_Asmi.h"/>
        <files mask="GFLIB_Lut_F32.h"/>
        <files mask="GFLIB_Lut_FLT.h"/>
        <files mask="GFLIB_LutPer_F16_Asmi.h"/>
        <files mask="GFLIB_LutPer_F32.h"/>
        <files mask="GFLIB_LutPer_FLT.h"/>
        <files mask="GFLIB_Ramp_F16.h"/>
        <files mask="GFLIB_Ramp_F32.h"/>
        <files mask="GFLIB_Ramp_FLT.h"/>
        <files mask="GFLIB_SinCos_F32.h"/>
        <files mask="GFLIB_SinCosPQ_F32.h"/>
        <files mask="GFLIB_SinCosMAU_F32.h"/>
        <files mask="GFLIB_SinCos_FLT.h"/>
        <files mask="GFLIB_SinCosPQ_FLT.h"/>
        <files mask="GFLIB_SinCosMAU_FLT.h"/>
        <files mask="GFLIB_Sqrt_F16.h"/>
        <files mask="GFLIB_Sqrt_F32.h"/>
        <files mask="GFLIB_SqrtPQ_F16.h"/>
        <files mask="GFLIB_SqrtPQ_F32.h"/>
        <files mask="GFLIB_SqrtMAU_F16.h"/>
        <files mask="GFLIB_SqrtMAU_F32.h"/>
        <files mask="GFLIB_SqrtMAU_FLT.h"/>
        <files mask="GFLIB_Sqrt_FLT_Asmi.h"/>
        <files mask="GFLIB_Tan_F32.h"/>
        <files mask="GFLIB_Tan_FLT.h"/>
        <files mask="gflib_types.h"/>
        <files mask="GFLIB_UpperLimit_F16.h"/>
        <files mask="GFLIB_UpperLimit_F32.h"/>
        <files mask="GFLIB_UpperLimit_FLT.h"/>
        <files mask="GFLIB_VectorLimit_F16.h"/>
        <files mask="GFLIB_VectorLimit_FLT.h"/>
      </source>
      <source toolchain="armgcc" relative_path="CM33F_RTCESL_4.8.1_MCUX/GMCLIB/Include" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="gmclib.h"/>
        <files mask="GMCLIB_Clark_F16_Asmi.h"/>
        <files mask="GMCLIB_Clark_FLT.h"/>
        <files mask="GMCLIB_Decoupling_A32.h"/>
        <files mask="GMCLIB_DTCompLut1D_F16.h"/>
        <files mask="GMCLIB_Decoupling_FLT.h"/>
        <files mask="GMCLIB_ElimDcBusRip_A32_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_F16_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_FLT.h"/>
        <files mask="gmclib_FP.h"/>
        <files mask="GMCLIB_Park_F16_Asmi.h"/>
        <files mask="GMCLIB_Park_FLT.h"/>
        <files mask="GMCLIB_Svm_F16.h"/>
        <files mask="gmclib_types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="CM33F_RTCESL_4.8.1_MCUX/MLIB/Include" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="asm_mac.h"/>
        <files mask="mlib.h"/>
        <files mask="MLIB_PQ.h"/>
        <files mask="MLIB_MAU.h"/>
        <files mask="MLIB_Abs_F16.h"/>
        <files mask="MLIB_Abs_F16_Asmi.h"/>
        <files mask="MLIB_Abs_F32.h"/>
        <files mask="MLIB_Abs_F32_Asmi.h"/>
        <files mask="MLIB_Abs_FLT.h"/>
        <files mask="MLIB_Abs_FLT_Asmi.h"/>
        <files mask="MLIB_Add_A32.h"/>
        <files mask="MLIB_Add_F16.h"/>
        <files mask="MLIB_Add_F16_Asmi.h"/>
        <files mask="MLIB_Add_F32.h"/>
        <files mask="MLIB_Add_F32_Asmi.h"/>
        <files mask="MLIB_Add_FLT.h"/>
        <files mask="MLIB_Add4_F16_Asmi.h"/>
        <files mask="MLIB_Add4_F32_Asmi.h"/>
        <files mask="MLIB_Add4_FLT.h"/>
        <files mask="MLIB_BiShift_F16.h"/>
        <files mask="MLIB_BiShift_F32.h"/>
        <files mask="MLIB_Clb_F16.h"/>
        <files mask="MLIB_Clb_F32.h"/>
        <files mask="MLIB_Conv_F32.h"/>
        <files mask="MLIB_Conv_FLT_Asmi.h"/>
        <files mask="MLIB_ConvSc_FLT_Asmi.h"/>
        <files mask="MLIB_Div_A32.h"/>
        <files mask="MLIB_Div_F16.h"/>
        <files mask="MLIB_Div_F32.h"/>
        <files mask="MLIB_Div_FLT.h"/>
        <files mask="MLIB_Div1Q_A32.h"/>
        <files mask="MLIB_Div1Q_F16.h"/>
        <files mask="MLIB_Div1Q_F32.h"/>
        <files mask="mlib_FP.h"/>
        <files mask="MLIB_Log2_U16.h"/>
        <files mask="MLIB_Mac_A32.h"/>
        <files mask="MLIB_Mac_F16_Asmi.h"/>
        <files mask="MLIB_Mac_F32.h"/>
        <files mask="MLIB_Mac_F32_Asmi.h"/>
        <files mask="MLIB_Mac_FLT.h"/>
        <files mask="MLIB_Mac4_F32.h"/>
        <files mask="MLIB_Mac4_F32_Asmi.h"/>
        <files mask="MLIB_Mac4_FLT.h"/>
        <files mask="MLIB_Mac4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Mac4Rnd_F32.h"/>
        <files mask="MLIB_Mac4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MacRnd_A32.h"/>
        <files mask="MLIB_MacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MacRnd_F32.h"/>
        <files mask="MLIB_MacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_A32.h"/>
        <files mask="MLIB_Mnac_F16_Asmi.h"/>
        <files mask="MLIB_Mnac_F32.h"/>
        <files mask="MLIB_Mnac_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_FLT.h"/>
        <files mask="MLIB_MnacRnd_A32.h"/>
        <files mask="MLIB_MnacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F32.h"/>
        <files mask="MLIB_MnacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Msu_A32.h"/>
        <files mask="MLIB_Msu_F16_Asmi.h"/>
        <files mask="MLIB_Msu_F32_Asmi.h"/>
        <files mask="MLIB_Msu_FLT.h"/>
        <files mask="MLIB_Msu4_F32.h"/>
        <files mask="MLIB_Msu4_F32_Asmi.h"/>
        <files mask="MLIB_Msu4_FLT.h"/>
        <files mask="MLIB_Msu4Rnd_F16.h"/>
        <files mask="MLIB_Msu4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Msu4Rnd_F32.h"/>
        <files mask="MLIB_Msu4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MsuRnd_A32.h"/>
        <files mask="MLIB_MsuRnd_F16_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F32.h"/>
        <files mask="MLIB_MsuRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mul_A32.h"/>
        <files mask="MLIB_Mul_A32_Asmi.h"/>
        <files mask="MLIB_Mul_F16.h"/>
        <files mask="MLIB_Mul_F16_Asmi.h"/>
        <files mask="MLIB_Mul_F32.h"/>
        <files mask="MLIB_Mul_F32_Asmi.h"/>
        <files mask="MLIB_Mul_FLT.h"/>
        <files mask="MLIB_MulRnd_A32.h"/>
        <files mask="MLIB_MulRnd_A32_Asmi.h"/>
        <files mask="MLIB_MulRnd_F16.h"/>
        <files mask="MLIB_MulRnd_F16_Asmi.h"/>
        <files mask="MLIB_MulRnd_F32.h"/>
        <files mask="MLIB_MulRnd_F32_Asmi.h"/>
        <files mask="MLIB_Neg_F16.h"/>
        <files mask="MLIB_Neg_F16_Asmi.h"/>
        <files mask="MLIB_Neg_F32.h"/>
        <files mask="MLIB_Neg_F32_Asmi.h"/>
        <files mask="MLIB_Neg_FLT.h"/>
        <files mask="MLIB_Rcp_A32.h"/>
        <files mask="MLIB_Rcp1Q_A32.h"/>
        <files mask="MLIB_Rnd_F32.h"/>
        <files mask="MLIB_Rnd_F32_Asmi.h"/>
        <files mask="MLIB_Sat_A32_Asmi.h"/>
        <files mask="MLIB_Shift_F16.h"/>
        <files mask="MLIB_Shift_F16_Asmi.h"/>
        <files mask="MLIB_Shift_F32.h"/>
        <files mask="MLIB_Shift_F32_Asmi.h"/>
        <files mask="MLIB_Sign_F16_Asmi.h"/>
        <files mask="MLIB_Sign_F32_Asmi.h"/>
        <files mask="MLIB_Sign_FLT_Asmi.h"/>
        <files mask="MLIB_Sub_A32.h"/>
        <files mask="MLIB_Sub_F16.h"/>
        <files mask="MLIB_Sub_F16_Asmi.h"/>
        <files mask="MLIB_Sub_F32.h"/>
        <files mask="MLIB_Sub_F32_Asmi.h"/>
        <files mask="MLIB_Sub_F64.h"/>
        <files mask="MLIB_Sub_FLT.h"/>
        <files mask="MLIB_Sub4_F16_Asmi.h"/>
        <files mask="MLIB_Sub4_F32_Asmi.h"/>
        <files mask="MLIB_Sub4_FLT.h"/>
        <files mask="mlib_types.h"/>
        <files mask="RTCESL_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="CM33F_RTCESL_4.8.1_MCUX/AMCLIB" type="lib" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="libAMCLIB.a"/>
      </source>
      <source toolchain="armgcc" relative_path="CM33F_RTCESL_4.8.1_MCUX/GFLIB" type="lib" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="libGFLIB.a"/>
      </source>
      <source toolchain="armgcc" relative_path="CM33F_RTCESL_4.8.1_MCUX/GDFLIB" type="lib" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="libGDFLIB.a"/>
      </source>
      <source toolchain="armgcc" relative_path="CM33F_RTCESL_4.8.1_MCUX/GMCLIB" type="lib" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="libGMCLIB.a"/>
      </source>
      <source toolchain="armgcc" relative_path="CM33F_RTCESL_4.8.1_MCUX/MLIB" type="lib" device_cores="cm33_core0_MCXA156" fpu="true">
        <files mask="libMLIB.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_rtcesl_cm33f.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="CM33F_RTCESL_4.8.1_MCUX/AMCLIB/Include" toolchain="armgcc" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="CM33F_RTCESL_4.8.1_MCUX/GDFLIB/Include" toolchain="armgcc" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="CM33F_RTCESL_4.8.1_MCUX/GFLIB/Include" toolchain="armgcc" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="CM33F_RTCESL_4.8.1_MCUX/GMCLIB/Include" toolchain="armgcc" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="CM33F_RTCESL_4.8.1_MCUX/MLIB/Include" toolchain="armgcc" type="c_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="CM33F_RTCESL_4.8.1_MCUX/AMCLIB/Include" toolchain="armgcc" type="asm_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="CM33F_RTCESL_4.8.1_MCUX/GDFLIB/Include" toolchain="armgcc" type="asm_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="CM33F_RTCESL_4.8.1_MCUX/GFLIB/Include" toolchain="armgcc" type="asm_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="CM33F_RTCESL_4.8.1_MCUX/GMCLIB/Include" toolchain="armgcc" type="asm_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
        <include_path relative_path="CM33F_RTCESL_4.8.1_MCUX/MLIB/Include" toolchain="armgcc" type="asm_include" device_cores="cm33_core0_MCXA156" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.mc_pmsm_snsless.float.MCXA156" name="PMSM sensorless control floating-point version files" brief="Common PMSM control middleware code, floating point implementation." version="3.0.0" full_name="PMSM sensorless control middleware (floating-point)" category="Motor Control/PMSM sensorless control" user_visible="true" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <defines>
        <define name="PMSM_SNSLESS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.rtcesl.cm33f.MCXA156"/>
          <component_dependency value="middleware.motor_control_pmsm_float.template.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="docs" type="other">
        <files mask="readme_pmsm.txt"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="src">
        <files mask="m1_sm_snsless.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include">
        <files mask="m1_sm_snsless.h"/>
        <files mask="sm_common.h"/>
      </source>
      <source relative_path="freemaster" type="other">
        <files mask="pmsm_float.pmpx"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mc_pmsm_snsless_float.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include"/>
        <include_path relative_path="freemaster" type="c_include"/>
        <include_path relative_path="docs" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="asm_include"/>
        <include_path relative_path="freemaster" type="asm_include"/>
        <include_path relative_path="docs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mc_pmsm_enc.float.MCXA156" name="PMSM encoder control floating-point version files" brief="PMSM control with encoder middleware, floating point implementation." version="3.0.0" full_name="Middleware motor_control-pmsm enc" category="Motor Control/PMSM encoder control" user_visible="true" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <defines>
        <define name="PMSM_SNSLESS" value=""/>
        <define name="PMSM_SNSLESS_ENC" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.rtcesl.cm33f.MCXA156"/>
          <component_dependency value="middleware.motor_control_pmsm_float.template.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="docs" type="other">
        <files mask="readme_pmsm.txt"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="src">
        <files mask="m1_sm_snsless_enc.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include">
        <files mask="m1_sm_snsless_enc.h"/>
        <files mask="sm_common.h"/>
      </source>
      <source relative_path="freemaster" type="other">
        <files mask="pmsm_float_enc.pmpx"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mc_pmsm_enc_float.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
        <include_path relative_path="freemaster" type="c_include"/>
        <include_path relative_path="docs" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="asm_include"/>
        <include_path relative_path="freemaster" type="asm_include"/>
        <include_path relative_path="docs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mc_pmsm_enc_dual.float.MCXA156" name="Dual PMSM encoder control floating-point version files" brief="Dual PMSM control with encoder middleware, floating point implementation." version="3.0.0" full_name="Middleware dual motor_control-pmsm enc" category="Motor Control/PMSM encoder control" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <defines>
        <define name="PMSM_SNSLESS" value=""/>
        <define name="PMSM_SNSLESS_ENC" value=""/>
        <define name="DUAL_MOTOR" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.rtcesl.cm33f.MCXA156"/>
          <component_dependency value="middleware.motor_control_pmsm_float.template.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="docs" type="other">
        <files mask="readme_pmsm.txt"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="src">
        <files mask="m1_sm_snsless_enc.c"/>
        <files mask="m2_sm_snsless_enc.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include">
        <files mask="m1_sm_snsless_enc.h"/>
        <files mask="m2_sm_snsless_enc.h"/>
        <files mask="sm_common.h"/>
      </source>
      <source relative_path="freemaster" type="other">
        <files mask="pmsm_float_enc_dual.pmpx"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mc_pmsm_enc_dual_float.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
        <include_path relative_path="freemaster" type="c_include"/>
        <include_path relative_path="docs" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="asm_include"/>
        <include_path relative_path="freemaster" type="asm_include"/>
        <include_path relative_path="docs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mc_pmsm_servo.float.MCXA156" name="PMSM servo control floating-point version files" brief="Servo control middleware, floating point implementation." version="3.0.0" full_name="Middleware servo motor_control" category="Motor Control/PMSM encoder control" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <defines>
        <define name="PMSM_SNSLESS" value=""/>
        <define name="PMSM_SNSLESS_ENC" value=""/>
        <define name="PMSM_SERVO" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.rtcesl.cm33f.MCXA156"/>
          <component_dependency value="middleware.motor_control_pmsm_float.template.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="docs" type="other">
        <files mask="readme_pmsm.txt"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="src">
        <files mask="m1_sm_servo.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include">
        <files mask="m1_sm_servo.h"/>
        <files mask="sm_servo_common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mc_pmsm_servo_float.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
        <include_path relative_path="freemaster" type="c_include"/>
        <include_path relative_path="docs" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="asm_include"/>
        <include_path relative_path="freemaster" type="asm_include"/>
        <include_path relative_path="docs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mc_pmsm_servo_dual.float.MCXA156" name="PMSM servo dualcontrol floating-point version files" brief="Servo dual control middleware, floating point implementation." version="3.0.0" full_name="Middleware servo dual motor_control" category="Motor Control/PMSM encoder control" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <defines>
        <define name="PMSM_SNSLESS" value=""/>
        <define name="PMSM_SNSLESS_ENC" value=""/>
        <define name="DUAL_MOTOR" value=""/>
        <define name="PMSM_SERVO" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.rtcesl.cm33f.MCXA156"/>
          <component_dependency value="middleware.motor_control_pmsm_float.template.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="docs" type="other">
        <files mask="readme_pmsm.txt"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="src">
        <files mask="m1_sm_servo.c"/>
        <files mask="m2_sm_servo.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include">
        <files mask="m1_sm_servo.h"/>
        <files mask="m2_sm_servo.h"/>
        <files mask="sm_servo_common.h"/>
      </source>
      <source relative_path="freemaster" type="other">
        <files mask="pmsm_float_servo_dual.pmpx"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mc_pmsm_servo_dual_float.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
        <include_path relative_path="freemaster" type="c_include"/>
        <include_path relative_path="docs" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="asm_include"/>
        <include_path relative_path="freemaster" type="asm_include"/>
        <include_path relative_path="docs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mc_bldc.frac.MCXA156" name="BLDC control frac version files" brief="BLDC control without encoder middleware, frac implementation." version="3.0.0" full_name="Middleware motor_control-bldc" category="Motor Control/BLDC sensorless control" user_visible="true" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <defines>
        <define name="BLDC_SNSLESS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.rtcesl.cm33f.MCXA156"/>
          <component_dependency value="middleware.motor_control_bldc_frac.template.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="docs" type="other">
        <files mask="readme_bldc.txt"/>
      </source>
      <source relative_path="bldc/mc_algorithms" type="src">
        <files mask="bldc_control.c"/>
      </source>
      <source relative_path="bldc/mc_algorithms" type="c_include">
        <files mask="bldc_control.h"/>
      </source>
      <source relative_path="bldc/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="bldc/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="bldc/mc_state_machine" type="src">
        <files mask="m1_sm_snsless.c"/>
      </source>
      <source relative_path="bldc/mc_state_machine" type="c_include">
        <files mask="m1_sm_snsless.h"/>
      </source>
      <source relative_path="freemaster" type="other">
        <files mask="bldc.pmpx"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mc_bldc_frac.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bldc/mc_algorithms" type="c_include"/>
        <include_path relative_path="bldc/state_machine" type="c_include"/>
        <include_path relative_path="bldc/mc_state_machine" type="c_include"/>
        <include_path relative_path="bldc" type="c_include"/>
        <include_path relative_path="freemaster" type="c_include"/>
        <include_path relative_path="docs" type="c_include"/>
        <include_path relative_path="bldc/mc_algorithms" type="asm_include"/>
        <include_path relative_path="bldc/state_machine" type="asm_include"/>
        <include_path relative_path="bldc/mc_state_machine" type="asm_include"/>
        <include_path relative_path="bldc" type="asm_include"/>
        <include_path relative_path="freemaster" type="asm_include"/>
        <include_path relative_path="docs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_bldc_frac.tsa.MCXA156" name="BLDC control TSA frac" brief="FreeMASTER TSA table for BLDC control frac" version="3.0.0" full_name="FreeMASTER TSA table for BLDC control frac" category="Motor Control/BLDC sensorless control" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="bldc" type="src">
        <files mask="fm_tsa_bldc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_bldc_frac_tsa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bldc" type="c_include"/>
        <include_path relative_path="bldc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.pmsm_mid.float.MCXA156" name="PMSM parameters identification floating-point version files" brief="PMSM parameters identification, floating point implementation." version="3.0.0" full_name="PMSM parameters identification floating-point" category="Motor Control/PMSM identification" user_visible="true" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <defines>
        <define name="MID_EN" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.motor_control.mcaa_cm33f.MCXA156"/>
          <component_dependency value="middleware.motor_control_pmsm_float.template.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="pmsm/pmsm_float/mc_identification" type="src">
        <files mask="hall_calib.c"/>
        <files mask="ke_measure.c"/>
        <files mask="mech_measure.c"/>
        <files mask="mid_auxiliary.c"/>
        <files mask="mid_mc_api_connector.c"/>
        <files mask="mid_sm_states.c"/>
        <files mask="pp_measure.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_identification" type="c_include">
        <files mask="hall_calib.h"/>
        <files mask="ke_measure.h"/>
        <files mask="mech_measure.h"/>
        <files mask="mid_auxiliary.h"/>
        <files mask="mid_def.h"/>
        <files mask="mid_mc_api_connector.h"/>
        <files mask="mid_sm_states.h"/>
        <files mask="pp_measure.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="freemaster" type="other">
        <files mask="pmsm_float_enc.pmpx"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_pmsm_mid_float.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_identification" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
        <include_path relative_path="freemaster" type="c_include"/>
        <include_path relative_path="docs" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_identification" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="asm_include"/>
        <include_path relative_path="freemaster" type="asm_include"/>
        <include_path relative_path="docs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_pmsm_float.template.MCXA156" name="PMSM sensor/sensorless init periph sources" brief="PMSM sensor/sensorless template sources floating-point implementation" version="3.0.0" full_name="PMSM template sources (floating-point)" category="Motor Control/PMSM auxiliary" user_visible="false" type="project_template" package_base_path="middleware/motor_control" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.rtcesl.cm33f.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="pmsm/pmsm_float/mc_cfg_template" config="true" type="c_include">
        <files mask="m1_pmsm_appconfig.h"/>
        <files mask="m2_pmsm_appconfig.h"/>
        <files mask="mc_periph_init.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_cfg_template" config="true" type="src">
        <files mask="mc_periph_init.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_pmsm_float_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_cfg_template" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_cfg_template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_bldc_frac.template.MCXA156" name="BLDC sensor/sensorless sources" brief="BLDC sensor/sensorless template sources fraction implementation" version="3.0.0" full_name="BLDC template sources (fixed-point)" category="Motor Control/BLDC auxiliary" user_visible="false" type="project_template" package_base_path="middleware/motor_control" project_base_path="source">
      <dependencies>
        <all>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="bldc/mc_cfg_template" config="true" type="c_include">
        <files mask="m1_bldc_appconfig.h"/>
        <files mask="mc_periph_init.h"/>
      </source>
      <source relative_path="bldc/mc_cfg_template" config="true" type="src">
        <files mask="mc_periph_init.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_bldc_frac_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bldc/mc_cfg_template" type="c_include"/>
        <include_path relative_path="bldc/mc_cfg_template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_pmsm_float.tsa.MCXA156" name="PMSM control TSA floating-point" brief="FreeMASTER TSA table for PMSM control floating-point" version="3.0.0" full_name="FreeMASTER TSA table for PMSM control floating-point" category="Motor Control/PMSM auxiliary" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="pmsm/pmsm_float" type="src">
        <files mask="fm_tsa_pmsm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_pmsm_float_tsa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_pmsm_servo_float.tsa.MCXA156" name="PMSM servo control TSA floating-point" brief="FreeMASTER TSA table for PMSM servo control floating-point" version="3.0.0" full_name="FreeMASTER TSA table for PMSM servo control floating-point" category="Motor Control/PMSM auxiliary" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="pmsm/pmsm_float" type="src">
        <files mask="fm_tsa_pmsm_servo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_pmsm_servo_float_tsa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_pmsm_frac.tsa.MCXA156" name="PMSM control TSA fixed-point" brief="FreeMASTER TSA table for PMSM control fixed-point" version="3.0.0" full_name="FreeMASTER TSA table for PMSM control fixed-point" category="Motor Control/PMSM auxiliary" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="pmsm/pmsm_frac" type="src">
        <files mask="fm_tsa_pmsm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_pmsm_frac_tsa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_frac" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_frac" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_pmsm_frac_enc.tsa.MCXA156" name="PMSM control TSA fixed-point with encoder" brief="FreeMASTER TSA table for PMSM control fixed-point" version="3.0.0" full_name="FreeMASTER TSA table for PMSM control fixed-point" category="Motor Control/PMSM auxiliary" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="pmsm/pmsm_frac" type="src">
        <files mask="fm_tsa_pmsm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_pmsm_frac_enc_tsa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_frac" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_frac" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control.mc_drivers_adc_mcxa_epwm_float.MCXA156" name="PMSM sensored/sensorless control drivers" brief="PMSM sensorless control for adc16 ftm based MCUs" version="3.0.0" full_name="PMSM sensorless control for ftm and adc16 based MCUs" category="Motor Control/PMSM sensorless control" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <all>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="pmsm/pmsm_float/mc_drivers" type="src">
        <files mask="mcdrv_adc_mcxa.c"/>
        <files mask="mcdrv_pwm3ph_epwm.c"/>
        <files mask="mcdrv_enc_eqd.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_drivers" type="c_include">
        <files mask="mcdrv_adc_mcxa.h"/>
        <files mask="mcdrv_pwm3ph_epwm.h"/>
        <files mask="mcdrv_enc_eqd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_mc_drivers_adc_mcxa_epwm_float.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_drivers" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_drivers" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_pmsm_float_imcat.MCXA156" name="PMSM MCAT2.0" brief="MCAT2.0 pmsm files" version="3.0.0" full_name="MCAT2.0 pmsm" category="Motor Control/PMSM auxiliary" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <device_dependency value="MCXA156"/>
      </dependencies>
      <source relative_path="freemaster/pmsm_float/mcat/assets" type="other">
        <files mask="speedfocwolswbemf.gif"/>
      </source>
      <source relative_path="freemaster/pmsm_float/mcat/css" type="other">
        <files mask="app.css"/>
      </source>
      <source relative_path="freemaster/pmsm_float/mcat/js" type="other">
        <files mask="chunk.js"/>
        <files mask="chunk.js.map"/>
        <files mask="mcat.js"/>
        <files mask="mcat.js.map"/>
      </source>
      <source relative_path="freemaster/pmsm_float/mcat" type="other">
        <files mask="freemaster-client.js"/>
        <files mask="index.html"/>
        <files mask="init.js"/>
        <files mask="simple-jsonrpc-js.js"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_pmsm_float_imcat.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.motor_control.mcaa_cm33f.MCXA156" name="MCAA library for CM33F core" brief="Motor Control Advanced Algorithm for CM33F core" version="3.0.0" full_name="MCAA library for CM33F core" category="Motor Control/PMSM identification" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <all>
          <component_dependency value="middleware.rtcesl.cm33f.MCXA156"/>
          <device_dependency value="MCXA156"/>
          <device_core_dependency value="cm33_core0_MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm33f_mcux/Include" type="c_include">
        <files mask="mcaa_lib_fp.h"/>
        <files mask="MCAA_EstimRL_FLT.h"/>
      </source>
      <source toolchain="armgcc" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm33f_mcux" type="lib">
        <files mask="libmcaa_lib.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_mcaa_cm33f.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm33f_mcux/Include" toolchain="armgcc" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm33f_mcux/Include" toolchain="armgcc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.bootutil.MCXA156" name="mcuboot_bootutil" brief="mcuboot" version="2.1.0" full_name="MCUboot bootloader" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/bootutil" project_base_path="bootutil">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.nxp_bootutil_port.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="include/bootutil" type="c_include">
        <files mask="bench.h"/>
        <files mask="boot_hooks.h"/>
        <files mask="boot_public_hooks.h"/>
        <files mask="boot_record.h"/>
        <files mask="boot_status.h"/>
        <files mask="bootutil.h"/>
        <files mask="bootutil_log.h"/>
        <files mask="bootutil_public.h"/>
        <files mask="bootutil_test.h"/>
        <files mask="caps.h"/>
        <files mask="enc_key.h"/>
        <files mask="enc_key_public.h"/>
        <files mask="fault_injection_hardening.h"/>
        <files mask="fault_injection_hardening_delay_rng.h"/>
        <files mask="ignore.h"/>
        <files mask="image.h"/>
        <files mask="mcuboot_status.h"/>
        <files mask="ramload.h"/>
        <files mask="security_cnt.h"/>
        <files mask="sign_key.h"/>
      </source>
      <source relative_path="include/bootutil/crypto" type="c_include">
        <files mask="aes_ctr.h"/>
        <files mask="aes_kw.h"/>
        <files mask="common.h"/>
        <files mask="ecdh_p256.h"/>
        <files mask="ecdh_x25519.h"/>
        <files mask="ecdsa.h"/>
        <files mask="hmac_sha256.h"/>
        <files mask="rsa.h"/>
        <files mask="sha.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="boot_record.c"/>
        <files mask="bootutil_misc.c"/>
        <files mask="bootutil_public.c"/>
        <files mask="caps.c"/>
        <files mask="encrypted.c"/>
        <files mask="fault_injection_hardening.c"/>
        <files mask="fault_injection_hardening_delay_rng_mbedtls.c"/>
        <files mask="image_ecdsa.c"/>
        <files mask="image_ed25519.c"/>
        <files mask="image_rsa.c"/>
        <files mask="image_validate.c"/>
        <files mask="loader.c"/>
        <files mask="swap_misc.c"/>
        <files mask="swap_move.c"/>
        <files mask="swap_scratch.c"/>
        <files mask="tlv.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="bootutil_misc.h"/>
        <files mask="bootutil_priv.h"/>
        <files mask="swap_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.nxp_bootutil_port.MCXA156" name="mcuboot_bootutil.nxp_port" brief="NXP porting layer for MCUboot's bootutil code" version="2.1.0" full_name="NXP porting layer for MCUboot's bootutil code" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil/nxp_port">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.bootutil.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="keys" type="src">
        <files mask="enc-rsa2048-priv-minimal.c"/>
        <files mask="enc-ecdsa-p256-priv-minimal.c"/>
        <files mask="sign-rsa2048-pub.c"/>
        <files mask="sign-ecdsa-p256-pub.c"/>
      </source>
      <source exclude="true" relative_path="keys" type="other">
        <files mask="enc-rsa2048-pub.pem" hidden="true"/>
        <files mask="enc-rsa2048-priv.pem" hidden="true"/>
        <files mask="enc-ecdsa-p256-pub.pem" hidden="true"/>
        <files mask="enc-ecdsa-p256-priv.pem" hidden="true"/>
        <files mask="sign-rsa2048-pub.pem" hidden="true"/>
        <files mask="sign-rsa2048-priv.pem" hidden="true"/>
        <files mask="sign-ecdsa-p256-pub.pem" hidden="true"/>
        <files mask="sign-ecdsa-p256-priv.pem" hidden="true"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="boot.c"/>
        <files mask="bootutil_hooks.c"/>
        <files mask="keys.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="boot.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="flash_map.h"/>
      </source>
      <source relative_path="include/flash_map_backend" type="c_include">
        <files mask="flash_map_backend.h"/>
      </source>
      <source relative_path="include/mcuboot_config" type="c_include">
        <files mask="mcuboot_config.h"/>
        <files mask="mcuboot_logging.h"/>
      </source>
      <source relative_path="include/os" type="c_include">
        <files mask="os_malloc.h"/>
      </source>
      <source relative_path="include/sysflash" type="c_include">
        <files mask="sysflash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_nxp_bootutil_port.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="flashapi" type="c_include"/>
        <include_path relative_path="keys" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/mcuboot_config" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="flashapi" type="asm_include"/>
        <include_path relative_path="keys" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/mcuboot_config" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.stack_heap_default_mbedtls.MCXA156" name="mcuboot_stack_heap_default_mbedtls" brief="MCUboot default stack/heap setup for MbedTLS" version="2.1.0" full_name="MCUboot default stack/heap setup for MbedTLS" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.mcuboot.tinycrypt.MCXA156"/>
          </not>
          <component_dependency value="middleware.mcuboot.bootutil.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_stack_heap_default_mbedtls.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcuboot.stack_heap_default_tinycrypt.MCXA156" name="mcuboot_stack_heap_default_tinycrypt" brief="MCUboot default stack/heap setup for TinyCrypt" version="2.1.0" full_name="MCUboot default stack/heap setup for TinyCrypt" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.bootutil.MCXA156"/>
          <component_dependency value="middleware.mcuboot.tinycrypt.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_stack_heap_default_tinycrypt.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcuboot.bootutil.flashapi_rt.MCXA156" name="mcuboot_bootutil.flashapi_rt" brief="MCUboot device flash porting layer" version="2.1.0" full_name="MCUboot device flash porting layer RT" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk/flashapi" project_base_path="bootutil/flashapi">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.mcuboot.bootutil.flashapi_mcx.MCXA156"/>
          </not>
          <component_dependency value="middleware.mcuboot.bootutil.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="flash_api.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil_flashapi_rt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.bootutil.flashapi_mcx.MCXA156" name="mcuboot_bootutil.flashapi_mcx" brief="MCUboot device flash porting layer" version="2.1.0" full_name="MCUboot device flash porting layer MCX" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk/flashapi" project_base_path="bootutil/flashapi">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.bootutil.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="flash_api_mcxn10.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil_flashapi_mcx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.tinycrypt.MCXA156" name="mcuboot_tinycrypt" brief="TinyCrypt fork in MCUBoot repository" version="0.2.8" full_name="mcuboot_tinycrypt_fork" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/tinycrypt/lib" project_base_path="tinycrypt">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.bootutil.MCXA156"/>
          <component_dependency value="middleware.mcuboot.mbedtls-asn1.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="include/tinycrypt" type="c_include">
        <files mask="aes.h"/>
        <files mask="cbc_mode.h"/>
        <files mask="ccm_mode.h"/>
        <files mask="cmac_mode.h"/>
        <files mask="constants.h"/>
        <files mask="ctr_mode.h"/>
        <files mask="ctr_prng.h"/>
        <files mask="ecc.h"/>
        <files mask="ecc_dsa.h"/>
        <files mask="hmac.h"/>
        <files mask="hmac_prng.h"/>
        <files mask="sha256.h"/>
        <files mask="utils.h"/>
        <files mask="ecc_platform_specific.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="aes_decrypt.c"/>
        <files mask="aes_encrypt.c"/>
        <files mask="cbc_mode.c"/>
        <files mask="ccm_mode.c"/>
        <files mask="cmac_mode.c"/>
        <files mask="ctr_mode.c"/>
        <files mask="ctr_prng.c"/>
        <files mask="ecc.c"/>
        <files mask="ecc_dsa.c"/>
        <files mask="hmac.c"/>
        <files mask="hmac_prng.c"/>
        <files mask="sha256.c"/>
        <files mask="utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_tinycrypt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.mbedtls-asn1.MCXA156" name="mcuboot_mbedtls_asn1" brief="MCUBoot's subset of MbedTLS for ASN.1 parsing" version="2.1.0" full_name="mcuboot_mbedtls-asn1" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/mbedtls-asn1" project_base_path="mbedtls-asn1">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.tinycrypt.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="asn1.h"/>
        <files mask="bignum.h"/>
        <files mask="build_info.h"/>
        <files mask="check_config.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecp.h"/>
        <files mask="error.h"/>
        <files mask="mbedtls_config.h"/>
        <files mask="md.h"/>
        <files mask="oid.h"/>
        <files mask="pk.h"/>
        <files mask="platform.h"/>
        <files mask="platform_util.h"/>
        <files mask="private_access.h"/>
        <files mask="rsa.h"/>
        <files mask="threading.h"/>
        <files mask="version.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="common.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="asn1parse.c"/>
        <files mask="platform_util.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_mbedtls-asn1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.MCXA156" name="lvgl" brief="lvgl library" version="9.2.1" full_name="Middleware lvgl" category="Graphics/lvgl graphics library" user_visible="true" type="middleware" package_base_path="middleware/lvgl" project_base_path="lvgl">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.template.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="LICENCE.txt" hidden="true"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="lv_init.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="lv_group.c"/>
        <files mask="lv_obj.c"/>
        <files mask="lv_obj_class.c"/>
        <files mask="lv_obj_draw.c"/>
        <files mask="lv_obj_event.c"/>
        <files mask="lv_obj_id_builtin.c"/>
        <files mask="lv_obj_pos.c"/>
        <files mask="lv_obj_property.c"/>
        <files mask="lv_obj_scroll.c"/>
        <files mask="lv_obj_style.c"/>
        <files mask="lv_obj_style_gen.c"/>
        <files mask="lv_obj_tree.c"/>
        <files mask="lv_refr.c"/>
      </source>
      <source relative_path="src/display" type="src">
        <files mask="lv_display.c"/>
      </source>
      <source relative_path="src/draw" type="src">
        <files mask="lv_draw.c"/>
        <files mask="lv_draw_arc.c"/>
        <files mask="lv_draw_buf.c"/>
        <files mask="lv_draw_image.c"/>
        <files mask="lv_draw_label.c"/>
        <files mask="lv_draw_line.c"/>
        <files mask="lv_draw_mask.c"/>
        <files mask="lv_draw_rect.c"/>
        <files mask="lv_draw_triangle.c"/>
        <files mask="lv_draw_vector.c"/>
        <files mask="lv_image_decoder.c"/>
      </source>
      <source relative_path="src/draw/nxp/pxp" type="src">
        <files mask="lv_draw_buf_pxp.c"/>
        <files mask="lv_draw_pxp.c"/>
        <files mask="lv_draw_pxp_fill.c"/>
        <files mask="lv_draw_pxp_img.c"/>
        <files mask="lv_draw_pxp_layer.c"/>
        <files mask="lv_pxp_cfg.c"/>
        <files mask="lv_pxp_osa.c"/>
        <files mask="lv_pxp_utils.c"/>
      </source>
      <source relative_path="src/draw/nxp/vglite" type="src">
        <files mask="lv_draw_buf_vglite.c"/>
        <files mask="lv_draw_vglite.c"/>
        <files mask="lv_draw_vglite_arc.c"/>
        <files mask="lv_draw_vglite_border.c"/>
        <files mask="lv_draw_vglite_fill.c"/>
        <files mask="lv_draw_vglite_img.c"/>
        <files mask="lv_draw_vglite_label.c"/>
        <files mask="lv_draw_vglite_layer.c"/>
        <files mask="lv_draw_vglite_line.c"/>
        <files mask="lv_draw_vglite_triangle.c"/>
        <files mask="lv_vglite_buf.c"/>
        <files mask="lv_vglite_matrix.c"/>
        <files mask="lv_vglite_path.c"/>
        <files mask="lv_vglite_utils.c"/>
      </source>
      <source relative_path="src/draw/sdl" type="src">
        <files mask="lv_draw_sdl.c"/>
      </source>
      <source relative_path="src/draw/sw/blend" type="src">
        <files mask="lv_draw_sw_blend.c"/>
        <files mask="lv_draw_sw_blend_to_al88.c"/>
        <files mask="lv_draw_sw_blend_to_argb8888.c"/>
        <files mask="lv_draw_sw_blend_to_i1.c"/>
        <files mask="lv_draw_sw_blend_to_l8.c"/>
        <files mask="lv_draw_sw_blend_to_rgb565.c"/>
        <files mask="lv_draw_sw_blend_to_rgb888.c"/>
      </source>
      <source relative_path="src/draw/sw" type="src">
        <files mask="lv_draw_sw.c"/>
        <files mask="lv_draw_sw_arc.c"/>
        <files mask="lv_draw_sw_border.c"/>
        <files mask="lv_draw_sw_box_shadow.c"/>
        <files mask="lv_draw_sw_fill.c"/>
        <files mask="lv_draw_sw_gradient.c"/>
        <files mask="lv_draw_sw_img.c"/>
        <files mask="lv_draw_sw_letter.c"/>
        <files mask="lv_draw_sw_line.c"/>
        <files mask="lv_draw_sw_mask.c"/>
        <files mask="lv_draw_sw_mask_rect.c"/>
        <files mask="lv_draw_sw_transform.c"/>
        <files mask="lv_draw_sw_triangle.c"/>
        <files mask="lv_draw_sw_vector.c"/>
      </source>
      <source relative_path="src/drivers/display/drm" type="src">
        <files mask="lv_linux_drm.c"/>
      </source>
      <source relative_path="src/drivers/display/fb" type="src">
        <files mask="lv_linux_fbdev.c"/>
      </source>
      <source relative_path="src/drivers/display/ili9341" type="src">
        <files mask="lv_ili9341.c"/>
      </source>
      <source relative_path="src/drivers/display/lcd" type="src">
        <files mask="lv_lcd_generic_mipi.c"/>
      </source>
      <source relative_path="src/drivers/display/st7735" type="src">
        <files mask="lv_st7735.c"/>
      </source>
      <source relative_path="src/drivers/display/st7789" type="src">
        <files mask="lv_st7789.c"/>
      </source>
      <source relative_path="src/drivers/display/st7796" type="src">
        <files mask="lv_st7796.c"/>
      </source>
      <source relative_path="src/drivers/evdev" type="src">
        <files mask="lv_evdev.c"/>
      </source>
      <source relative_path="src/drivers/libinput" type="src">
        <files mask="lv_libinput.c"/>
        <files mask="lv_xkb.c"/>
      </source>
      <source relative_path="src/drivers/nuttx" type="src">
        <files mask="lv_nuttx_cache.c"/>
        <files mask="lv_nuttx_entry.c"/>
        <files mask="lv_nuttx_fbdev.c"/>
        <files mask="lv_nuttx_image_cache.c"/>
        <files mask="lv_nuttx_lcd.c"/>
        <files mask="lv_nuttx_libuv.c"/>
        <files mask="lv_nuttx_profiler.c"/>
        <files mask="lv_nuttx_touchscreen.c"/>
      </source>
      <source relative_path="src/drivers/sdl" type="src">
        <files mask="lv_sdl_keyboard.c"/>
        <files mask="lv_sdl_mouse.c"/>
        <files mask="lv_sdl_mousewheel.c"/>
        <files mask="lv_sdl_window.c"/>
      </source>
      <source relative_path="src/drivers/windows" type="src">
        <files mask="lv_windows_context.c"/>
        <files mask="lv_windows_display.c"/>
        <files mask="lv_windows_input.c"/>
      </source>
      <source relative_path="src/drivers/x11" type="src">
        <files mask="lv_x11_display.c"/>
        <files mask="lv_x11_input.c"/>
      </source>
      <source relative_path="src/drivers/glfw" type="src">
        <files mask="lv_glfw_window.c"/>
        <files mask="lv_opengles_debug.c"/>
        <files mask="lv_opengles_driver.c"/>
        <files mask="lv_opengles_texture.c"/>
      </source>
      <source relative_path="src/drivers/qnx" type="src">
        <files mask="lv_qnx.c"/>
      </source>
      <source relative_path="src/drivers/wayland" type="src">
        <files mask="lv_wayland.c"/>
        <files mask="lv_wayland_smm.c"/>
      </source>
      <source relative_path="src/font" type="src">
        <files mask="lv_binfont_loader.c"/>
        <files mask="lv_font.c"/>
        <files mask="lv_font_dejavu_16_persian_hebrew.c"/>
        <files mask="lv_font_fmt_txt.c"/>
        <files mask="lv_font_montserrat_10.c"/>
        <files mask="lv_font_montserrat_12.c"/>
        <files mask="lv_font_montserrat_14.c"/>
        <files mask="lv_font_montserrat_16.c"/>
        <files mask="lv_font_montserrat_18.c"/>
        <files mask="lv_font_montserrat_20.c"/>
        <files mask="lv_font_montserrat_22.c"/>
        <files mask="lv_font_montserrat_24.c"/>
        <files mask="lv_font_montserrat_26.c"/>
        <files mask="lv_font_montserrat_28.c"/>
        <files mask="lv_font_montserrat_28_compressed.c"/>
        <files mask="lv_font_montserrat_30.c"/>
        <files mask="lv_font_montserrat_32.c"/>
        <files mask="lv_font_montserrat_34.c"/>
        <files mask="lv_font_montserrat_36.c"/>
        <files mask="lv_font_montserrat_38.c"/>
        <files mask="lv_font_montserrat_40.c"/>
        <files mask="lv_font_montserrat_42.c"/>
        <files mask="lv_font_montserrat_44.c"/>
        <files mask="lv_font_montserrat_46.c"/>
        <files mask="lv_font_montserrat_48.c"/>
        <files mask="lv_font_montserrat_8.c"/>
        <files mask="lv_font_simsun_14_cjk.c"/>
        <files mask="lv_font_simsun_16_cjk.c"/>
        <files mask="lv_font_unscii_16.c"/>
        <files mask="lv_font_unscii_8.c"/>
      </source>
      <source relative_path="src/indev" type="src">
        <files mask="lv_indev.c"/>
        <files mask="lv_indev_scroll.c"/>
      </source>
      <source relative_path="src/layouts/flex" type="src">
        <files mask="lv_flex.c"/>
      </source>
      <source relative_path="src/layouts/grid" type="src">
        <files mask="lv_grid.c"/>
      </source>
      <source relative_path="src/layouts" type="src">
        <files mask="lv_layout.c"/>
      </source>
      <source relative_path="src/libs/barcode" type="src">
        <files mask="code128.c"/>
        <files mask="lv_barcode.c"/>
      </source>
      <source relative_path="src/libs/bin_decoder" type="src">
        <files mask="lv_bin_decoder.c"/>
      </source>
      <source relative_path="src/libs/bmp" type="src">
        <files mask="lv_bmp.c"/>
      </source>
      <source relative_path="src/libs/ffmpeg" type="src">
        <files mask="lv_ffmpeg.c"/>
      </source>
      <source relative_path="src/libs/freetype" type="src">
        <files mask="lv_freetype.c"/>
        <files mask="lv_freetype_glyph.c"/>
        <files mask="lv_freetype_image.c"/>
        <files mask="lv_freetype_outline.c"/>
        <files mask="lv_ftsystem.c"/>
      </source>
      <source relative_path="src/libs/fsdrv" type="src">
        <files mask="lv_fs_cbfs.c"/>
        <files mask="lv_fs_fatfs.c"/>
        <files mask="lv_fs_littlefs.c"/>
        <files mask="lv_fs_memfs.c"/>
        <files mask="lv_fs_posix.c"/>
        <files mask="lv_fs_rawfs.c"/>
        <files mask="lv_fs_stdio.c"/>
        <files mask="lv_fs_win32.c"/>
      </source>
      <source relative_path="src/libs/gif" type="src">
        <files mask="gifdec.c"/>
        <files mask="lv_gif.c"/>
      </source>
      <source relative_path="src/libs/libjpeg_turbo" type="src">
        <files mask="lv_libjpeg_turbo.c"/>
      </source>
      <source relative_path="src/libs/libpng" type="src">
        <files mask="lv_libpng.c"/>
      </source>
      <source relative_path="src/libs/lodepng" type="src">
        <files mask="lodepng.c"/>
        <files mask="lv_lodepng.c"/>
      </source>
      <source relative_path="src/libs/lz4" type="src">
        <files mask="lz4.c"/>
      </source>
      <source relative_path="src/libs/qrcode" type="src">
        <files mask="lv_qrcode.c"/>
        <files mask="qrcodegen.c"/>
      </source>
      <source relative_path="src/libs/rle" type="src">
        <files mask="lv_rle.c"/>
      </source>
      <source relative_path="src/libs/rlottie" type="src">
        <files mask="lv_rlottie.c"/>
      </source>
      <source relative_path="src/libs/tiny_ttf" type="src">
        <files mask="lv_tiny_ttf.c"/>
      </source>
      <source relative_path="src/libs/tjpgd" type="src">
        <files mask="lv_tjpgd.c"/>
        <files mask="tjpgd.c"/>
      </source>
      <source relative_path="src/misc/cache" type="src">
        <files mask="lv_cache.c"/>
        <files mask="lv_cache_entry.c"/>
        <files mask="lv_cache_lru_rb.c"/>
        <files mask="lv_image_cache.c"/>
        <files mask="lv_image_header_cache.c"/>
      </source>
      <source relative_path="src/misc" type="src">
        <files mask="lv_anim.c"/>
        <files mask="lv_anim_timeline.c"/>
        <files mask="lv_area.c"/>
        <files mask="lv_array.c"/>
        <files mask="lv_async.c"/>
        <files mask="lv_bidi.c"/>
        <files mask="lv_color.c"/>
        <files mask="lv_color_op.c"/>
        <files mask="lv_event.c"/>
        <files mask="lv_fs.c"/>
        <files mask="lv_ll.c"/>
        <files mask="lv_log.c"/>
        <files mask="lv_lru.c"/>
        <files mask="lv_math.c"/>
        <files mask="lv_matrix.c"/>
        <files mask="lv_palette.c"/>
        <files mask="lv_profiler_builtin.c"/>
        <files mask="lv_rb.c"/>
        <files mask="lv_style.c"/>
        <files mask="lv_style_gen.c"/>
        <files mask="lv_templ.c"/>
        <files mask="lv_text.c"/>
        <files mask="lv_text_ap.c"/>
        <files mask="lv_timer.c"/>
        <files mask="lv_utils.c"/>
      </source>
      <source relative_path="src/osal" type="src">
        <files mask="lv_cmsis_rtos2.c"/>
        <files mask="lv_freertos.c"/>
        <files mask="lv_linux.c"/>
        <files mask="lv_mqx.c"/>
        <files mask="lv_os.c"/>
        <files mask="lv_os_none.c"/>
        <files mask="lv_pthread.c"/>
        <files mask="lv_rtthread.c"/>
        <files mask="lv_windows.c"/>
      </source>
      <source relative_path="src/others/file_explorer" type="src">
        <files mask="lv_file_explorer.c"/>
      </source>
      <source relative_path="src/others/fragment" type="src">
        <files mask="lv_fragment.c"/>
        <files mask="lv_fragment_manager.c"/>
      </source>
      <source relative_path="src/others/gridnav" type="src">
        <files mask="lv_gridnav.c"/>
      </source>
      <source relative_path="src/others/ime" type="src">
        <files mask="lv_ime_pinyin.c"/>
      </source>
      <source relative_path="src/others/imgfont" type="src">
        <files mask="lv_imgfont.c"/>
      </source>
      <source relative_path="src/others/monkey" type="src">
        <files mask="lv_monkey.c"/>
      </source>
      <source relative_path="src/others/observer" type="src">
        <files mask="lv_observer.c"/>
      </source>
      <source relative_path="src/others/snapshot" type="src">
        <files mask="lv_snapshot.c"/>
      </source>
      <source relative_path="src/others/sysmon" type="src">
        <files mask="lv_sysmon.c"/>
      </source>
      <source relative_path="src/others/vg_lite_tvg" type="src">
        <files mask="vg_lite_matrix.c"/>
      </source>
      <source relative_path="src/stdlib/builtin" type="src">
        <files mask="lv_mem_core_builtin.c"/>
        <files mask="lv_sprintf_builtin.c"/>
        <files mask="lv_string_builtin.c"/>
        <files mask="lv_tlsf.c"/>
      </source>
      <source relative_path="src/stdlib/clib" type="src">
        <files mask="lv_mem_core_clib.c"/>
        <files mask="lv_sprintf_clib.c"/>
        <files mask="lv_string_clib.c"/>
      </source>
      <source relative_path="src/stdlib" type="src">
        <files mask="lv_mem.c"/>
      </source>
      <source relative_path="src/stdlib/micropython" type="src">
        <files mask="lv_mem_core_micropython.c"/>
      </source>
      <source relative_path="src/stdlib/rtthread" type="src">
        <files mask="lv_mem_core_rtthread.c"/>
        <files mask="lv_sprintf_rtthread.c"/>
        <files mask="lv_string_rtthread.c"/>
      </source>
      <source relative_path="src/themes/default" type="src">
        <files mask="lv_theme_default.c"/>
      </source>
      <source relative_path="src/themes" type="src">
        <files mask="lv_theme.c"/>
      </source>
      <source relative_path="src/themes/mono" type="src">
        <files mask="lv_theme_mono.c"/>
      </source>
      <source relative_path="src/themes/simple" type="src">
        <files mask="lv_theme_simple.c"/>
      </source>
      <source relative_path="src/tick" type="src">
        <files mask="lv_tick.c"/>
      </source>
      <source relative_path="src/widgets/animimage" type="src">
        <files mask="lv_animimage.c"/>
      </source>
      <source relative_path="src/widgets/arc" type="src">
        <files mask="lv_arc.c"/>
      </source>
      <source relative_path="src/widgets/bar" type="src">
        <files mask="lv_bar.c"/>
      </source>
      <source relative_path="src/widgets/button" type="src">
        <files mask="lv_button.c"/>
      </source>
      <source relative_path="src/widgets/buttonmatrix" type="src">
        <files mask="lv_buttonmatrix.c"/>
      </source>
      <source relative_path="src/widgets/calendar" type="src">
        <files mask="lv_calendar.c"/>
        <files mask="lv_calendar_chinese.c"/>
        <files mask="lv_calendar_header_arrow.c"/>
        <files mask="lv_calendar_header_dropdown.c"/>
      </source>
      <source relative_path="src/widgets/carousel" type="src">
        <files mask="lv_carousel.c"/>
      </source>
      <source relative_path="src/widgets/canvas" type="src">
        <files mask="lv_canvas.c"/>
      </source>
      <source relative_path="src/widgets/chart" type="src">
        <files mask="lv_chart.c"/>
      </source>
      <source relative_path="src/widgets/checkbox" type="src">
        <files mask="lv_checkbox.c"/>
      </source>
      <source relative_path="src/widgets/dropdown" type="src">
        <files mask="lv_dropdown.c"/>
      </source>
      <source relative_path="src/widgets/image" type="src">
        <files mask="lv_image.c"/>
      </source>
      <source relative_path="src/widgets/imagebutton" type="src">
        <files mask="lv_imagebutton.c"/>
      </source>
      <source relative_path="src/widgets/keyboard" type="src">
        <files mask="lv_keyboard.c"/>
      </source>
      <source relative_path="src/widgets/label" type="src">
        <files mask="lv_label.c"/>
      </source>
      <source relative_path="src/widgets/led" type="src">
        <files mask="lv_led.c"/>
      </source>
      <source relative_path="src/widgets/line" type="src">
        <files mask="lv_line.c"/>
      </source>
      <source relative_path="src/widgets/list" type="src">
        <files mask="lv_list.c"/>
      </source>
      <source relative_path="src/widgets/lottie" type="src">
        <files mask="lv_lottie.c"/>
      </source>
      <source relative_path="src/widgets/menu" type="src">
        <files mask="lv_menu.c"/>
      </source>
      <source relative_path="src/widgets/msgbox" type="src">
        <files mask="lv_msgbox.c"/>
      </source>
      <source relative_path="src/widgets/objx_templ" type="src">
        <files mask="lv_objx_templ.c"/>
      </source>
      <source relative_path="src/widgets/roller" type="src">
        <files mask="lv_roller.c"/>
      </source>
      <source relative_path="src/widgets/scale" type="src">
        <files mask="lv_scale.c"/>
      </source>
      <source relative_path="src/widgets/slider" type="src">
        <files mask="lv_slider.c"/>
      </source>
      <source relative_path="src/widgets/span" type="src">
        <files mask="lv_span.c"/>
      </source>
      <source relative_path="src/widgets/spinbox" type="src">
        <files mask="lv_spinbox.c"/>
      </source>
      <source relative_path="src/widgets/spinner" type="src">
        <files mask="lv_spinner.c"/>
      </source>
      <source relative_path="src/widgets/switch" type="src">
        <files mask="lv_switch.c"/>
      </source>
      <source relative_path="src/widgets/table" type="src">
        <files mask="lv_table.c"/>
      </source>
      <source relative_path="src/widgets/tabview" type="src">
        <files mask="lv_tabview.c"/>
      </source>
      <source relative_path="src/widgets/textarea" type="src">
        <files mask="lv_textarea.c"/>
      </source>
      <source relative_path="src/widgets/tileview" type="src">
        <files mask="lv_tileview.c"/>
      </source>
      <source relative_path="src/widgets/win" type="src">
        <files mask="lv_win.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="lv_api_map_v8.h"/>
        <files mask="lv_api_map_v9_0.h"/>
        <files mask="lv_api_map_v9_1.h"/>
        <files mask="lv_conf_internal.h"/>
        <files mask="lv_conf_kconfig.h"/>
        <files mask="lv_init.h"/>
        <files mask="lvgl.h"/>
        <files mask="lvgl_private.h"/>
      </source>
      <source relative_path="src/core" type="c_include">
        <files mask="lv_global.h"/>
        <files mask="lv_group.h"/>
        <files mask="lv_group_private.h"/>
        <files mask="lv_obj.h"/>
        <files mask="lv_obj_class.h"/>
        <files mask="lv_obj_class_private.h"/>
        <files mask="lv_obj_draw.h"/>
        <files mask="lv_obj_draw_private.h"/>
        <files mask="lv_obj_event.h"/>
        <files mask="lv_obj_event_private.h"/>
        <files mask="lv_obj_pos.h"/>
        <files mask="lv_obj_private.h"/>
        <files mask="lv_obj_property.h"/>
        <files mask="lv_obj_scroll.h"/>
        <files mask="lv_obj_scroll_private.h"/>
        <files mask="lv_obj_style.h"/>
        <files mask="lv_obj_style_gen.h"/>
        <files mask="lv_obj_style_private.h"/>
        <files mask="lv_obj_tree.h"/>
        <files mask="lv_refr.h"/>
        <files mask="lv_refr_private.h"/>
      </source>
      <source relative_path="src/display" type="c_include">
        <files mask="lv_display.h"/>
        <files mask="lv_display_private.h"/>
      </source>
      <source relative_path="src/draw" type="c_include">
        <files mask="lv_draw.h"/>
        <files mask="lv_draw_arc.h"/>
        <files mask="lv_draw_buf.h"/>
        <files mask="lv_draw_buf_private.h"/>
        <files mask="lv_draw_image.h"/>
        <files mask="lv_draw_image_private.h"/>
        <files mask="lv_draw_label.h"/>
        <files mask="lv_draw_label_private.h"/>
        <files mask="lv_draw_line.h"/>
        <files mask="lv_draw_mask.h"/>
        <files mask="lv_draw_mask_private.h"/>
        <files mask="lv_draw_private.h"/>
        <files mask="lv_draw_rect.h"/>
        <files mask="lv_draw_rect_private.h"/>
        <files mask="lv_draw_triangle.h"/>
        <files mask="lv_draw_triangle_private.h"/>
        <files mask="lv_draw_vector.h"/>
        <files mask="lv_draw_vector_private.h"/>
        <files mask="lv_image_decoder.h"/>
        <files mask="lv_image_decoder_private.h"/>
        <files mask="lv_image_dsc.h"/>
      </source>
      <source relative_path="src/draw/nxp/pxp" type="c_include">
        <files mask="lv_draw_pxp.h"/>
        <files mask="lv_pxp_cfg.h"/>
        <files mask="lv_pxp_osa.h"/>
        <files mask="lv_pxp_utils.h"/>
      </source>
      <source relative_path="src/draw/nxp/vglite" type="c_include">
        <files mask="lv_draw_vglite.h"/>
        <files mask="lv_vglite_buf.h"/>
        <files mask="lv_vglite_matrix.h"/>
        <files mask="lv_vglite_path.h"/>
        <files mask="lv_vglite_utils.h"/>
      </source>
      <source relative_path="src/draw/sdl" type="c_include">
        <files mask="lv_draw_sdl.h"/>
      </source>
      <source relative_path="src/draw/sw/arm2d" type="c_include">
        <files mask="lv_draw_sw_arm2d.h"/>
        <files mask="lv_draw_sw_helium.h"/>
      </source>
      <source relative_path="src/draw/sw/blend/arm2d" type="c_include">
        <files mask="lv_blend_arm2d.h"/>
      </source>
      <source relative_path="src/draw/sw/blend" type="c_include">
        <files mask="lv_draw_sw_blend.h"/>
        <files mask="lv_draw_sw_blend_private.h"/>
        <files mask="lv_draw_sw_blend_to_al88.h"/>
        <files mask="lv_draw_sw_blend_to_argb8888.h"/>
        <files mask="lv_draw_sw_blend_to_i1.h"/>
        <files mask="lv_draw_sw_blend_to_l8.h"/>
        <files mask="lv_draw_sw_blend_to_rgb565.h"/>
        <files mask="lv_draw_sw_blend_to_rgb888.h"/>
      </source>
      <source relative_path="src/draw/sw/blend/neon" type="c_include">
        <files mask="lv_blend_neon.h"/>
      </source>
      <source relative_path="src/draw/sw" type="c_include">
        <files mask="lv_draw_sw.h"/>
        <files mask="lv_draw_sw_gradient.h"/>
        <files mask="lv_draw_sw_gradient_private.h"/>
        <files mask="lv_draw_sw_mask.h"/>
        <files mask="lv_draw_sw_mask_private.h"/>
        <files mask="lv_draw_sw_private.h"/>
      </source>
      <source relative_path="src/drivers" type="c_include">
        <files mask="lv_drivers.h"/>
      </source>
      <source relative_path="src/drivers/display/drm" type="c_include">
        <files mask="lv_linux_drm.h"/>
      </source>
      <source relative_path="src/drivers/display/fb" type="c_include">
        <files mask="lv_linux_fbdev.h"/>
      </source>
      <source relative_path="src/drivers/display/ili9341" type="c_include">
        <files mask="lv_ili9341.h"/>
      </source>
      <source relative_path="src/drivers/display/lcd" type="c_include">
        <files mask="lv_lcd_generic_mipi.h"/>
      </source>
      <source relative_path="src/drivers/display/st7735" type="c_include">
        <files mask="lv_st7735.h"/>
      </source>
      <source relative_path="src/drivers/display/st7789" type="c_include">
        <files mask="lv_st7789.h"/>
      </source>
      <source relative_path="src/drivers/display/st7796" type="c_include">
        <files mask="lv_st7796.h"/>
      </source>
      <source relative_path="src/drivers/display/tft_espi" type="c_include">
        <files mask="lv_tft_espi.h"/>
      </source>
      <source relative_path="src/drivers/evdev" type="c_include">
        <files mask="lv_evdev.h"/>
      </source>
      <source relative_path="src/drivers/libinput" type="c_include">
        <files mask="lv_libinput.h"/>
        <files mask="lv_libinput_private.h"/>
        <files mask="lv_xkb.h"/>
        <files mask="lv_xkb_private.h"/>
      </source>
      <source relative_path="src/drivers/nuttx" type="c_include">
        <files mask="lv_nuttx_cache.h"/>
        <files mask="lv_nuttx_entry.h"/>
        <files mask="lv_nuttx_fbdev.h"/>
        <files mask="lv_nuttx_image_cache.h"/>
        <files mask="lv_nuttx_lcd.h"/>
        <files mask="lv_nuttx_libuv.h"/>
        <files mask="lv_nuttx_profiler.h"/>
        <files mask="lv_nuttx_touchscreen.h"/>
      </source>
      <source relative_path="src/drivers/sdl" type="c_include">
        <files mask="lv_sdl_keyboard.h"/>
        <files mask="lv_sdl_mouse.h"/>
        <files mask="lv_sdl_mousewheel.h"/>
        <files mask="lv_sdl_private.h"/>
        <files mask="lv_sdl_window.h"/>
      </source>
      <source relative_path="src/drivers/windows" type="c_include">
        <files mask="lv_windows_context.h"/>
        <files mask="lv_windows_display.h"/>
        <files mask="lv_windows_input.h"/>
        <files mask="lv_windows_input_private.h"/>
      </source>
      <source relative_path="src/drivers/x11" type="c_include">
        <files mask="lv_x11.h"/>
      </source>
      <source relative_path="src/drivers/glfw" type="c_include">
        <files mask="lv_glfw_window.h"/>
        <files mask="lv_glfw_window_private.h"/>
        <files mask="lv_opengles_debug.h"/>
        <files mask="lv_opengles_driver.h"/>
        <files mask="lv_opengles_texture.h"/>
      </source>
      <source relative_path="src/drivers/qnx" type="c_include">
        <files mask="lv_qnx.h"/>
      </source>
      <source relative_path="src/drivers/wayland" type="c_include">
        <files mask="lv_wayland.h"/>
        <files mask="lv_wayland_smm.h"/>
      </source>
      <source relative_path="src/font" type="c_include">
        <files mask="lv_binfont_loader.h"/>
        <files mask="lv_font.h"/>
        <files mask="lv_font_fmt_txt.h"/>
        <files mask="lv_font_fmt_txt_private.h"/>
        <files mask="lv_symbol_def.h"/>
      </source>
      <source relative_path="src/indev" type="c_include">
        <files mask="lv_indev.h"/>
        <files mask="lv_indev_private.h"/>
        <files mask="lv_indev_scroll.h"/>
      </source>
      <source relative_path="src/layouts/flex" type="c_include">
        <files mask="lv_flex.h"/>
      </source>
      <source relative_path="src/layouts/grid" type="c_include">
        <files mask="lv_grid.h"/>
      </source>
      <source relative_path="src/layouts" type="c_include">
        <files mask="lv_layout.h"/>
        <files mask="lv_layout_private.h"/>
      </source>
      <source relative_path="src/libs/barcode" type="c_include">
        <files mask="code128.h"/>
        <files mask="lv_barcode.h"/>
        <files mask="lv_barcode_private.h"/>
      </source>
      <source relative_path="src/libs/bin_decoder" type="c_include">
        <files mask="lv_bin_decoder.h"/>
      </source>
      <source relative_path="src/libs/bmp" type="c_include">
        <files mask="lv_bmp.h"/>
      </source>
      <source relative_path="src/libs/ffmpeg" type="c_include">
        <files mask="lv_ffmpeg.h"/>
        <files mask="lv_ffmpeg_private.h"/>
      </source>
      <source relative_path="src/libs/freetype" type="c_include">
        <files mask="ftmodule.h"/>
        <files mask="ftoption.h"/>
        <files mask="lv_freetype.h"/>
        <files mask="lv_freetype_private.h"/>
      </source>
      <source relative_path="src/libs/fsdrv" type="c_include">
        <files mask="lv_fsdrv.h"/>
      </source>
      <source relative_path="src/libs/gif" type="c_include">
        <files mask="gifdec.h"/>
        <files mask="gifdec_mve.h"/>
        <files mask="lv_gif.h"/>
        <files mask="lv_gif_private.h"/>
      </source>
      <source relative_path="src/libs/libjpeg_turbo" type="c_include">
        <files mask="lv_libjpeg_turbo.h"/>
      </source>
      <source relative_path="src/libs/libpng" type="c_include">
        <files mask="lv_libpng.h"/>
      </source>
      <source relative_path="src/libs/lodepng" type="c_include">
        <files mask="lodepng.h"/>
        <files mask="lv_lodepng.h"/>
      </source>
      <source relative_path="src/libs/lz4" type="c_include">
        <files mask="lz4.h"/>
      </source>
      <source relative_path="src/libs/qrcode" type="c_include">
        <files mask="lv_qrcode.h"/>
        <files mask="lv_qrcode_private.h"/>
        <files mask="qrcodegen.h"/>
      </source>
      <source relative_path="src/libs/rle" type="c_include">
        <files mask="lv_rle.h"/>
      </source>
      <source relative_path="src/libs/rlottie" type="c_include">
        <files mask="lv_rlottie.h"/>
        <files mask="lv_rlottie_private.h"/>
      </source>
      <source relative_path="src/libs/thorvg" type="c_include">
        <files mask="config.h"/>
        <files mask="thorvg.h"/>
        <files mask="thorvg_capi.h"/>
        <files mask="thorvg_lottie.h"/>
        <files mask="tvgAnimation.h"/>
        <files mask="tvgArray.h"/>
        <files mask="tvgBinaryDesc.h"/>
        <files mask="tvgCanvas.h"/>
        <files mask="tvgCommon.h"/>
        <files mask="tvgCompressor.h"/>
        <files mask="tvgFill.h"/>
        <files mask="tvgFrameModule.h"/>
        <files mask="tvgInlist.h"/>
        <files mask="tvgIteratorAccessor.h"/>
        <files mask="tvgLines.h"/>
        <files mask="tvgLoadModule.h"/>
        <files mask="tvgLoader.h"/>
        <files mask="tvgLock.h"/>
        <files mask="tvgLottieBuilder.h"/>
        <files mask="tvgLottieExpressions.h"/>
        <files mask="tvgLottieInterpolator.h"/>
        <files mask="tvgLottieLoader.h"/>
        <files mask="tvgLottieModel.h"/>
        <files mask="tvgLottieParser.h"/>
        <files mask="tvgLottieParserHandler.h"/>
        <files mask="tvgLottieProperty.h"/>
        <files mask="tvgMath.h"/>
        <files mask="tvgPaint.h"/>
        <files mask="tvgPicture.h"/>
        <files mask="tvgRawLoader.h"/>
        <files mask="tvgRender.h"/>
        <files mask="tvgSaveModule.h"/>
        <files mask="tvgScene.h"/>
        <files mask="tvgShape.h"/>
        <files mask="tvgStr.h"/>
        <files mask="tvgSvgCssStyle.h"/>
        <files mask="tvgSvgLoader.h"/>
        <files mask="tvgSvgLoaderCommon.h"/>
        <files mask="tvgSvgPath.h"/>
        <files mask="tvgSvgSceneBuilder.h"/>
        <files mask="tvgSvgUtil.h"/>
        <files mask="tvgSwCommon.h"/>
        <files mask="tvgSwRasterAvx.h"/>
        <files mask="tvgSwRasterC.h"/>
        <files mask="tvgSwRasterNeon.h"/>
        <files mask="tvgSwRasterTexmap.h"/>
        <files mask="tvgSwRenderer.h"/>
        <files mask="tvgTaskScheduler.h"/>
        <files mask="tvgText.h"/>
        <files mask="tvgXmlParser.h"/>
      </source>
      <source relative_path="src/libs/tiny_ttf" type="c_include">
        <files mask="lv_tiny_ttf.h"/>
        <files mask="stb_rect_pack.h"/>
        <files mask="stb_truetype_htcw.h"/>
      </source>
      <source relative_path="src/libs/tjpgd" type="c_include">
        <files mask="lv_tjpgd.h"/>
        <files mask="tjpgd.h"/>
        <files mask="tjpgdcnf.h"/>
      </source>
      <source relative_path="src/misc/cache" type="c_include">
        <files mask="lv_cache.h"/>
        <files mask="lv_cache_entry.h"/>
        <files mask="lv_cache_entry_private.h"/>
        <files mask="lv_cache_lru_rb.h"/>
        <files mask="lv_cache_private.h"/>
        <files mask="lv_image_cache.h"/>
        <files mask="lv_image_header_cache.h"/>
      </source>
      <source relative_path="src/misc" type="c_include">
        <files mask="lv_anim.h"/>
        <files mask="lv_anim_private.h"/>
        <files mask="lv_anim_timeline.h"/>
        <files mask="lv_area.h"/>
        <files mask="lv_area_private.h"/>
        <files mask="lv_array.h"/>
        <files mask="lv_assert.h"/>
        <files mask="lv_async.h"/>
        <files mask="lv_bidi.h"/>
        <files mask="lv_bidi_private.h"/>
        <files mask="lv_color.h"/>
        <files mask="lv_color_op.h"/>
        <files mask="lv_color_op_private.h"/>
        <files mask="lv_event.h"/>
        <files mask="lv_event_private.h"/>
        <files mask="lv_fs.h"/>
        <files mask="lv_fs_private.h"/>
        <files mask="lv_ll.h"/>
        <files mask="lv_log.h"/>
        <files mask="lv_lru.h"/>
        <files mask="lv_math.h"/>
        <files mask="lv_matrix.h"/>
        <files mask="lv_palette.h"/>
        <files mask="lv_profiler.h"/>
        <files mask="lv_profiler_builtin.h"/>
        <files mask="lv_profiler_builtin_private.h"/>
        <files mask="lv_rb.h"/>
        <files mask="lv_rb_private.h"/>
        <files mask="lv_style.h"/>
        <files mask="lv_style_gen.h"/>
        <files mask="lv_style_private.h"/>
        <files mask="lv_templ.h"/>
        <files mask="lv_text.h"/>
        <files mask="lv_text_ap.h"/>
        <files mask="lv_text_private.h"/>
        <files mask="lv_timer.h"/>
        <files mask="lv_timer_private.h"/>
        <files mask="lv_types.h"/>
        <files mask="lv_utils.h"/>
      </source>
      <source relative_path="src/osal" type="c_include">
        <files mask="lv_cmsis_rtos2.h"/>
        <files mask="lv_freertos.h"/>
        <files mask="lv_linux_private.h"/>
        <files mask="lv_mqx.h"/>
        <files mask="lv_os.h"/>
        <files mask="lv_os_none.h"/>
        <files mask="lv_os_private.h"/>
        <files mask="lv_pthread.h"/>
        <files mask="lv_rtthread.h"/>
        <files mask="lv_windows.h"/>
      </source>
      <source relative_path="src/others/file_explorer" type="c_include">
        <files mask="lv_file_explorer.h"/>
        <files mask="lv_file_explorer_private.h"/>
      </source>
      <source relative_path="src/others/fragment" type="c_include">
        <files mask="lv_fragment.h"/>
        <files mask="lv_fragment_private.h"/>
      </source>
      <source relative_path="src/others/gridnav" type="c_include">
        <files mask="lv_gridnav.h"/>
      </source>
      <source relative_path="src/others/ime" type="c_include">
        <files mask="lv_ime_pinyin.h"/>
        <files mask="lv_ime_pinyin_private.h"/>
      </source>
      <source relative_path="src/others/imgfont" type="c_include">
        <files mask="lv_imgfont.h"/>
      </source>
      <source relative_path="src/others/monkey" type="c_include">
        <files mask="lv_monkey.h"/>
        <files mask="lv_monkey_private.h"/>
      </source>
      <source relative_path="src/others/observer" type="c_include">
        <files mask="lv_observer.h"/>
        <files mask="lv_observer_private.h"/>
      </source>
      <source relative_path="src/others/snapshot" type="c_include">
        <files mask="lv_snapshot.h"/>
      </source>
      <source relative_path="src/others/sysmon" type="c_include">
        <files mask="lv_sysmon.h"/>
        <files mask="lv_sysmon_private.h"/>
      </source>
      <source relative_path="src/others/vg_lite_tvg" type="c_include">
        <files mask="vg_lite.h"/>
      </source>
      <source relative_path="src/stdlib/builtin" type="c_include">
        <files mask="lv_tlsf.h"/>
        <files mask="lv_tlsf_private.h"/>
      </source>
      <source relative_path="src/stdlib" type="c_include">
        <files mask="lv_mem.h"/>
        <files mask="lv_mem_private.h"/>
        <files mask="lv_sprintf.h"/>
        <files mask="lv_string.h"/>
      </source>
      <source relative_path="src/themes/default" type="c_include">
        <files mask="lv_theme_default.h"/>
      </source>
      <source relative_path="src/themes" type="c_include">
        <files mask="lv_theme.h"/>
        <files mask="lv_theme_private.h"/>
      </source>
      <source relative_path="src/themes/mono" type="c_include">
        <files mask="lv_theme_mono.h"/>
      </source>
      <source relative_path="src/themes/simple" type="c_include">
        <files mask="lv_theme_simple.h"/>
      </source>
      <source relative_path="src/tick" type="c_include">
        <files mask="lv_tick.h"/>
        <files mask="lv_tick_private.h"/>
      </source>
      <source relative_path="src/widgets/animimage" type="c_include">
        <files mask="lv_animimage.h"/>
        <files mask="lv_animimage_private.h"/>
      </source>
      <source relative_path="src/widgets/arc" type="c_include">
        <files mask="lv_arc.h"/>
        <files mask="lv_arc_private.h"/>
      </source>
      <source relative_path="src/widgets/bar" type="c_include">
        <files mask="lv_bar.h"/>
        <files mask="lv_bar_private.h"/>
      </source>
      <source relative_path="src/widgets/button" type="c_include">
        <files mask="lv_button.h"/>
        <files mask="lv_button_private.h"/>
      </source>
      <source relative_path="src/widgets/buttonmatrix" type="c_include">
        <files mask="lv_buttonmatrix.h"/>
        <files mask="lv_buttonmatrix_private.h"/>
      </source>
      <source relative_path="src/widgets/calendar" type="c_include">
        <files mask="lv_calendar.h"/>
        <files mask="lv_calendar_chinese.h"/>
        <files mask="lv_calendar_chinese_private.h"/>
        <files mask="lv_calendar_header_arrow.h"/>
        <files mask="lv_calendar_header_dropdown.h"/>
        <files mask="lv_calendar_private.h"/>
      </source>
      <source relative_path="src/widgets/canvas" type="c_include">
        <files mask="lv_canvas.h"/>
        <files mask="lv_canvas_private.h"/>
      </source>
      <source relative_path="src/widgets/carousel" type="c_include">
        <files mask="lv_carousel.h"/>
        <files mask="lv_carousel_private.h"/>
      </source>
      <source relative_path="src/widgets/chart" type="c_include">
        <files mask="lv_chart.h"/>
        <files mask="lv_chart_private.h"/>
      </source>
      <source relative_path="src/widgets/checkbox" type="c_include">
        <files mask="lv_checkbox.h"/>
        <files mask="lv_checkbox_private.h"/>
      </source>
      <source relative_path="src/widgets/dropdown" type="c_include">
        <files mask="lv_dropdown.h"/>
        <files mask="lv_dropdown_private.h"/>
      </source>
      <source relative_path="src/widgets/image" type="c_include">
        <files mask="lv_image.h"/>
        <files mask="lv_image_private.h"/>
      </source>
      <source relative_path="src/widgets/imagebutton" type="c_include">
        <files mask="lv_imagebutton.h"/>
        <files mask="lv_imagebutton_private.h"/>
      </source>
      <source relative_path="src/widgets/keyboard" type="c_include">
        <files mask="lv_keyboard.h"/>
        <files mask="lv_keyboard_private.h"/>
      </source>
      <source relative_path="src/widgets/label" type="c_include">
        <files mask="lv_label.h"/>
        <files mask="lv_label_private.h"/>
      </source>
      <source relative_path="src/widgets/led" type="c_include">
        <files mask="lv_led.h"/>
        <files mask="lv_led_private.h"/>
      </source>
      <source relative_path="src/widgets/line" type="c_include">
        <files mask="lv_line.h"/>
        <files mask="lv_line_private.h"/>
      </source>
      <source relative_path="src/widgets/list" type="c_include">
        <files mask="lv_list.h"/>
      </source>
      <source relative_path="src/widgets/lottie" type="c_include">
        <files mask="lv_lottie.h"/>
        <files mask="lv_lottie_private.h"/>
      </source>
      <source relative_path="src/widgets/menu" type="c_include">
        <files mask="lv_menu.h"/>
        <files mask="lv_menu_private.h"/>
      </source>
      <source relative_path="src/widgets/msgbox" type="c_include">
        <files mask="lv_msgbox.h"/>
        <files mask="lv_msgbox_private.h"/>
      </source>
      <source relative_path="src/widgets/objx_templ" type="c_include">
        <files mask="lv_objx_templ.h"/>
      </source>
      <source relative_path="src/widgets/roller" type="c_include">
        <files mask="lv_roller.h"/>
        <files mask="lv_roller_private.h"/>
      </source>
      <source relative_path="src/widgets/scale" type="c_include">
        <files mask="lv_scale.h"/>
        <files mask="lv_scale_private.h"/>
      </source>
      <source relative_path="src/widgets/slider" type="c_include">
        <files mask="lv_slider.h"/>
        <files mask="lv_slider_private.h"/>
      </source>
      <source relative_path="src/widgets/span" type="c_include">
        <files mask="lv_span.h"/>
        <files mask="lv_span_private.h"/>
      </source>
      <source relative_path="src/widgets/spinbox" type="c_include">
        <files mask="lv_spinbox.h"/>
        <files mask="lv_spinbox_private.h"/>
      </source>
      <source relative_path="src/widgets/spinner" type="c_include">
        <files mask="lv_spinner.h"/>
      </source>
      <source relative_path="src/widgets/switch" type="c_include">
        <files mask="lv_switch.h"/>
        <files mask="lv_switch_private.h"/>
      </source>
      <source relative_path="src/widgets/table" type="c_include">
        <files mask="lv_table.h"/>
        <files mask="lv_table_private.h"/>
      </source>
      <source relative_path="src/widgets/tabview" type="c_include">
        <files mask="lv_tabview.h"/>
        <files mask="lv_tabview_private.h"/>
      </source>
      <source relative_path="src/widgets/textarea" type="c_include">
        <files mask="lv_textarea.h"/>
        <files mask="lv_textarea_private.h"/>
      </source>
      <source relative_path="src/widgets/tileview" type="c_include">
        <files mask="lv_tileview.h"/>
        <files mask="lv_tileview_private.h"/>
      </source>
      <source relative_path="src/widgets/win" type="c_include">
        <files mask="lv_win.h"/>
        <files mask="lv_win_private.h"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_conf_template.h"/>
        <files mask="lv_version.h"/>
        <files mask="lvgl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/draw/nxp/vglite" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/draw/nxp/vglite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.benchmark.MCXA156" name="LVGL benchamrk demo" brief="LVGL benchmark demo" version="9.2.1" full_name="LVGL benchark demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/benchmark" project_base_path="lvgl/demos/benchmark">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_benchmark.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_benchmark.h"/>
      </source>
      <source relative_path="assets" type="src">
        <files mask="img_benchmark_avatar.c"/>
        <files mask="img_benchmark_cogwheel_alpha256.c"/>
        <files mask="img_benchmark_cogwheel_argb.c"/>
        <files mask="img_benchmark_cogwheel_indexed16.c"/>
        <files mask="img_benchmark_cogwheel_rgb.c"/>
        <files mask="lv_font_benchmark_montserrat_12_compr_az.c.c"/>
        <files mask="lv_font_benchmark_montserrat_16_compr_az.c.c"/>
        <files mask="lv_font_benchmark_montserrat_28_compr_az.c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_benchmark.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="assets" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="assets" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.common.MCXA156" name="LVGL demo common" brief="LVGL demo common" version="9.2.1" full_name="LVGL demo common" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos" project_base_path="lvgl/demos">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demos.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demos.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.transform.MCXA156" name="LVGL demo transform" brief="LVGL demo transform" version="9.2.1" full_name="LVGL demo transform" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/transform" project_base_path="lvgl/demos/transform">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_transform.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_transform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_transform.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.multilang.MCXA156" name="LVGL demo multilang" brief="LVGL demo multilang" version="9.2.1" full_name="LVGL demo multilang" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/multilang" project_base_path="lvgl/demos/multilang">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_multilang.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_multilang.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_multilang.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.flex_layout.MCXA156" name="LVGL demo flex_layout" brief="LVGL demo flex_layout" version="9.2.1" full_name="LVGL demo flex_layout" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/flex_layout" project_base_path="lvgl/demos/flex_layout">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_flex_layout_ctrl_pad.c"/>
        <files mask="lv_demo_flex_layout_flex_loader.c"/>
        <files mask="lv_demo_flex_layout_main.c"/>
        <files mask="lv_demo_flex_layout_view.c"/>
        <files mask="lv_demo_flex_layout_view_child_node.c"/>
        <files mask="lv_demo_flex_layout_view_ctrl_pad.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_flex_layout.h"/>
        <files mask="lv_demo_flex_layout_main.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_flex_layout.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.scroll.MCXA156" name="LVGL demo scroll" brief="LVGL demo scroll" version="9.2.1" full_name="LVGL demo scroll" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/scroll" project_base_path="lvgl/demos/scroll">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_scroll.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_scroll.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_scroll.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.music.MCXA156" name="LVGL demo music" brief="LVGL demo music" version="9.2.1" full_name="LVGL demo music" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/music" project_base_path="lvgl/demos/music">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_music.c"/>
        <files mask="lv_demo_music_list.c"/>
        <files mask="lv_demo_music_main.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_music.h"/>
        <files mask="lv_demo_music_list.h"/>
        <files mask="lv_demo_music_main.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_music.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.keypad_encoder.MCXA156" name="LVGL demo keypad_encoder" brief="LVGL demo keypad_encoder" version="9.2.1" full_name="LVGL demo keypad_encoder" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/keypad_encoder" project_base_path="lvgl/demos/keypad_encoder">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_keypad_encoder.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_keypad_encoder.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_keypad_encoder.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.stress.MCXA156" name="LVGL stress demo" brief="LVGL stress demo" version="9.2.1" full_name="LVGL stress demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/stress" project_base_path="lvgl/demos/stress">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MCXA156"/>
          <component_dependency value="middleware.lvgl.demo.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_stress.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_stress.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_stress.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.widgets.MCXA156" name="LVGL widgets demo" brief="LVGL widgets demo" version="9.2.1" full_name="LVGL  demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/widgets" project_base_path="lvgl/demos/widgets">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MCXA156"/>
          <component_dependency value="middleware.lvgl.demo.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_widgets.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_widgets.h"/>
      </source>
      <source relative_path="assets" type="src">
        <files mask="img_clothes.c"/>
        <files mask="img_demo_widgets_avatar.c"/>
        <files mask="img_demo_widgets_needle.c"/>
        <files mask="img_lvgl_logo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_widgets.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="assets" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="assets" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.littlefs_mflash.MCXA156" name="littlefs mflash component" brief="littlefs mflash" version="2.9.1" full_name="Middleware littlefs_mflash" category="File System/LittleFS File System" user_visible="true" type="middleware" package_base_path="middleware/littlefs" project_base_path="littlefs">
      <dependencies>
        <all>
          <component_dependency value="middleware.littlefs.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="mflash" type="src">
        <files mask="lfs_mflash.c"/>
      </source>
      <source relative_path="mflash" type="c_include">
        <files mask="lfs_mflash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_littlefs_mflash.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mflash" type="c_include"/>
        <include_path relative_path="mflash" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.MCXA156" name="FreeMASTER driver common files" brief="Common FreeMASTER driver code." version="3.0.7" full_name="FreeMASTER communication driver common code" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.fmstr.platform_56f800e.MCXA156"/>
            <component_dependency value="middleware.fmstr.platform_gen32le.MCXA156"/>
            <component_dependency value="middleware.fmstr.platform_pa32.MCXA156"/>
            <component_dependency value="middleware.fmstr.platform_s12z.MCXA156"/>
            <component_dependency value="middleware.fmstr.platform_s32.MCXA156"/>
          </any_of>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="src/common" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_net.h"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_net.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_gen32le.MCXA156" name="FreeMASTER 32bit driver" brief="FreeMASTER driver code for 32bit platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for 32bit platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_flexcanfd.c"/>
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcanfd.h"/>
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_mcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="src">
        <files mask="freemaster_net_segger_rtt.c"/>
        <files mask="freemaster_net_lwip_udp.c"/>
        <files mask="freemaster_net_lwip_tcp.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="c_include">
        <files mask="freemaster_net_segger_rtt.h"/>
        <files mask="freemaster_net_lwip_udp.h"/>
        <files mask="freemaster_net_lwip_tcp.h"/>
      </source>
      <source relative_path="src/template/gen32le" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_gen32le.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_56f800e.MCXA156" name="FreeMASTER DSC driver" brief="FreeMASTER driver code for DSC platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for DSC platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/56f800e" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mscan_dsc.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mscan_dsc.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/template/56f800e" project_relative_path="../source" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_56f800e.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/56f800e" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/56f800e" project_relative_path="../source" type="c_include"/>
        <include_path relative_path="src/platforms/56f800e" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/56f800e" project_relative_path="../source" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.fmstr.all_files.MCXA156" name="FreeMASTER driver all files" version="3.0.7" package_base_path="middleware/freemaster" project_base_path="freemaster">
  <source relative_path="src/common" type="c_include">
    <files mask="freemaster.h"/>
    <files mask="freemaster_can.h"/>
    <files mask="freemaster_defcfg.h"/>
    <files mask="freemaster_net.h"/>
    <files mask="freemaster_private.h"/>
    <files mask="freemaster_protocol.h"/>
    <files mask="freemaster_rec.h"/>
    <files mask="freemaster_serial.h"/>
    <files mask="freemaster_tsa.h"/>
    <files mask="freemaster_ures.h"/>
    <files mask="freemaster_utils.h"/>
  </source>
  <source relative_path="src/common" type="src">
    <files mask="freemaster_appcmd.c"/>
    <files mask="freemaster_can.c"/>
    <files mask="freemaster_net.c"/>
    <files mask="freemaster_pdbdm.c"/>
    <files mask="freemaster_pipes.c"/>
    <files mask="freemaster_protocol.c"/>
    <files mask="freemaster_rec.c"/>
    <files mask="freemaster_scope.c"/>
    <files mask="freemaster_serial.c"/>
    <files mask="freemaster_sha.c"/>
    <files mask="freemaster_tsa.c"/>
    <files mask="freemaster_ures.c"/>
    <files mask="freemaster_utils.c"/>
  </source>
  <source relative_path="src/common" type="other">
    <files mask="freemaster_cfg.h.example"/>
  </source>
  <source relative_path="src/platforms/56f800e" type="c_include">
    <files mask="freemaster_56f800e.h"/>
  </source>
  <source relative_path="src/platforms/gen32be" type="c_include">
    <files mask="freemaster_gen32be.h"/>
  </source>
  <source relative_path="src/platforms/gen32le" type="c_include">
    <files mask="freemaster_gen32le.h"/>
  </source>
  <source relative_path="src/platforms/s12z" type="c_include">
    <files mask="freemaster_s12z.h"/>
  </source>
  <source relative_path="src/drivers" type="doc">
    <files mask="readme.txt"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_56f800e_flexcan.c"/>
    <files mask="freemaster_56f800e_qsci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_56f800e_flexcan.h"/>
    <files mask="freemaster_56f800e_qsci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="src">
    <files mask="freemaster_kxx_uart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="c_include">
    <files mask="freemaster_kxx_uart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="src">
    <files mask="freemaster_mpc574xp_linflex.c"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="c_include">
    <files mask="freemaster_mpc574xp_linflex.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="src">
    <files mask="freemaster_s12z_mscan.c"/>
    <files mask="freemaster_s12z_sci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="c_include">
    <files mask="freemaster_s12z_mscan.h"/>
    <files mask="freemaster_s12z_sci.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="src">
    <files mask="freemaster_flexcan.c"/>
    <files mask="freemaster_flexcan_dsc.c"/>
    <files mask="freemaster_flexcanfd.c"/>
    <files mask="freemaster_mcan.c"/>
    <files mask="freemaster_mscan.c"/>
    <files mask="freemaster_mscan_dsc.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
    <files mask="freemaster_flexcan.h"/>
    <files mask="freemaster_flexcan_dsc.h"/>
    <files mask="freemaster_flexcanfd.h"/>
    <files mask="freemaster_mcan.h"/>
    <files mask="freemaster_mscan.h"/>
    <files mask="freemaster_mscan_dsc.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_serial_lpsci.c"/>
    <files mask="freemaster_serial_lpuart.c"/>
    <files mask="freemaster_serial_miniusart.c"/>
    <files mask="freemaster_serial_qsci.c"/>
    <files mask="freemaster_serial_uart.c"/>
    <files mask="freemaster_serial_usart.c"/>
    <files mask="freemaster_serial_usb.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_serial_lpsci.h"/>
    <files mask="freemaster_serial_lpuart.h"/>
    <files mask="freemaster_serial_miniusart.h"/>
    <files mask="freemaster_serial_qsci.h"/>
    <files mask="freemaster_serial_uart.h"/>
    <files mask="freemaster_serial_usart.h"/>
    <files mask="freemaster_serial_usb.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="src">
    <files mask="freemaster_serial_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include">
    <files mask="freemaster_serial_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="src">
    <files mask="freemaster_flexcan.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include">
    <files mask="freemaster_flexcan.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="src">
    <files mask="freemaster_usb.c"/>
    <files mask="freemaster_usb_device_descriptor.c"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="c_include">
    <files mask="freemaster_usb.h"/>
    <files mask="freemaster_usb_device_descriptor.h"/>
    <files mask="usb_device_descriptor.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="doc">
    <files mask="readme.txt"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="ChangeLogKSDK.txt"/>
  </source>
</component>-->
    <component id="middleware.fmstr.platform_s32.MCXA156" name="FreeMASTER S32 driver" brief="FreeMASTER driver code for S32 platform." version="3.0.7" full_name="FreeMASTER communication driver for S32 platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_pa32.MCXA156" name="FreeMASTER Power Architecture driver" brief="FreeMASTER driver code for Power Architecture 32bit platform." version="3.0.7" full_name="FreeMASTER communication driver for Power Architecture 32bit platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32be" type="c_include">
        <files mask="freemaster_gen32be.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_pa32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32be" type="c_include"/>
        <include_path relative_path="src/platforms/gen32be" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_s12z.MCXA156" name="FreeMASTER S12Z driver" brief="FreeMASTER driver code for S12Z platform." version="3.0.7" full_name="FreeMASTER communication driver for S12Z platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/s12z" type="c_include">
        <files mask="freemaster_s12z.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s12z.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/s12z" type="c_include"/>
        <include_path relative_path="src/platforms/s12z" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.MCXA156" name="ram" brief="FatFs_RAM" version="0.15.0" full_name="Fatfs RAM layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MCXA156"/>
          <component_dependency value="middleware.fatfs.template_ram.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
        <include_path relative_path="source/fsl_ram_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.MCXA156" name="emwin" brief="emWin library" version="6.38" full_name="middleware emWin" category="Graphics/emWin graphics library" user_visible="true" type="middleware" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <all>
          <component_dependency value="middleware.emwin.template.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="emWin_header" type="c_include">
        <files mask="AppWizard.h"/>
        <files mask="BUTTON.h"/>
        <files mask="BUTTON_Private.h"/>
        <files mask="CALENDAR.h"/>
        <files mask="CHECKBOX.h"/>
        <files mask="CHECKBOX_Private.h"/>
        <files mask="CHOOSECOLOR.h"/>
        <files mask="CHOOSEFILE.h"/>
        <files mask="DIALOG.h"/>
        <files mask="DIALOG_Type.h"/>
        <files mask="DROPDOWN.h"/>
        <files mask="DROPDOWN_Private.h"/>
        <files mask="EDIT.h"/>
        <files mask="EDIT_Private.h"/>
        <files mask="FRAMEWIN.h"/>
        <files mask="FRAMEWIN_Private.h"/>
        <files mask="GAUGE.h"/>
        <files mask="GAUGE_Private.h"/>
        <files mask="GRAPH.h"/>
        <files mask="GRAPH_Private.h"/>
        <files mask="GUI.h"/>
        <files mask="GUIDRV_BitPlains.h"/>
        <files mask="GUIDRV_DCache.h"/>
        <files mask="GUIDRV_DCache_Private.h"/>
        <files mask="GUIDRV_Dist.h"/>
        <files mask="GUIDRV_FlexColor.h"/>
        <files mask="GUIDRV_FlexColor_Private.h"/>
        <files mask="GUIDRV_IST3088.h"/>
        <files mask="GUIDRV_IST3088_Private.h"/>
        <files mask="GUIDRV_Lin.h"/>
        <files mask="GUIDRV_Lin_Opt_16.h"/>
        <files mask="GUIDRV_Lin_Opt_24.h"/>
        <files mask="GUIDRV_Lin_Opt_32.h"/>
        <files mask="GUIDRV_Lin_Opt_8.h"/>
        <files mask="GUIDRV_Lin_Private.h"/>
        <files mask="GUIDRV_NoOpt_1_8.h"/>
        <files mask="GUIDRV_Null.h"/>
        <files mask="GUIDRV_S1D13748.h"/>
        <files mask="GUIDRV_S1D13748_Private.h"/>
        <files mask="GUIDRV_S1D13781.h"/>
        <files mask="GUIDRV_S1D13781_Private.h"/>
        <files mask="GUIDRV_S1D15G00.h"/>
        <files mask="GUIDRV_SH_MEM.h"/>
        <files mask="GUIDRV_SH_MEM_Private.h"/>
        <files mask="GUIDRV_SLin.h"/>
        <files mask="GUIDRV_SLin_Private.h"/>
        <files mask="GUIDRV_SPage.h"/>
        <files mask="GUIDRV_SPage_Private.h"/>
        <files mask="GUIDRV_SSD1926.h"/>
        <files mask="GUIDRV_SSD1926_Private.h"/>
        <files mask="GUITDRV_ADS7846.h"/>
        <files mask="GUI_ARRAY.h"/>
        <files mask="GUI_ARRAY_Private.h"/>
        <files mask="GUI_BMP_Private.h"/>
        <files mask="GUI_ConfDefaults.h"/>
        <files mask="GUI_Debug.h"/>
        <files mask="GUI_FontIntern.h"/>
        <files mask="GUI_GCache_Private.h"/>
        <files mask="GUI_GIF_Private.h"/>
        <files mask="GUI_JPEG_Private.h"/>
        <files mask="GUI_Private.h"/>
        <files mask="GUI_Resource.h"/>
        <files mask="GUI_SIM_Win32.h"/>
        <files mask="GUI_SPRITE_Private.h"/>
        <files mask="GUI_SPY_Private.h"/>
        <files mask="GUI_SVG_Global.h"/>
        <files mask="GUI_SVG_NanoVG.h"/>
        <files mask="GUI_SVG_NemaVG.h"/>
        <files mask="GUI_SVG_OpenVG.h"/>
        <files mask="GUI_SVG_Private.h"/>
        <files mask="GUI_SVG_VGLite.h"/>
        <files mask="GUI_SetOrientation.h"/>
        <files mask="GUI_SetOrientationCX.h"/>
        <files mask="GUI_Type.h"/>
        <files mask="GUI_VNC.h"/>
        <files mask="GUI_Version.h"/>
        <files mask="GUI__BiDi_Brackets.h"/>
        <files mask="GUI__BiDi_Types.h"/>
        <files mask="Global.h"/>
        <files mask="HEADER.h"/>
        <files mask="HEADER_Private.h"/>
        <files mask="ICONVIEW.h"/>
        <files mask="ICONVIEW_Private.h"/>
        <files mask="IMAGE.h"/>
        <files mask="IMAGE_Private.h"/>
        <files mask="IP_FS.h"/>
        <files mask="JPEGConf.h"/>
        <files mask="KEYBOARD.h"/>
        <files mask="KEYBOARD_Private.h"/>
        <files mask="KNOB.h"/>
        <files mask="KNOB_Private.h"/>
        <files mask="LCD.h"/>
        <files mask="LCD_ConfDefaults.h"/>
        <files mask="LCD_Private.h"/>
        <files mask="LCD_Protected.h"/>
        <files mask="LCD_SIM.h"/>
        <files mask="LCD_X_8080_16.h"/>
        <files mask="LCD_X_8080_8.h"/>
        <files mask="LCD_X_I2C.h"/>
        <files mask="LCD_X_Serial_3Pin.h"/>
        <files mask="LISTBOX.h"/>
        <files mask="LISTBOX_Private.h"/>
        <files mask="LISTVIEW.h"/>
        <files mask="LISTVIEW_Private.h"/>
        <files mask="LISTWHEEL.h"/>
        <files mask="LISTWHEEL_Private.h"/>
        <files mask="MENU.h"/>
        <files mask="MENU_Private.h"/>
        <files mask="MESSAGEBOX.h"/>
        <files mask="MOVIE.h"/>
        <files mask="MOVIE_Private.h"/>
        <files mask="MULTIEDIT.h"/>
        <files mask="MULTIEDIT_Private.h"/>
        <files mask="MULTIPAGE.h"/>
        <files mask="MULTIPAGE_Private.h"/>
        <files mask="PROGBAR.h"/>
        <files mask="PROGBAR_Private.h"/>
        <files mask="QRCODE.h"/>
        <files mask="QRCODE_Private.h"/>
        <files mask="RADIO.h"/>
        <files mask="RADIO_Private.h"/>
        <files mask="ROTARY.h"/>
        <files mask="ROTARY_Private.h"/>
        <files mask="SCROLLBAR.h"/>
        <files mask="SCROLLBAR_Private.h"/>
        <files mask="SCROLLER.h"/>
        <files mask="SCROLLER_Private.h"/>
        <files mask="SEGGER.h"/>
        <files mask="SLIDER.h"/>
        <files mask="SLIDER_Private.h"/>
        <files mask="SPINBOX.h"/>
        <files mask="SPINBOX_Private.h"/>
        <files mask="SWIPELIST.h"/>
        <files mask="SWIPELIST_Private.h"/>
        <files mask="SWITCH.h"/>
        <files mask="SWITCH_Private.h"/>
        <files mask="TEXT.h"/>
        <files mask="TEXT_Private.h"/>
        <files mask="TICKER.h"/>
        <files mask="TICKER_Private.h"/>
        <files mask="TREEVIEW.h"/>
        <files mask="TREEVIEW_Private.h"/>
        <files mask="WHEEL.h"/>
        <files mask="WHEEL_Private.h"/>
        <files mask="WIDGET.h"/>
        <files mask="WIDGET_ID.h"/>
        <files mask="WINDOW_Private.h"/>
        <files mask="WM.h"/>
        <files mask="WM_GUI.h"/>
        <files mask="WM_Intern.h"/>
        <files mask="WM_Layout.h"/>
      </source>
      <source relative_path="emWin_Config" type="c_include">
        <files mask="GUIConf.h"/>
        <files mask="LCDConf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="emWin_library/ARMGCC" type="lib" device_cores="cm33_core0_MCXA156" dsp="true">
        <files mask="libemWin_M33.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_emwin.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="emWin_header" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-common.MCXA156" name="camera-common" brief="Driver camera-common" version="1.0.0" full_name="Driver camera-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-common.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ap1302.MCXA156" name="camera-device-ap1302" brief="Driver camera-device-ap1302" version="1.0.1" full_name="Driver camera-device-ap1302" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ap1302" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MCXA156"/>
          <component_dependency value="driver.video-i2c.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ap1302.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ap1302.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ap1302.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-common.MCXA156" name="camera-device-common" brief="Driver camera-device-common" version="1.0.0" full_name="Driver camera-device-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/device" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-common.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-max9286.MCXA156" name="camera-device-max9286" brief="Driver camera-device-max9286" version="1.0.2" full_name="Driver camera-device-max9286" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/max9286" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MCXA156"/>
          <component_dependency value="driver.video-i2c.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max9286.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max9286.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-max9286.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-mt9m114.MCXA156" name="camera-device-mt9m114" brief="Driver camera-device-mt9m114" version="1.0.2" full_name="Driver camera-device-mt9m114" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/mt9m114" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MCXA156"/>
          <component_dependency value="driver.video-i2c.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mt9m114.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mt9m114.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-mt9m114.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov5640.MCXA156" name="camera-device-ov5640" brief="Driver camera-device-ov5640" version="1.0.1" full_name="Driver camera-device-ov5640" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov5640" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MCXA156"/>
          <component_dependency value="driver.camera-device-sccb.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov5640.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov5640.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov5640.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7670.MCXA156" name="camera-device-ov7670" brief="Driver camera-device-ov7670" version="1.0.2" full_name="Driver camera-device-ov7670" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7670" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MCXA156"/>
          <component_dependency value="driver.camera-device-sccb.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7670.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7670.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov7670.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7725.MCXA156" name="camera-device-ov7725" brief="Driver camera-device-ov7725" version="1.0.1" full_name="Driver camera-device-ov7725" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7725" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MCXA156"/>
          <component_dependency value="driver.camera-device-sccb.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7725.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7725.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov7725.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-sccb.MCXA156" name="camera-device-sccb" brief="Driver camera-device-sccb" version="1.0.1" full_name="Driver camera-device-sccb" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/camera/device/sccb" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sccb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sccb.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-sccb.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-receiver-common.MCXA156" name="camera-receiver-common" brief="Driver camera-receiver-common" version="1.0.0" full_name="Driver camera-receiver-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/receiver" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_receiver.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-receiver-common.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi.MCXA156" name="dbi" brief="Driver dbi" version="1.0.0" full_name="Driver dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-common.MCXA156" name="dc-fb-common" brief="Driver dc-fb-common" version="1.0.0" full_name="Driver dc-fb-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-common.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dbi.MCXA156" name="dc-fb-dbi" brief="Driver dc-fb-dbi" version="1.0.0" full_name="Driver dc-fb-dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dbi" project_base_path="video">
      <defines>
        <define name="MCUX_DBI_LEGACY" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <component_dependency value="driver.dbi.MCXA156"/>
          <component_dependency value="driver.dc-fb-common.MCXA156"/>
          <component_dependency value="driver.display-common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dbi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-dbi.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-ssd1963.MCXA156" name="dc-fb-ssd1963" brief="Driver dc-fb-ssd1963" version="1.0.2" full_name="Driver dc-fb-ssd1963" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/ssd1963" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <component_dependency value="driver.dc-fb-common.MCXA156"/>
          <component_dependency value="driver.display-common.MCXA156"/>
          <component_dependency value="driver.ssd1963.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_ssd1963.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-ssd1963.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-adv7535.MCXA156" name="display-adv7535" brief="Driver display-adv7535" version="1.0.1" full_name="Driver display-adv7535" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/adv7535" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MCXA156"/>
          <component_dependency value="driver.video-i2c.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adv7535.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adv7535.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-adv7535.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-sn65dsi83.MCXA156" name="display-sn65dsi83" brief="Driver display-sn65dsi83" version="1.0.0" full_name="Driver display-sn65dsi83" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/sn65dsi83" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MCXA156"/>
          <component_dependency value="driver.video-i2c.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sn65dsi83.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sn65dsi83.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-sn65dsi83.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-common.MCXA156" name="display-common" brief="Driver display-common" version="1.0.0" full_name="Driver display-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_display.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-common.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6161.MCXA156" name="display-it6161" brief="Driver display-it6161" version="1.0.0" full_name="Driver display-it6161" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/it6161" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MCXA156"/>
          <component_dependency value="driver.video-i2c.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6161.h"/>
        <files mask="hdmi_tx.h"/>
        <files mask="mipi_rx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6161.c"/>
        <files mask="hdmi_tx.c"/>
        <files mask="mipi_rx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-it6161.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6263.MCXA156" name="display-it6263" brief="Driver display-it6263" version="1.0.1" full_name="Driver display-it6263" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/it6263" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MCXA156"/>
          <component_dependency value="driver.video-i2c.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6263.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6263.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-it6263.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fbdev.MCXA156" name="fbdev" brief="Driver fbdev" version="1.0.4" full_name="Driver fbdev" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/display/fbdev" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MCXA156"/>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fbdev.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fbdev.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fbdev.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-common.MCXA156" name="video-common" brief="Driver video-common" version="1.1.0" full_name="Driver video-common" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_video-common.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-i2c.MCXA156" name="video-i2c" brief="Driver video-i2c" version="1.0.1" full_name="Driver video-i2c" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/i2c" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_video-i2c.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MCXA156" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" category="Device/SDK Drivers" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpuart_adapter.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft5406_rt.MCXA156" name="ft5406_rt" brief="Driver ft5406_rt" version="1.0.0" full_name="Driver ft5406_rt" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/touch/ft5406_rt" project_base_path="touchpanel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft5406_rt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft5406_rt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft5406_rt.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft6x06.MCXA156" name="ft6x06" brief="Driver ft6x06" version="1.0.0" full_name="Driver ft6x06" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft6x06" project_base_path="touchpanel">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft6x06.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft6x06.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft6x06.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MCXA156" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.ctimer_adapter.MCXA156"/>
              <component_dependency value="platform.drivers.ctimer.MCXA156"/>
            </all>
            <all>
              <component_dependency value="component.lptmr_adapter.MCXA156"/>
              <component_dependency value="platform.drivers.lptmr.MCXA156"/>
            </all>
            <all>
              <component_dependency value="component.ostimer_adapter.MCXA156"/>
              <component_dependency value="platform.drivers.ostimer.MCXA156"/>
            </all>
          </any_of>
          <component_dependency value="component.lists.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_timer_manager.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ctimer_adapter.MCXA156" name="ctimer_adapter" brief="Component ctimer_adapter" version="1.0.0" full_name="Component ctimer_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_CTIMER" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ctimer.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ctimer_adapter.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lptmr_adapter.MCXA156" name="lptmr_adapter" brief="Component lptmr_adapter" version="1.0.0" full_name="Component lptmr_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_LPTMR" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lptmr.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lptmr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lptmr_adapter.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ostimer_adapter.MCXA156" name="ostimer_adapter" brief="Component ostimer_adapter" version="1.0.0" full_name="Component ostimer_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_OSTIMER" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ostimer.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ostimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ostimer_adapter.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ctimer_time_stamp_adapter.MCXA156" name="ctimer time stamp adapter" brief="Component ctimer time stamp adapter" version="1.0.0" full_name="component ctimer time stamp adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/time_stamp" project_base_path="component/time_stamp">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ctimer.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_time_stamp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ctimer_time_stamp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ctimer_time_stamp_adapter.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lptmr_time_stamp_adapter.MCXA156" name="lptmr time stamp adapter" brief="Component lptmr time stamp adapter" version="1.0.0" full_name="component lptmr time stamp adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/time_stamp" project_base_path="component/time_stamp">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lptmr.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_time_stamp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lptmr_time_stamp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lptmr_time_stamp_adapter.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ostimer_time_stamp_adapter.MCXA156" name="ostimer time stamp adapter" brief="Component ostimer time stamp adapter" version="1.0.0" full_name="component ostimer time stamp adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/time_stamp" project_base_path="component/time_stamp">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ostimer.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_time_stamp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ostimer_time_stamp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ostimer_time_stamp_adapter.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpspi_adapter.MCXA156" name="lpspi_adapter" brief="Component lpspi_adapter" version="1.0.0" full_name="Component lpspi_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/spi" project_base_path="component/spi">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <component_dependency value="platform.drivers.lpspi.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpspi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpspi_adapter.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MCXA156" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MCXA156/utilities/shell" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <component_dependency value="utility.str.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_shell.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MCXA156" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.serial_manager_spi.MCXA156"/>
            <component_dependency value="component.serial_manager_swo.MCXA156"/>
            <component_dependency value="component.serial_manager_uart.MCXA156"/>
            <component_dependency value="component.serial_manager_usb_cdc.MCXA156"/>
            <component_dependency value="component.serial_manager_virtual.MCXA156"/>
          </any_of>
          <component_dependency value="component.lists.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_spi.MCXA156" name="serial_manager_spi" brief="Component serial_manager_spi" version="1.0.0" full_name="Serial Manager spi" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SPI" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_MASTER" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_SLAVE" value="1"/>
        <define name="SERIAL_MANAGER_NON_BLOCKING_MODE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpspi_adapter.MCXA156"/>
          <component_dependency value="platform.drivers.lpspi.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_spi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_spi.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_usb_cdc.MCXA156" name="serial_manager_usb_cdc" brief="Component serial_manager_usb_cdc" version="1.0.0" full_name="Serial Manager USB CDC" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_USBCDC" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
        <define name="USB_DEVICE_CONFIG_CDC_ACM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MCXA156"/>
          <component_dependency value="middleware.usb.device.cdc.MCXA156"/>
          <component_dependency value="middleware.usb.device.common_header.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_usb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_usb.c"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
        <files mask="usb_device_config.h"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_usb_cdc.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="usb_cdc_adapter" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="usb_cdc_adapter" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxas21002cq.MCXA156" name="fxas21002cq" brief="Driver fxas21002cq" version="1.0.0" full_name="Driver fxas21002cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxas21002cq" project_base_path="gyroscope">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxas.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxas21002cq.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxls8974cf.MCXA156" name="fxls8974cf" brief="Driver fxls8974cf" version="1.0.0" full_name="Driver fxls8974cf" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxls8974cf" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxls.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxls8974cf.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxos8700cq.MCXA156" name="fxos8700cq" brief="Driver fxos8700cq" version="1.0.0" full_name="Driver fxos8700cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxos8700cq" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxos8700cq.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.htu21d.MCXA156" name="htu21d" brief="Driver htu21d" version="1.0.0" full_name="Driver htu21d" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/htu21d" project_base_path="htu">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_htu21d.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_htu21d.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_htu21d.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.icm42688p.MCXA156" name="icm42688p" brief="Driver icm42688p" version="1.0.0" full_name="Driver icm42688p" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/icm42688p" project_base_path="icm42688p">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_icm42688p.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_icm42688p.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_icm42688p.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.lsm6dso.MCXA156" name="lsm6dso" brief="Driver lsm6dso" version="1.0.0" full_name="Driver lsm6dso" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/lsm6dso" project_base_path="tilt_pedo">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lsm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lsm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lsm6dso.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.max30101.MCXA156" name="max30101" brief="Driver max30101" version="1.0.0" full_name="Driver max30101" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/max30101" project_base_path="heartrate">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_max30101.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8451q.MCXA156" name="mma8451q" brief="Driver mma8451q" version="1.0.0" full_name="Driver mma8451q" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8451q" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mma8451q.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8652fc.MCXA156" name="mma8652fc" brief="Driver mma8652fc" version="1.0.0" full_name="Driver mma8652fc" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8652fc" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mma8652fc.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.nmh1000.MCXA156" name="nmh1000" brief="Driver nmh1000" version="1.0.0" full_name="Driver nmh1000" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/nmh1000" project_base_path="nmh1000">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_nmh1000.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_nmh1000.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_nmh1000.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.p3t1755.MCXA156" name="p3t1755" brief="Driver p3t1755" version="2.0.0" full_name="Driver p3t1755" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/p3t1755" project_base_path="component/p3t1755">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_p3t1755.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_p3t1755.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_p3t1755.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tsl2561.MCXA156" name="tsl2561" brief="Driver tsl2561" version="1.0.0" full_name="Driver tsl2561" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/tsl2561" project_base_path="tsl">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tsl2561.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tsl2561.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tsl2561.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.rtt.MCXA156" name="segger_rtt" brief="SEGGER Real Time Transfer(RTT)" version="7.22.0" full_name="SEGGER RTT" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/rtt" project_base_path="rtt">
      <dependencies>
        <all>
          <component_dependency value="driver.rtt.template.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="License.txt" hidden="true"/>
        <files mask="README.txt" hidden="true"/>
        <files mask="License.txt"/>
        <files mask="README.txt"/>
      </source>
      <source relative_path="RTT" type="src">
        <files mask="SEGGER_RTT.c"/>
        <files mask="SEGGER_RTT_printf.c"/>
      </source>
      <source relative_path="RTT" type="c_include">
        <files mask="SEGGER_RTT.h"/>
      </source>
      <source relative_path="RTT" type="asm_include">
        <files mask="SEGGER_RTT_ASM_ARMv7M.S"/>
      </source>
      <source relative_path="Syscalls" type="src">
        <files mask="SEGGER_RTT_Syscalls_GCC.c"/>
        <files mask="SEGGER_RTT_Syscalls_IAR.c"/>
        <files mask="SEGGER_RTT_Syscalls_KEIL.c"/>
        <files mask="SEGGER_RTT_Syscalls_SES.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_rtt.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTT" type="c_include"/>
        <include_path relative_path="RTT" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MCXA156" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" category="NXP Component/OS Abstraction Layer" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.freertos-kernel.MCXA156"/>
              </not>
              <component_dependency value="component.osa_bm.MCXA156"/>
            </all>
            <all>
              <component_dependency value="component.osa_free_rtos.MCXA156"/>
              <component_dependency value="middleware.freertos-kernel.MCXA156"/>
            </all>
          </any_of>
          <component_dependency value="component.lists.MCXA156"/>
          <component_dependency value="component.osa_template_config.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.osa_bm.MCXA156" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="0"/>
      </defines>
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          </not>
          <component_dependency value="component.osa.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
        <files mask="fsl_os_abstraction.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MCXA156" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MCXA156"/>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
        <files mask="fsl_os_abstraction.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.messaging.MCXA156" name="messaging" brief="Component messaging" version="1.0.0" full_name="Component messaging" category="Device/SDK Drivers" user_visible="true" type="other" package_base_path="components/messaging" project_base_path="component/messaging">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MCXA156"/>
          <component_dependency value="component.mem_manager.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_messaging.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_messaging.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_messaging.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MCXA156" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.mem_manager_freertos.MCXA156"/>
              <component_dependency value="middleware.freertos-kernel.MCXA156"/>
            </all>
            <component_dependency value="component.mem_manager_legacy.MCXA156"/>
            <component_dependency value="component.mem_manager_light.MCXA156"/>
          </any_of>
          <component_dependency value="component.lists.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_legacy.MCXA156" name="mem_manager_legacy" brief="Component mem_manager_legacy" version="1.0.0" full_name="Component mem_manager_legacy" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager_legacy.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_freertos.MCXA156" name="mem_manager_freertos" brief="Component mem_manager_freertos" version="1.0.0" full_name="Component mem_manager_freertos" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MCXA156"/>
          <component_dependency value="middleware.freertos-kernel.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager_freertos.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MCXA156" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager_light.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MCXA156" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lists.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.led.MCXA156" name="led" brief="Component led" version="1.0.0" full_name="Component led" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="component.gpio_adapter.MCXA156"/>
          <component_dependency value="platform.drivers.gpio.MCXA156"/>
          <component_dependency value="component.timer_manager.MCXA156"/>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_led.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_adapter.MCXA156" name="flash_adapter" brief="Component flash_adapter" version="1.0.0" full_name="Component flash_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="component.mcxw_flash_adapter.MCXA156"/>
          <component_dependency value="platform.drivers.romapi.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_adapter.MCXA156.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.mcxw_flash_adapter.MCXA156" name="mcxw_flash_adapter" brief="Component mcxw_flash_adapter" version="1.0.0" full_name="Component mcxw_flash_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.romapi.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_mcxw_flash.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mcxw_flash_adapter.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus.MCXA156" name="i3c_bus" brief="Component i3c_bus" version="1.0.1" full_name="Component i3c_bus" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_bus.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus_adapter.MCXA156" name="i3c_bus_adapter" brief="Component i3c_bus_adapter" version="1.1.0" full_name="Component i3c_bus_adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="component.i3c_bus.MCXA156"/>
          <component_dependency value="platform.drivers.i3c.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_bus_adapter.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_adapter.MCXA156" name="i3c_adapter" brief="Component i3c_adapter" version="1.0.0" full_name="Component i3c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <defines>
        <define name="SDK_I3C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MCXA156"/>
          <component_dependency value="platform.drivers.i3c.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_adapter.MCXA156.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.lpi2c_adapter.MCXA156" name="lpi2c_adapter" brief="Component lpi2c_adapter" version="1.0.0" full_name="Component lpi2c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
          <component_dependency value="component.i2c_adapter_interface.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpi2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpi2c_adapter.MCXA156.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.i2c_adapter_interface.MCXA156" name="i2c_adapter_interface" brief="Component i2c_adapter_interface" version="1.0.0" full_name="Component i2c_adapter_interface" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="platform.drivers.lpi2c.MCXA156"/>
              <component_dependency value="component.lpi2c_adapter.MCXA156"/>
            </all>
            <all>
              <component_dependency value="component.i3c_adapter.MCXA156"/>
              <component_dependency value="platform.drivers.i3c.MCXA156"/>
            </all>
          </any_of>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i2c_adapter_interface.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i2c_mux_pca954x.MCXA156" name="i2c_mux_pca954x" brief="Component i2c_mux_pca954x" version="1.0.0" full_name="Component i2c_mux_pca954x" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c/muxes" project_base_path="component/i2c/muxes">
      <dependencies>
        <all>
          <component_dependency value="component.i2c_mux.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pca954x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pca954x.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i2c_mux_pca954x.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.enable_pca9544.MCXA156" name="enable_pca9544" brief="Component enable_pca9544" version="1.0.0" full_name="Component enable_pca9544" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c/muxes" project_base_path="component/i2c/muxes">
      <defines>
        <define name="MCUX_ENABLE_PCA9544" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_mux_pca954x.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_enable_pca9544.MCXA156.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.enable_pca9548.MCXA156" name="enable_pca9548" brief="Component enable_pca9548" version="1.0.0" full_name="Component enable_pca9548" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c/muxes" project_base_path="component/i2c/muxes">
      <defines>
        <define name="MCUX_ENABLE_PCA9548" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_mux_pca954x.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_enable_pca9548.MCXA156.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.at_least_one_i2c_mux_device_enabled.MCXA156" name="at_least_one_i2c_mux_device_enabled" brief="Component at_least_one_i2c_mux_device_enabled" version="1.0.0" full_name="Component at_least_one_i2c_mux_device_enabled" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c/muxes" project_base_path="component/i2c/muxes">
      <dependencies>
        <all>
          <component_dependency value="component.i2c_mux_pca954x.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_at_least_one_i2c_mux_device_enabled.MCXA156.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.gpio_adapter.MCXA156" name="gpio_adapter" brief="Component gpio_adapter" version="1.0.1" full_name="Component gpio_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.port.MCXA156"/>
          <component_dependency value="platform.drivers.gpio.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_gpio_adapter.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nor_lpspi.MCXA156" name="flash_nor_lpspi" brief="Component flash_nor_lpspi" version="1.0.0" full_name="Component flash_nor_lpspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="nor" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
      <source relative_path="nor/lpspi" type="src">
        <files mask="fsl_lpspi_nor_flash.c"/>
        <files mask="fsl_lpspi_mem_adapter.c"/>
      </source>
      <source relative_path="nor/lpspi" type="c_include">
        <files mask="fsl_lpspi_nor_flash.h"/>
        <files mask="fsl_lpspi_mem_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_nor_lpspi.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="nor" type="c_include"/>
        <include_path relative_path="nor/lpspi" type="c_include"/>
        <include_path relative_path="nor" type="asm_include"/>
        <include_path relative_path="nor/lpspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip.MCXA156" name="mflash onchip" brief="mflash onchip" version="1.0.0" full_name="mflash onchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <defines>
        <define name="MFLASH_FILE_BASEADDR" value="122880"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.romapi.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_common.h"/>
        <files mask="mflash_file.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_file.c"/>
      </source>
      <source relative_path="mcxa" type="src">
        <files mask="mflash_drv.c"/>
      </source>
      <source relative_path="mcxa" type="c_include">
        <files mask="mflash_drv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_onchip.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="mcxa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="mcxa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_offchip.MCXA156" name="mflash offchip" brief="mflash offchip" version="1.0.0" full_name="mflash offchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.romapi.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_offchip.MCXA156.cmake" hidden="true"/>
      </source>
    </component>
    <component id="driver.ili9341.MCXA156" name="ili9341" brief="Driver ili9341" version="1.0.2" full_name="Driver ili9341" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ili9341" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ili9341.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ili9341.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ili9341.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.psp27801.MCXA156" name="psp27801" brief="Driver psp27801" version="1.0.0" full_name="Driver psp27801" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/psp27801" project_base_path="oled">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_psp27801.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_psp27801.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_psp27801.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ssd1963.MCXA156" name="ssd1963" brief="Driver ssd1963" version="1.2.0" full_name="Driver ssd1963" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ssd1963" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ssd1963.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ssd1963.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.st7796s.MCXA156" name="st7796s" brief="Driver st7796s" version="1.0.0" full_name="Driver st7796s" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/st7796s" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_st7796s.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_st7796s.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_st7796s.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MCXA156" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_common_task.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.button.MCXA156" name="button" brief="Component button" version="1.0.0" full_name="Component button" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="component.gpio_adapter.MCXA156"/>
          <component_dependency value="platform.drivers.gpio.MCXA156"/>
          <component_dependency value="component.timer_manager.MCXA156"/>
          <device_dependency value="MCXA156"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_button.MCXA156.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
